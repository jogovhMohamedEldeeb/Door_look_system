

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Nov 02 22:11:01 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42   000000                     
    43                           ; Generated 23/03/2023 GMT
    44                           ; 
    45                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4620 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77   000000                     
    78                           	psect	idataCOMRAM
    79   0022C8                     __pidataCOMRAM:
    80                           	callstack 0
    81                           
    82                           ;initializer for _lat_registers
    83   0022C8  89                 	db	137
    84   0022C9  0F                 	db	15
    85   0022CA  8A                 	db	138
    86   0022CB  0F                 	db	15
    87   0022CC  8B                 	db	139
    88   0022CD  0F                 	db	15
    89   0022CE  8C                 	db	140
    90   0022CF  0F                 	db	15
    91   0022D0  8D                 	db	141
    92   0022D1  0F                 	db	15
    93                           
    94                           ;initializer for _port_registers
    95   0022D2  80                 	db	128
    96   0022D3  0F                 	db	15
    97   0022D4  81                 	db	129
    98   0022D5  0F                 	db	15
    99   0022D6  82                 	db	130
   100   0022D7  0F                 	db	15
   101   0022D8  83                 	db	131
   102   0022D9  0F                 	db	15
   103   0022DA  84                 	db	132
   104   0022DB  0F                 	db	15
   105                           
   106                           ;initializer for _tris_registers
   107   0022DC  92                 	db	146
   108   0022DD  0F                 	db	15
   109   0022DE  93                 	db	147
   110   0022DF  0F                 	db	15
   111   0022E0  94                 	db	148
   112   0022E1  0F                 	db	15
   113   0022E2  95                 	db	149
   114   0022E3  0F                 	db	15
   115   0022E4  96                 	db	150
   116   0022E5  0F                 	db	15
   117                           
   118                           ;initializer for _password
   119   0022E6  E240               	dw	57920
   120   0022E8  0001               	dw	1
   121                           
   122                           ;initializer for _lcd_output
   123   0022EA  0E                 	db	14
   124                           
   125                           ;initializer for _ret
   126   0022EB  01                 	db	1
   127                           
   128                           ;initializer for _keypad
   129   0022EC  03                 	db	3
   130   0022ED  0B                 	db	11
   131   0022EE  13                 	db	19
   132   0022EF  1B                 	db	27
   133   0022F0  63                 	db	99
   134   0022F1  6B                 	db	107
   135   0022F2  73                 	db	115
   136   0022F3  00                 	db	0
   137                           
   138                           ;initializer for _lcd
   139   0022F4  02                 	db	2
   140   0022F5  0A                 	db	10
   141   0022F6  12                 	db	18
   142   0022F7  1A                 	db	26
   143   0022F8  22                 	db	34
   144   0022F9  2A                 	db	42
   145                           
   146                           ;initializer for _motor_2
   147   0022FA  20                 	db	32
   148   0022FB  28                 	db	40
   149                           
   150                           ;initializer for _motor_1
   151   0022FC  10                 	db	16
   152   0022FD  18                 	db	24
   153                           
   154                           ;initializer for _led_green
   155   0022FE  08                 	db	8
   156                           
   157                           	psect	smallconst
   158   001000                     __psmallconst:
   159                           	callstack 0
   160   001000  00                 	db	0
   161   001001                     _btn_values:
   162                           	callstack 0
   163   001001  31                 	db	49
   164   001002  32                 	db	50
   165   001003  33                 	db	51
   166   001004  00                 	db	0
   167   001005  34                 	db	52
   168   001006  35                 	db	53
   169   001007  36                 	db	54
   170   001008  00                 	db	0
   171   001009  37                 	db	55
   172   00100A  38                 	db	56
   173   00100B  39                 	db	57
   174   00100C  00                 	db	0
   175   00100D  2A                 	db	42
   176   00100E  30                 	db	48
   177   00100F  23                 	db	35
   178   001010  00                 	db	0
   179   001011                     __end_of_btn_values:
   180                           	callstack 0
   181   001011                     STR_4:
   182   001011  49                 	db	73	;'I'
   183   001012  6E                 	db	110	;'n'
   184   001013  63                 	db	99	;'c'
   185   001014  6F                 	db	111	;'o'
   186   001015  72                 	db	114	;'r'
   187   001016  72                 	db	114	;'r'
   188   001017  65                 	db	101	;'e'
   189   001018  63                 	db	99	;'c'
   190   001019  74                 	db	116	;'t'
   191   00101A  20                 	db	32
   192   00101B  50                 	db	80	;'P'
   193   00101C  61                 	db	97	;'a'
   194   00101D  73                 	db	115	;'s'
   195   00101E  73                 	db	115	;'s'
   196   00101F  77                 	db	119	;'w'
   197   001020  6F                 	db	111	;'o'
   198   001021  72                 	db	114	;'r'
   199   001022  64                 	db	100	;'d'
   200   001023  21                 	db	33
   201   001024  00                 	db	0
   202   001025                     STR_6:
   203   001025  54                 	db	84	;'T'
   204   001026  72                 	db	114	;'r'
   205   001027  79                 	db	121	;'y'
   206   001028  20                 	db	32
   207   001029  61                 	db	97	;'a'
   208   00102A  67                 	db	103	;'g'
   209   00102B  61                 	db	97	;'a'
   210   00102C  69                 	db	105	;'i'
   211   00102D  6E                 	db	110	;'n'
   212   00102E  20                 	db	32
   213   00102F  69                 	db	105	;'i'
   214   001030  6E                 	db	110	;'n'
   215   001031  20                 	db	32
   216   001032  20                 	db	32
   217   001033  20                 	db	32
   218   001034  20                 	db	32
   219   001035  73                 	db	115	;'s'
   220   001036  65                 	db	101	;'e'
   221   001037  63                 	db	99	;'c'
   222   001038  00                 	db	0
   223   001039                     STR_1:
   224   001039  45                 	db	69	;'E'
   225   00103A  6E                 	db	110	;'n'
   226   00103B  74                 	db	116	;'t'
   227   00103C  65                 	db	101	;'e'
   228   00103D  72                 	db	114	;'r'
   229   00103E  20                 	db	32
   230   00103F  50                 	db	80	;'P'
   231   001040  61                 	db	97	;'a'
   232   001041  73                 	db	115	;'s'
   233   001042  73                 	db	115	;'s'
   234   001043  77                 	db	119	;'w'
   235   001044  6F                 	db	111	;'o'
   236   001045  72                 	db	114	;'r'
   237   001046  64                 	db	100	;'d'
   238   001047  3A                 	db	58	;':'
   239   001048  00                 	db	0
   240   001049                     STR_2:
   241   001049  44                 	db	68	;'D'
   242   00104A  6F                 	db	111	;'o'
   243   00104B  6F                 	db	111	;'o'
   244   00104C  72                 	db	114	;'r'
   245   00104D  20                 	db	32
   246   00104E  4F                 	db	79	;'O'
   247   00104F  70                 	db	112	;'p'
   248   001050  65                 	db	101	;'e'
   249   001051  6E                 	db	110	;'n'
   250   001052  65                 	db	101	;'e'
   251   001053  64                 	db	100	;'d'
   252   001054  20                 	db	32
   253   001055  00                 	db	0
   254   001056  00                 	db	0	; dummy byte at the end
   255   000000                     
   256                           	psect	nvCOMRAM
   257   000066                     __pnvCOMRAM:
   258                           	callstack 0
   259   000066                     _keypad_value:
   260                           	callstack 0
   261   000066                     	ds	1
   262   000000                     _LATA	set	3977
   263   000000                     _PORTE	set	3972
   264   000000                     _PORTD	set	3971
   265   000000                     _PORTC	set	3970
   266   000000                     _PORTB	set	3969
   267   000000                     _PORTA	set	3968
   268   000000                     _TRISA	set	3986
   269   000000                     _TRISE	set	3990
   270   000000                     _TRISD	set	3989
   271   000000                     _TRISC	set	3988
   272   000000                     _TRISB	set	3987
   273   000000                     _LATE	set	3981
   274   000000                     _LATD	set	3980
   275   000000                     _LATC	set	3979
   276   000000                     _LATB	set	3978
   277                           
   278                           ; #config settings
   279                           
   280                           	psect	cinit
   281   002300                     __pcinit:
   282                           	callstack 0
   283   002300                     start_initialization:
   284                           	callstack 0
   285   002300                     __initialization:
   286                           	callstack 0
   287                           
   288                           ; Initialize objects allocated to COMRAM (55 bytes)
   289                           ; load TBLPTR registers with __pidataCOMRAM
   290   002300  0EC8               	movlw	low __pidataCOMRAM
   291   002302  6EF6               	movwf	tblptrl,c
   292   002304  0E22               	movlw	high __pidataCOMRAM
   293   002306  6EF7               	movwf	tblptrh,c
   294   002308  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   295   00230A  6EF8               	movwf	tblptru,c
   296   00230C  EE00  F001         	lfsr	0,__pdataCOMRAM
   297   002310  EE10 F037          	lfsr	1,55
   298   002314                     copy_data0:
   299   002314  0009               	tblrd		*+
   300   002316  CFF5 FFEE          	movff	tablat,postinc0
   301   00231A  50E5               	movf	postdec1,w,c
   302   00231C  50E1               	movf	fsr1l,w,c
   303   00231E  E1FA               	bnz	copy_data0
   304                           
   305                           ; Clear objects allocated to COMRAM (10 bytes)
   306   002320  EE00  F05C         	lfsr	0,__pbssCOMRAM
   307   002324  0E0A               	movlw	10
   308   002326                     clear_0:
   309   002326  6AEE               	clrf	postinc0,c
   310   002328  06E8               	decf	wreg,f,c
   311   00232A  E1FD               	bnz	clear_0
   312   00232C                     end_of_initialization:
   313                           	callstack 0
   314   00232C                     __end_of__initialization:
   315                           	callstack 0
   316   00232C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   317   00232E  6EF8               	movwf	tblptru,c
   318   002330  0100               	movlb	0
   319   002332  EF2C  F008         	goto	_main	;jump to C main() function
   320                           
   321                           	psect	bssCOMRAM
   322   00005C                     __pbssCOMRAM:
   323                           	callstack 0
   324   00005C                     _entered_password:
   325                           	callstack 0
   326   00005C                     	ds	4
   327   000060                     _incorrect_pass:
   328                           	callstack 0
   329   000060                     	ds	1
   330   000061                     _number_of_clicks:
   331                           	callstack 0
   332   000061                     	ds	1
   333   000062                     led_turn_off@F3037:
   334                           	callstack 0
   335   000062                     	ds	1
   336   000063                     led_turn_on@F3032:
   337                           	callstack 0
   338   000063                     	ds	1
   339   000064                     led_intialiaze@F3027:
   340                           	callstack 0
   341   000064                     	ds	1
   342   000065                     _led_red:
   343                           	callstack 0
   344   000065                     	ds	1
   345                           
   346                           	psect	dataCOMRAM
   347   000001                     __pdataCOMRAM:
   348                           	callstack 0
   349   000001                     _lat_registers:
   350                           	callstack 0
   351   000001                     	ds	10
   352   00000B                     _port_registers:
   353                           	callstack 0
   354   00000B                     	ds	10
   355   000015                     _tris_registers:
   356                           	callstack 0
   357   000015                     	ds	10
   358   00001F                     _password:
   359                           	callstack 0
   360   00001F                     	ds	4
   361   000023                     _lcd_output:
   362                           	callstack 0
   363   000023                     	ds	1
   364   000024                     _ret:
   365                           	callstack 0
   366   000024                     	ds	1
   367   000025                     _keypad:
   368                           	callstack 0
   369   000025                     	ds	8
   370   00002D                     _lcd:
   371                           	callstack 0
   372   00002D                     	ds	6
   373   000033                     _motor_2:
   374                           	callstack 0
   375   000033                     	ds	2
   376   000035                     _motor_1:
   377                           	callstack 0
   378   000035                     	ds	2
   379   000037                     _led_green:
   380                           	callstack 0
   381   000037                     	ds	1
   382                           
   383                           	psect	cstackCOMRAM
   384   000038                     __pcstackCOMRAM:
   385                           	callstack 0
   386   000038                     ?___awdiv:
   387                           	callstack 0
   388   000038                     ?___lmul:
   389                           	callstack 0
   390   000038                     gpio_pin_direction_intialize@_pin_config:
   391                           	callstack 0
   392   000038                     gpio_pin_write_logic@_pin_config:
   393                           	callstack 0
   394   000038                     gpio_pin_read_logic@_pin_config:
   395                           	callstack 0
   396   000038                     ___awdiv@dividend:
   397                           	callstack 0
   398   000038                     ___lmul@multiplier:
   399                           	callstack 0
   400                           
   401                           ; 4 bytes @ 0x0
   402   000038                     	ds	2
   403   00003A                     ??_gpio_pin_direction_intialize:
   404   00003A                     gpio_pin_write_logic@logic:
   405                           	callstack 0
   406   00003A                     gpio_pin_read_logic@logic:
   407                           	callstack 0
   408   00003A                     ___awdiv@divisor:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x2
   412   00003A                     	ds	1
   413   00003B                     ??_gpio_pin_write_logic:
   414                           
   415                           ; 1 bytes @ 0x3
   416   00003B                     	ds	1
   417   00003C                     ??_gpio_pin_read_logic:
   418   00003C                     ___awdiv@counter:
   419                           	callstack 0
   420   00003C                     ___lmul@multiplicand:
   421                           	callstack 0
   422                           
   423                           ; 4 bytes @ 0x4
   424   00003C                     	ds	1
   425   00003D                     ___awdiv@sign:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x5
   429   00003D                     	ds	1
   430   00003E                     ___awdiv@quotient:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x6
   434   00003E                     	ds	2
   435   000040                     ?___awmod:
   436                           	callstack 0
   437   000040                     gpio_pin_direction_intialize@ret:
   438                           	callstack 0
   439   000040                     ___awmod@dividend:
   440                           	callstack 0
   441   000040                     ___lmul@product:
   442                           	callstack 0
   443                           
   444                           ; 4 bytes @ 0x8
   445   000040                     	ds	1
   446   000041                     gpio_pin_write_logic@ret:
   447                           	callstack 0
   448   000041                     gpio_pin_read_logic@ret:
   449                           	callstack 0
   450                           
   451                           ; 1 bytes @ 0x9
   452   000041                     	ds	1
   453   000042                     lcd_4bit_send_enable@lcd:
   454                           	callstack 0
   455   000042                     lcd_4bit_send@lcd:
   456                           	callstack 0
   457   000042                     keypad_get_value@_keypad_obj:
   458                           	callstack 0
   459   000042                     led_turn_on@led:
   460                           	callstack 0
   461   000042                     led_turn_off@led:
   462                           	callstack 0
   463   000042                     dc_motor_move_right@_dc_motor:
   464                           	callstack 0
   465   000042                     dc_motor_move_left@_dc_motor:
   466                           	callstack 0
   467   000042                     dc_motor_stop@_dc_motor:
   468                           	callstack 0
   469   000042                     gpio_pin_intialize@_pin_config:
   470                           	callstack 0
   471   000042                     ___awmod@divisor:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0xA
   475   000042                     	ds	2
   476   000044                     ??_gpio_pin_intialize:
   477   000044                     ??_led_turn_on:
   478   000044                     ??_led_turn_off:
   479   000044                     lcd_4bit_send_enable@ret:
   480                           	callstack 0
   481   000044                     lcd_4bit_send@data_command:
   482                           	callstack 0
   483   000044                     dc_motor_move_right@ret:
   484                           	callstack 0
   485   000044                     dc_motor_move_left@ret:
   486                           	callstack 0
   487   000044                     dc_motor_stop@ret:
   488                           	callstack 0
   489   000044                     ___awmod@counter:
   490                           	callstack 0
   491   000044                     keypad_get_value@value:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0xC
   495   000044                     	ds	1
   496   000045                     lcd_4bit_send@ret:
   497                           	callstack 0
   498   000045                     led_turn_on@ret:
   499                           	callstack 0
   500   000045                     led_turn_off@ret:
   501                           	callstack 0
   502   000045                     gpio_pin_intialize@ret:
   503                           	callstack 0
   504   000045                     ___awmod@sign:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0xD
   508   000045                     	ds	1
   509   000046                     ??_keypad_get_value:
   510   000046                     led_turn_on@pin_config_obj:
   511                           	callstack 0
   512   000046                     led_turn_off@pin_config_obj:
   513                           	callstack 0
   514   000046                     lcd_4bit_send_command@lcd:
   515                           	callstack 0
   516   000046                     lcd_4bit_send_char_data@lcd:
   517                           	callstack 0
   518   000046                     keypad_intialize@_keypad_obj:
   519                           	callstack 0
   520   000046                     led_intialiaze@led:
   521                           	callstack 0
   522   000046                     dc_motor_intialize@_dc_motor:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0xE
   526   000046                     	ds	2
   527   000048                     ??_keypad_intialize:
   528   000048                     ??_led_intialiaze:
   529   000048                     lcd_4bit_send_command@command:
   530                           	callstack 0
   531   000048                     lcd_4bit_send_char_data@data:
   532                           	callstack 0
   533   000048                     keypad_get_value@ret:
   534                           	callstack 0
   535   000048                     dc_motor_intialize@ret:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x10
   539   000048                     	ds	1
   540   000049                     lcd_4bit_send_command@ret:
   541                           	callstack 0
   542   000049                     lcd_4bit_send_char_data@ret:
   543                           	callstack 0
   544   000049                     keypad_get_value@column_logic:
   545                           	callstack 0
   546   000049                     led_intialiaze@ret:
   547                           	callstack 0
   548                           
   549                           ; 1 bytes @ 0x11
   550   000049                     	ds	1
   551   00004A                     keypad_intialize@ret:
   552                           	callstack 0
   553   00004A                     keypad_get_value@l_counter:
   554                           	callstack 0
   555   00004A                     led_intialiaze@pin_config_obj:
   556                           	callstack 0
   557   00004A                     lcd_4bit_intialize@lcd:
   558                           	callstack 0
   559   00004A                     lcd_4bit_send_string@lcd:
   560                           	callstack 0
   561   00004A                     lcd_4bit_set_cursor@lcd:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x12
   565   00004A                     	ds	1
   566   00004B                     keypad_intialize@rows_counter:
   567                           	callstack 0
   568   00004B                     keypad_get_value@l_rows_counter:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0x13
   572   00004B                     	ds	1
   573   00004C                     ??_lcd_4bit_intialize:
   574   00004C                     lcd_4bit_set_cursor@row:
   575                           	callstack 0
   576   00004C                     keypad_intialize@columns_counter:
   577                           	callstack 0
   578   00004C                     keypad_get_value@l_columns_counter:
   579                           	callstack 0
   580   00004C                     lcd_4bit_send_string@str:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x14
   584   00004C                     	ds	1
   585   00004D                     ??_keypad_read_value:
   586   00004D                     lcd_4bit_set_cursor@column:
   587                           	callstack 0
   588                           
   589                           ; 1 bytes @ 0x15
   590   00004D                     	ds	1
   591   00004E                     ??_lcd_4bit_set_cursor:
   592   00004E                     lcd_4bit_intialize@l_counter:
   593                           	callstack 0
   594   00004E                     lcd_4bit_send_string@ret:
   595                           	callstack 0
   596   00004E                     keypad_read_value@val:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0x16
   600   00004E                     	ds	1
   601   00004F                     lcd_4bit_intialize@ret:
   602                           	callstack 0
   603   00004F                     keypad_read_value@new_val:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0x17
   607   00004F                     	ds	1
   608   000050                     lcd_4bit_set_cursor@ret:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0x18
   612   000050                     	ds	1
   613   000051                     lcd_4bit_send_char_data_pos@lcd:
   614                           	callstack 0
   615   000051                     lcd_4bit_send_string_pos@lcd:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x19
   619   000051                     	ds	2
   620   000053                     lcd_4bit_send_char_data_pos@row:
   621                           	callstack 0
   622   000053                     lcd_4bit_send_string_pos@row:
   623                           	callstack 0
   624                           
   625                           ; 1 bytes @ 0x1B
   626   000053                     	ds	1
   627   000054                     lcd_4bit_send_char_data_pos@column:
   628                           	callstack 0
   629   000054                     lcd_4bit_send_string_pos@column:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x1C
   633   000054                     	ds	1
   634   000055                     lcd_4bit_send_char_data_pos@data:
   635                           	callstack 0
   636   000055                     lcd_4bit_send_string_pos@str:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x1D
   640   000055                     	ds	1
   641   000056                     lcd_4bit_send_char_data_pos@ret:
   642                           	callstack 0
   643                           
   644                           ; 1 bytes @ 0x1E
   645   000056                     	ds	1
   646   000057                     lcd_4bit_send_string_pos@ret:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0x1F
   650   000057                     	ds	1
   651   000058                     ??_main:
   652                           
   653                           ; 1 bytes @ 0x20
   654   000058                     	ds	2
   655   00005A                     main@value:
   656                           	callstack 0
   657                           
   658                           ; 1 bytes @ 0x22
   659   00005A                     	ds	1
   660   00005B                     main@counter:
   661                           	callstack 0
   662                           
   663                           ; 1 bytes @ 0x23
   664   00005B                     	ds	1
   665                           
   666 ;;
   667 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   668 ;;
   669 ;; *************** function _main *****************
   670 ;; Defined at:
   671 ;;		line 116 in file "application.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;  counter         1   35[COMRAM] unsigned char 
   676 ;;  value           1   34[COMRAM] unsigned char 
   677 ;; Return value:  Size  Location     Type
   678 ;;                  2  301[None  ] int 
   679 ;; Registers used:
   680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   690 ;;Total ram usage:        4 bytes
   691 ;; Hardware stack levels required when called: 5
   692 ;; This function calls:
   693 ;;		___awdiv
   694 ;;		___awmod
   695 ;;		___lmul
   696 ;;		_app_init
   697 ;;		_dc_motor_move_left
   698 ;;		_dc_motor_move_right
   699 ;;		_dc_motor_stop
   700 ;;		_keypad_read_value
   701 ;;		_lcd_4bit_send_char_data_pos
   702 ;;		_lcd_4bit_send_command
   703 ;;		_lcd_4bit_send_string
   704 ;;		_lcd_4bit_send_string_pos
   705 ;;		_led_turn_off
   706 ;;		_led_turn_on
   707 ;; This function is called by:
   708 ;;		Startup code after reset
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text0
   713   001058                     __ptext0:
   714                           	callstack 0
   715   001058                     _main:
   716                           	callstack 26
   717   001058                     
   718                           ;application.c: 118:     app_init();
   719   001058  EC94  F010         	call	_app_init	;wreg free
   720   00105C                     
   721                           ;application.c: 120:     ret = lcd_4bit_send_string(&lcd, "Enter Password:");
   722   00105C  0E2D               	movlw	low _lcd
   723   00105E  6E4A               	movwf	lcd_4bit_send_string@lcd^0,c
   724   001060  0E00               	movlw	high _lcd
   725   001062  6E4B               	movwf	(lcd_4bit_send_string@lcd+1)^0,c
   726   001064  0E39               	movlw	low STR_1
   727   001066  6E4C               	movwf	lcd_4bit_send_string@str^0,c
   728   001068  0E10               	movlw	high STR_1
   729   00106A  6E4D               	movwf	(lcd_4bit_send_string@str+1)^0,c
   730   00106C  EC89  F00F         	call	_lcd_4bit_send_string	;wreg free
   731   001070  6E24               	movwf	_ret^0,c
   732   001072                     l2263:
   733                           
   734                           ;application.c: 123:     {;application.c: 125:         keypad_value = keypad_read_value(
      +                          );
   735   001072  EC2C  F010         	call	_keypad_read_value	;wreg free
   736   001076  6E66               	movwf	_keypad_value^0,c
   737   001078                     
   738                           ;application.c: 127:         if(6 == number_of_clicks)
   739   001078  0E06               	movlw	6
   740   00107A  1861               	xorwf	_number_of_clicks^0,w,c
   741   00107C  A4D8               	btfss	status,2,c
   742   00107E  EF43  F008         	goto	u1351
   743   001082  EF45  F008         	goto	u1350
   744   001086                     u1351:
   745   001086  EFB2  F009         	goto	l2339
   746   00108A                     u1350:
   747   00108A                     
   748                           ;application.c: 128:         {;application.c: 130:             number_of_clicks = 0;
   749   00108A  0E00               	movlw	0
   750   00108C  6E61               	movwf	_number_of_clicks^0,c
   751                           
   752                           ;application.c: 131:             lcd_output = 14;
   753   00108E  0E0E               	movlw	14
   754   001090  6E23               	movwf	_lcd_output^0,c
   755   001092                     
   756                           ;application.c: 134:             if(entered_password == password)
   757   001092  0E40               	movlw	64
   758   001094  185C               	xorwf	_entered_password^0,w,c
   759   001096  E10A               	bnz	u1361
   760   001098  0EE2               	movlw	226
   761   00109A  185D               	xorwf	(_entered_password+1)^0,w,c
   762   00109C  E107               	bnz	u1361
   763   00109E  045E               	decf	(_entered_password+2)^0,w,c
   764   0010A0  105F               	iorwf	(_entered_password+3)^0,w,c
   765   0010A2  A4D8               	btfss	status,2,c
   766   0010A4  EF56  F008         	goto	u1361
   767   0010A8  EF58  F008         	goto	u1360
   768   0010AC                     u1361:
   769   0010AC  EFAF  F008         	goto	l2287
   770   0010B0                     u1360:
   771   0010B0                     
   772                           ;application.c: 135:             {;application.c: 136:                 ret = led_turn_on
      +                          (&led_green);
   773   0010B0  0E37               	movlw	low _led_green
   774   0010B2  6E42               	movwf	led_turn_on@led^0,c
   775   0010B4  0E00               	movlw	high _led_green
   776   0010B6  6E43               	movwf	(led_turn_on@led+1)^0,c
   777   0010B8  EC16  F00E         	call	_led_turn_on	;wreg free
   778   0010BC  6E24               	movwf	_ret^0,c
   779                           
   780                           ;application.c: 137:                 ret = dc_motor_move_right(&motor_1);
   781   0010BE  0E35               	movlw	low _motor_1
   782   0010C0  6E42               	movwf	dc_motor_move_right@_dc_motor^0,c
   783   0010C2  0E00               	movlw	high _motor_1
   784   0010C4  6E43               	movwf	(dc_motor_move_right@_dc_motor+1)^0,c
   785   0010C6  ECFF  F010         	call	_dc_motor_move_right	;wreg free
   786   0010CA  6E24               	movwf	_ret^0,c
   787                           
   788                           ;application.c: 138:                 ret = lcd_4bit_send_command(&lcd, 0X01);
   789   0010CC  0E2D               	movlw	low _lcd
   790   0010CE  6E46               	movwf	lcd_4bit_send_command@lcd^0,c
   791   0010D0  0E00               	movlw	high _lcd
   792   0010D2  6E47               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
   793   0010D4  0E01               	movlw	1
   794   0010D6  6E48               	movwf	lcd_4bit_send_command@command^0,c
   795   0010D8  EC50  F00F         	call	_lcd_4bit_send_command	;wreg free
   796   0010DC  6E24               	movwf	_ret^0,c
   797   0010DE                     
   798                           ;application.c: 139:                 ret = lcd_4bit_send_string_pos(&lcd , 1, 7, "Door O
      +                          pened ");
   799   0010DE  0E2D               	movlw	low _lcd
   800   0010E0  6E51               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   801   0010E2  0E00               	movlw	high _lcd
   802   0010E4  6E52               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
   803   0010E6  0E01               	movlw	1
   804   0010E8  6E53               	movwf	lcd_4bit_send_string_pos@row^0,c
   805   0010EA  0E07               	movlw	7
   806   0010EC  6E54               	movwf	lcd_4bit_send_string_pos@column^0,c
   807   0010EE  0E49               	movlw	low STR_2
   808   0010F0  6E55               	movwf	lcd_4bit_send_string_pos@str^0,c
   809   0010F2  0E10               	movlw	high STR_2
   810   0010F4  6E56               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
   811   0010F6  ECD3  F00D         	call	_lcd_4bit_send_string_pos	;wreg free
   812   0010FA  6E24               	movwf	_ret^0,c
   813   0010FC                     
   814                           ;application.c: 140:                 incorrect_pass = 0;
   815   0010FC  0E00               	movlw	0
   816   0010FE  6E60               	movwf	_incorrect_pass^0,c
   817   001100                     
   818                           ;application.c: 141:                 _delay((unsigned long)((3000)*(4000000/4000.0)));
   819   001100  0E10               	movlw	16
   820   001102  6E59               	movwf	(??_main+1)^0,c
   821   001104  0E39               	movlw	57
   822   001106  6E58               	movwf	??_main^0,c
   823   001108  0E0E               	movlw	14
   824   00110A                     u1417:
   825   00110A  2EE8               	decfsz	wreg,f,c
   826   00110C  D7FE               	bra	u1417
   827   00110E  2E58               	decfsz	??_main^0,f,c
   828   001110  D7FC               	bra	u1417
   829   001112  2E59               	decfsz	(??_main+1)^0,f,c
   830   001114  D7FA               	bra	u1417
   831   001116                     
   832                           ;application.c: 143:                 ret = led_turn_off(&led_green);
   833   001116  0E37               	movlw	low _led_green
   834   001118  6E42               	movwf	led_turn_off@led^0,c
   835   00111A  0E00               	movlw	high _led_green
   836   00111C  6E43               	movwf	(led_turn_off@led+1)^0,c
   837   00111E  EC57  F00E         	call	_led_turn_off	;wreg free
   838   001122  6E24               	movwf	_ret^0,c
   839   001124                     
   840                           ;application.c: 144:                 ret = dc_motor_stop(&motor_1);
   841   001124  0E35               	movlw	low _motor_1
   842   001126  6E42               	movwf	dc_motor_stop@_dc_motor^0,c
   843   001128  0E00               	movlw	high _motor_1
   844   00112A  6E43               	movwf	(dc_motor_stop@_dc_motor+1)^0,c
   845   00112C  ECDC  F010         	call	_dc_motor_stop	;wreg free
   846   001130  6E24               	movwf	_ret^0,c
   847   001132                     
   848                           ;application.c: 145:                 ret = lcd_4bit_send_command(&lcd, 0X01);
   849   001132  0E2D               	movlw	low _lcd
   850   001134  6E46               	movwf	lcd_4bit_send_command@lcd^0,c
   851   001136  0E00               	movlw	high _lcd
   852   001138  6E47               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
   853   00113A  0E01               	movlw	1
   854   00113C  6E48               	movwf	lcd_4bit_send_command@command^0,c
   855   00113E  EC50  F00F         	call	_lcd_4bit_send_command	;wreg free
   856   001142  6E24               	movwf	_ret^0,c
   857   001144                     
   858                           ;application.c: 146:                 ret = lcd_4bit_send_string(&lcd, "Enter Password:")
      +                          ;
   859   001144  0E2D               	movlw	low _lcd
   860   001146  6E4A               	movwf	lcd_4bit_send_string@lcd^0,c
   861   001148  0E00               	movlw	high _lcd
   862   00114A  6E4B               	movwf	(lcd_4bit_send_string@lcd+1)^0,c
   863   00114C  0E39               	movlw	low STR_1
   864   00114E  6E4C               	movwf	lcd_4bit_send_string@str^0,c
   865   001150  0E10               	movlw	high STR_1
   866   001152  6E4D               	movwf	(lcd_4bit_send_string@str+1)^0,c
   867   001154  EC89  F00F         	call	_lcd_4bit_send_string	;wreg free
   868   001158  6E24               	movwf	_ret^0,c
   869                           
   870                           ;application.c: 147:             }
   871   00115A  EF03  F009         	goto	l305
   872   00115E                     l2287:
   873                           
   874                           ;application.c: 150:             {;application.c: 151:                 ret = led_turn_on
      +                          (&led_red);
   875   00115E  0E65               	movlw	low _led_red
   876   001160  6E42               	movwf	led_turn_on@led^0,c
   877   001162  0E00               	movlw	high _led_red
   878   001164  6E43               	movwf	(led_turn_on@led+1)^0,c
   879   001166  EC16  F00E         	call	_led_turn_on	;wreg free
   880   00116A  6E24               	movwf	_ret^0,c
   881                           
   882                           ;application.c: 153:                 ret = dc_motor_move_left(&motor_2);
   883   00116C  0E33               	movlw	low _motor_2
   884   00116E  6E42               	movwf	dc_motor_move_left@_dc_motor^0,c
   885   001170  0E00               	movlw	high _motor_2
   886   001172  6E43               	movwf	(dc_motor_move_left@_dc_motor+1)^0,c
   887   001174  EC22  F011         	call	_dc_motor_move_left	;wreg free
   888   001178  6E24               	movwf	_ret^0,c
   889                           
   890                           ;application.c: 154:                 ret = lcd_4bit_send_command(&lcd, 0X01);
   891   00117A  0E2D               	movlw	low _lcd
   892   00117C  6E46               	movwf	lcd_4bit_send_command@lcd^0,c
   893   00117E  0E00               	movlw	high _lcd
   894   001180  6E47               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
   895   001182  0E01               	movlw	1
   896   001184  6E48               	movwf	lcd_4bit_send_command@command^0,c
   897   001186  EC50  F00F         	call	_lcd_4bit_send_command	;wreg free
   898   00118A  6E24               	movwf	_ret^0,c
   899   00118C                     
   900                           ;application.c: 155:                 ret = lcd_4bit_send_string_pos(&lcd, 1, 2, "Incorre
      +                          ct Password!");
   901   00118C  0E2D               	movlw	low _lcd
   902   00118E  6E51               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   903   001190  0E00               	movlw	high _lcd
   904   001192  6E52               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
   905   001194  0E01               	movlw	1
   906   001196  6E53               	movwf	lcd_4bit_send_string_pos@row^0,c
   907   001198  0E02               	movlw	2
   908   00119A  6E54               	movwf	lcd_4bit_send_string_pos@column^0,c
   909   00119C  0E11               	movlw	low STR_4
   910   00119E  6E55               	movwf	lcd_4bit_send_string_pos@str^0,c
   911   0011A0  0E10               	movlw	high STR_4
   912   0011A2  6E56               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
   913   0011A4  ECD3  F00D         	call	_lcd_4bit_send_string_pos	;wreg free
   914   0011A8  6E24               	movwf	_ret^0,c
   915   0011AA                     
   916                           ;application.c: 157:                 incorrect_pass++;
   917   0011AA  2A60               	incf	_incorrect_pass^0,f,c
   918   0011AC                     
   919                           ;application.c: 159:                 _delay((unsigned long)((2000)*(4000000/4000.0)));
   920   0011AC  0E0B               	movlw	11
   921   0011AE  6E59               	movwf	(??_main+1)^0,c
   922   0011B0  0E26               	movlw	38
   923   0011B2  6E58               	movwf	??_main^0,c
   924   0011B4  0E5E               	movlw	94
   925   0011B6                     u1427:
   926   0011B6  2EE8               	decfsz	wreg,f,c
   927   0011B8  D7FE               	bra	u1427
   928   0011BA  2E58               	decfsz	??_main^0,f,c
   929   0011BC  D7FC               	bra	u1427
   930   0011BE  2E59               	decfsz	(??_main+1)^0,f,c
   931   0011C0  D7FA               	bra	u1427
   932   0011C2                     
   933                           ;application.c: 160:                 ret = led_turn_off(&led_red);
   934   0011C2  0E65               	movlw	low _led_red
   935   0011C4  6E42               	movwf	led_turn_off@led^0,c
   936   0011C6  0E00               	movlw	high _led_red
   937   0011C8  6E43               	movwf	(led_turn_off@led+1)^0,c
   938   0011CA  EC57  F00E         	call	_led_turn_off	;wreg free
   939   0011CE  6E24               	movwf	_ret^0,c
   940   0011D0                     
   941                           ;application.c: 162:                 ret = dc_motor_stop(&motor_2);
   942   0011D0  0E33               	movlw	low _motor_2
   943   0011D2  6E42               	movwf	dc_motor_stop@_dc_motor^0,c
   944   0011D4  0E00               	movlw	high _motor_2
   945   0011D6  6E43               	movwf	(dc_motor_stop@_dc_motor+1)^0,c
   946   0011D8  ECDC  F010         	call	_dc_motor_stop	;wreg free
   947   0011DC  6E24               	movwf	_ret^0,c
   948   0011DE                     
   949                           ;application.c: 163:                 ret = lcd_4bit_send_command(&lcd, 0X01);
   950   0011DE  0E2D               	movlw	low _lcd
   951   0011E0  6E46               	movwf	lcd_4bit_send_command@lcd^0,c
   952   0011E2  0E00               	movlw	high _lcd
   953   0011E4  6E47               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
   954   0011E6  0E01               	movlw	1
   955   0011E8  6E48               	movwf	lcd_4bit_send_command@command^0,c
   956   0011EA  EC50  F00F         	call	_lcd_4bit_send_command	;wreg free
   957   0011EE  6E24               	movwf	_ret^0,c
   958   0011F0                     
   959                           ;application.c: 164:                 ret = lcd_4bit_send_string(&lcd, "Enter Password:")
      +                          ;
   960   0011F0  0E2D               	movlw	low _lcd
   961   0011F2  6E4A               	movwf	lcd_4bit_send_string@lcd^0,c
   962   0011F4  0E00               	movlw	high _lcd
   963   0011F6  6E4B               	movwf	(lcd_4bit_send_string@lcd+1)^0,c
   964   0011F8  0E39               	movlw	low STR_1
   965   0011FA  6E4C               	movwf	lcd_4bit_send_string@str^0,c
   966   0011FC  0E10               	movlw	high STR_1
   967   0011FE  6E4D               	movwf	(lcd_4bit_send_string@str+1)^0,c
   968   001200  EC89  F00F         	call	_lcd_4bit_send_string	;wreg free
   969   001204  6E24               	movwf	_ret^0,c
   970   001206                     l305:
   971                           
   972                           ;application.c: 167:             if(3 == incorrect_pass){
   973   001206  0E03               	movlw	3
   974   001208  1860               	xorwf	_incorrect_pass^0,w,c
   975   00120A  A4D8               	btfss	status,2,c
   976   00120C  EF0A  F009         	goto	u1371
   977   001210  EF0C  F009         	goto	u1370
   978   001214                     u1371:
   979   001214  EFAA  F009         	goto	l2337
   980   001218                     u1370:
   981   001218                     
   982                           ;application.c: 168:                 ret = lcd_4bit_send_string_pos(&lcd, 1, 1, "Try aga
      +                          in in    sec");
   983   001218  0E2D               	movlw	low _lcd
   984   00121A  6E51               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   985   00121C  0E00               	movlw	high _lcd
   986   00121E  6E52               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
   987   001220  0E01               	movlw	1
   988   001222  6E53               	movwf	lcd_4bit_send_string_pos@row^0,c
   989   001224  0E01               	movlw	1
   990   001226  6E54               	movwf	lcd_4bit_send_string_pos@column^0,c
   991   001228  0E25               	movlw	low STR_6
   992   00122A  6E55               	movwf	lcd_4bit_send_string_pos@str^0,c
   993   00122C  0E10               	movlw	high STR_6
   994   00122E  6E56               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
   995   001230  ECD3  F00D         	call	_lcd_4bit_send_string_pos	;wreg free
   996   001234  6E24               	movwf	_ret^0,c
   997   001236                     
   998                           ;application.c: 170:                 for(uint8 counter = 60 ; counter > 0 ; counter--){
   999   001236  0E3C               	movlw	60
  1000   001238  6E5B               	movwf	main@counter^0,c
  1001   00123A                     l2313:
  1002                           
  1003                           ;application.c: 171:                     value = '0' + (counter % 10);
  1004   00123A  C05B  F040         	movff	main@counter,___awmod@dividend
  1005   00123E  6A41               	clrf	(___awmod@dividend+1)^0,c
  1006   001240  0E00               	movlw	0
  1007   001242  6E43               	movwf	(___awmod@divisor+1)^0,c
  1008   001244  0E0A               	movlw	10
  1009   001246  6E42               	movwf	___awmod@divisor^0,c
  1010   001248  EC24  F00D         	call	___awmod	;wreg free
  1011   00124C  5040               	movf	?___awmod^0,w,c
  1012   00124E  0F30               	addlw	48
  1013   001250  6E5A               	movwf	main@value^0,c
  1014   001252                     
  1015                           ;application.c: 172:                     ret = lcd_4bit_send_char_data_pos(&lcd, 1, 16, 
      +                          value);
  1016   001252  0E2D               	movlw	low _lcd
  1017   001254  6E51               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  1018   001256  0E00               	movlw	high _lcd
  1019   001258  6E52               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,c
  1020   00125A  0E01               	movlw	1
  1021   00125C  6E53               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  1022   00125E  0E10               	movlw	16
  1023   001260  6E54               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  1024   001262  C05A  F055         	movff	main@value,lcd_4bit_send_char_data_pos@data
  1025   001266  ECB9  F010         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1026   00126A  6E24               	movwf	_ret^0,c
  1027   00126C                     
  1028                           ;application.c: 173:                     value = '0' + ((counter/10) % 10);
  1029   00126C  0E00               	movlw	0
  1030   00126E  6E3B               	movwf	(___awdiv@divisor+1)^0,c
  1031   001270  0E0A               	movlw	10
  1032   001272  6E3A               	movwf	___awdiv@divisor^0,c
  1033   001274  C05B  F038         	movff	main@counter,___awdiv@dividend
  1034   001278  6A39               	clrf	(___awdiv@dividend+1)^0,c
  1035   00127A  EC66  F00C         	call	___awdiv	;wreg free
  1036   00127E  C038  F040         	movff	?___awdiv,___awmod@dividend
  1037   001282  C039  F041         	movff	?___awdiv+1,___awmod@dividend+1
  1038   001286  0E00               	movlw	0
  1039   001288  6E43               	movwf	(___awmod@divisor+1)^0,c
  1040   00128A  0E0A               	movlw	10
  1041   00128C  6E42               	movwf	___awmod@divisor^0,c
  1042   00128E  EC24  F00D         	call	___awmod	;wreg free
  1043   001292  5040               	movf	?___awmod^0,w,c
  1044   001294  0F30               	addlw	48
  1045   001296  6E5A               	movwf	main@value^0,c
  1046                           
  1047                           ;application.c: 174:                     ret = lcd_4bit_send_char_data_pos(&lcd, 1, 15, 
      +                          value);
  1048   001298  0E2D               	movlw	low _lcd
  1049   00129A  6E51               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  1050   00129C  0E00               	movlw	high _lcd
  1051   00129E  6E52               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,c
  1052   0012A0  0E01               	movlw	1
  1053   0012A2  6E53               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  1054   0012A4  0E0F               	movlw	15
  1055   0012A6  6E54               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  1056   0012A8  C05A  F055         	movff	main@value,lcd_4bit_send_char_data_pos@data
  1057   0012AC  ECB9  F010         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1058   0012B0  6E24               	movwf	_ret^0,c
  1059                           
  1060                           ;application.c: 175:                     ret = led_turn_on(&led_red);
  1061   0012B2  0E65               	movlw	low _led_red
  1062   0012B4  6E42               	movwf	led_turn_on@led^0,c
  1063   0012B6  0E00               	movlw	high _led_red
  1064   0012B8  6E43               	movwf	(led_turn_on@led+1)^0,c
  1065   0012BA  EC16  F00E         	call	_led_turn_on	;wreg free
  1066   0012BE  6E24               	movwf	_ret^0,c
  1067                           
  1068                           ;application.c: 177:                     ret = dc_motor_move_left(&motor_2);
  1069   0012C0  0E33               	movlw	low _motor_2
  1070   0012C2  6E42               	movwf	dc_motor_move_left@_dc_motor^0,c
  1071   0012C4  0E00               	movlw	high _motor_2
  1072   0012C6  6E43               	movwf	(dc_motor_move_left@_dc_motor+1)^0,c
  1073   0012C8  EC22  F011         	call	_dc_motor_move_left	;wreg free
  1074   0012CC  6E24               	movwf	_ret^0,c
  1075   0012CE                     
  1076                           ;application.c: 178:                     _delay((unsigned long)((500)*(4000000/4000.0)))
      +                          ;
  1077   0012CE  0E03               	movlw	3
  1078   0012D0  6E59               	movwf	(??_main+1)^0,c
  1079   0012D2  0E8A               	movlw	138
  1080   0012D4  6E58               	movwf	??_main^0,c
  1081   0012D6  0E56               	movlw	86
  1082   0012D8                     u1437:
  1083   0012D8  2EE8               	decfsz	wreg,f,c
  1084   0012DA  D7FE               	bra	u1437
  1085   0012DC  2E58               	decfsz	??_main^0,f,c
  1086   0012DE  D7FC               	bra	u1437
  1087   0012E0  2E59               	decfsz	(??_main+1)^0,f,c
  1088   0012E2  D7FA               	bra	u1437
  1089   0012E4                     
  1090                           ;application.c: 179:                     ret = led_turn_off(&led_red);
  1091   0012E4  0E65               	movlw	low _led_red
  1092   0012E6  6E42               	movwf	led_turn_off@led^0,c
  1093   0012E8  0E00               	movlw	high _led_red
  1094   0012EA  6E43               	movwf	(led_turn_off@led+1)^0,c
  1095   0012EC  EC57  F00E         	call	_led_turn_off	;wreg free
  1096   0012F0  6E24               	movwf	_ret^0,c
  1097   0012F2                     
  1098                           ;application.c: 181:                     ret = dc_motor_stop(&motor_2);
  1099   0012F2  0E33               	movlw	low _motor_2
  1100   0012F4  6E42               	movwf	dc_motor_stop@_dc_motor^0,c
  1101   0012F6  0E00               	movlw	high _motor_2
  1102   0012F8  6E43               	movwf	(dc_motor_stop@_dc_motor+1)^0,c
  1103   0012FA  ECDC  F010         	call	_dc_motor_stop	;wreg free
  1104   0012FE  6E24               	movwf	_ret^0,c
  1105   001300                     
  1106                           ;application.c: 182:                     _delay((unsigned long)((500)*(4000000/4000.0)))
      +                          ;
  1107   001300  0E03               	movlw	3
  1108   001302  6E59               	movwf	(??_main+1)^0,c
  1109   001304  0E8A               	movlw	138
  1110   001306  6E58               	movwf	??_main^0,c
  1111   001308  0E56               	movlw	86
  1112   00130A                     u1447:
  1113   00130A  2EE8               	decfsz	wreg,f,c
  1114   00130C  D7FE               	bra	u1447
  1115   00130E  2E58               	decfsz	??_main^0,f,c
  1116   001310  D7FC               	bra	u1447
  1117   001312  2E59               	decfsz	(??_main+1)^0,f,c
  1118   001314  D7FA               	bra	u1447
  1119   001316                     
  1120                           ;application.c: 183:                 }
  1121   001316  065B               	decf	main@counter^0,f,c
  1122   001318  505B               	movf	main@counter^0,w,c
  1123   00131A  A4D8               	btfss	status,2,c
  1124   00131C  EF92  F009         	goto	u1381
  1125   001320  EF94  F009         	goto	u1380
  1126   001324                     u1381:
  1127   001324  EF1D  F009         	goto	l2313
  1128   001328                     u1380:
  1129   001328                     
  1130                           ;application.c: 184:                 incorrect_pass = 0;
  1131   001328  0E00               	movlw	0
  1132   00132A  6E60               	movwf	_incorrect_pass^0,c
  1133   00132C                     
  1134                           ;application.c: 185:                 ret = lcd_4bit_send_command(&lcd, 0X01);
  1135   00132C  0E2D               	movlw	low _lcd
  1136   00132E  6E46               	movwf	lcd_4bit_send_command@lcd^0,c
  1137   001330  0E00               	movlw	high _lcd
  1138   001332  6E47               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
  1139   001334  0E01               	movlw	1
  1140   001336  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1141   001338  EC50  F00F         	call	_lcd_4bit_send_command	;wreg free
  1142   00133C  6E24               	movwf	_ret^0,c
  1143   00133E                     
  1144                           ;application.c: 186:                 ret = lcd_4bit_send_string(&lcd, "Enter Password:")
      +                          ;
  1145   00133E  0E2D               	movlw	low _lcd
  1146   001340  6E4A               	movwf	lcd_4bit_send_string@lcd^0,c
  1147   001342  0E00               	movlw	high _lcd
  1148   001344  6E4B               	movwf	(lcd_4bit_send_string@lcd+1)^0,c
  1149   001346  0E39               	movlw	low STR_1
  1150   001348  6E4C               	movwf	lcd_4bit_send_string@str^0,c
  1151   00134A  0E10               	movlw	high STR_1
  1152   00134C  6E4D               	movwf	(lcd_4bit_send_string@str+1)^0,c
  1153   00134E  EC89  F00F         	call	_lcd_4bit_send_string	;wreg free
  1154   001352  6E24               	movwf	_ret^0,c
  1155   001354                     l2337:
  1156                           
  1157                           ;application.c: 189:             entered_password = 0;
  1158   001354  0E00               	movlw	0
  1159   001356  6E5C               	movwf	_entered_password^0,c
  1160   001358  0E00               	movlw	0
  1161   00135A  6E5D               	movwf	(_entered_password+1)^0,c
  1162   00135C  0E00               	movlw	0
  1163   00135E  6E5E               	movwf	(_entered_password+2)^0,c
  1164   001360  0E00               	movlw	0
  1165   001362  6E5F               	movwf	(_entered_password+3)^0,c
  1166   001364                     l2339:
  1167                           
  1168                           ;application.c: 192:         if('0' <= keypad_value && keypad_value <= '9')
  1169   001364  0E2F               	movlw	47
  1170   001366  6466               	cpfsgt	_keypad_value^0,c
  1171   001368  EFB8  F009         	goto	u1391
  1172   00136C  EFBA  F009         	goto	u1390
  1173   001370                     u1391:
  1174   001370  EF39  F008         	goto	l2263
  1175   001374                     u1390:
  1176   001374  0E3A               	movlw	58
  1177   001376  6066               	cpfslt	_keypad_value^0,c
  1178   001378  EFC0  F009         	goto	u1401
  1179   00137C  EFC2  F009         	goto	u1400
  1180   001380                     u1401:
  1181   001380  EF39  F008         	goto	l2263
  1182   001384                     u1400:
  1183   001384                     
  1184                           ;application.c: 193:         {;application.c: 194:             number_of_clicks++;
  1185   001384  2A61               	incf	_number_of_clicks^0,f,c
  1186   001386                     
  1187                           ;application.c: 196:            entered_password = (entered_password * 10) + (keypad_val
      +                          ue - '0');
  1188   001386  0ED0               	movlw	208
  1189   001388  2466               	addwf	_keypad_value^0,w,c
  1190   00138A  6E58               	movwf	??_main^0,c
  1191   00138C  6A59               	clrf	(??_main+1)^0,c
  1192   00138E  0EFF               	movlw	255
  1193   001390  2259               	addwfc	(??_main+1)^0,f,c
  1194   001392  C05C  F038         	movff	_entered_password,___lmul@multiplier
  1195   001396  C05D  F039         	movff	_entered_password+1,___lmul@multiplier+1
  1196   00139A  C05E  F03A         	movff	_entered_password+2,___lmul@multiplier+2
  1197   00139E  C05F  F03B         	movff	_entered_password+3,___lmul@multiplier+3
  1198   0013A2  0E0A               	movlw	10
  1199   0013A4  6E3C               	movwf	___lmul@multiplicand^0,c
  1200   0013A6  0E00               	movlw	0
  1201   0013A8  6E3D               	movwf	(___lmul@multiplicand+1)^0,c
  1202   0013AA  0E00               	movlw	0
  1203   0013AC  6E3E               	movwf	(___lmul@multiplicand+2)^0,c
  1204   0013AE  0E00               	movlw	0
  1205   0013B0  6E3F               	movwf	(___lmul@multiplicand+3)^0,c
  1206   0013B2  ECF7  F00F         	call	___lmul	;wreg free
  1207   0013B6  5058               	movf	??_main^0,w,c
  1208   0013B8  2438               	addwf	?___lmul^0,w,c
  1209   0013BA  6E5C               	movwf	_entered_password^0,c
  1210   0013BC  5059               	movf	(??_main+1)^0,w,c
  1211   0013BE  2039               	addwfc	(?___lmul+1)^0,w,c
  1212   0013C0  6E5D               	movwf	(_entered_password+1)^0,c
  1213   0013C2  0E00               	movlw	0
  1214   0013C4  203A               	addwfc	(?___lmul+2)^0,w,c
  1215   0013C6  6E5E               	movwf	(_entered_password+2)^0,c
  1216   0013C8  0E00               	movlw	0
  1217   0013CA  203B               	addwfc	(?___lmul+3)^0,w,c
  1218   0013CC  6E5F               	movwf	(_entered_password+3)^0,c
  1219   0013CE                     
  1220                           ;application.c: 197:            ret = lcd_4bit_send_char_data_pos(&lcd, 2, ++lcd_output,
      +                           keypad_value);
  1221   0013CE  0E2D               	movlw	low _lcd
  1222   0013D0  6E51               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  1223   0013D2  0E00               	movlw	high _lcd
  1224   0013D4  6E52               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,c
  1225   0013D6  0E02               	movlw	2
  1226   0013D8  6E53               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  1227   0013DA  2A23               	incf	_lcd_output^0,f,c
  1228   0013DC  C023  F054         	movff	_lcd_output,lcd_4bit_send_char_data_pos@column
  1229   0013E0  C066  F055         	movff	_keypad_value,lcd_4bit_send_char_data_pos@data
  1230   0013E4  ECB9  F010         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1231   0013E8  6E24               	movwf	_ret^0,c
  1232   0013EA                     
  1233                           ;application.c: 198:            _delay((unsigned long)((400)*(4000000/4000.0)));
  1234   0013EA  0E03               	movlw	3
  1235   0013EC  6E59               	movwf	(??_main+1)^0,c
  1236   0013EE  0E08               	movlw	8
  1237   0013F0  6E58               	movwf	??_main^0,c
  1238   0013F2  0E77               	movlw	119
  1239   0013F4                     u1457:
  1240   0013F4  2EE8               	decfsz	wreg,f,c
  1241   0013F6  D7FE               	bra	u1457
  1242   0013F8  2E58               	decfsz	??_main^0,f,c
  1243   0013FA  D7FC               	bra	u1457
  1244   0013FC  2E59               	decfsz	(??_main+1)^0,f,c
  1245   0013FE  D7FA               	bra	u1457
  1246   001400  F000               	nop	
  1247   001402                     
  1248                           ;application.c: 199:            ret = lcd_4bit_send_char_data_pos(&lcd, 2, lcd_output, '
      +                          *');
  1249   001402  0E2D               	movlw	low _lcd
  1250   001404  6E51               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  1251   001406  0E00               	movlw	high _lcd
  1252   001408  6E52               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,c
  1253   00140A  0E02               	movlw	2
  1254   00140C  6E53               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  1255   00140E  C023  F054         	movff	_lcd_output,lcd_4bit_send_char_data_pos@column
  1256   001412  0E2A               	movlw	42
  1257   001414  6E55               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  1258   001416  ECB9  F010         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1259   00141A  6E24               	movwf	_ret^0,c
  1260                           
  1261                           ;application.c: 200:         }
  1262   00141C  EF39  F008         	goto	l2263
  1263   001420  EF00  F000         	goto	start
  1264   001424                     __end_of_main:
  1265                           	callstack 0
  1266                           
  1267 ;; *************** function _led_turn_on *****************
  1268 ;; Defined at:
  1269 ;;		line 32 in file "ECU_layer/LED/ecu_led.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  led             2   10[COMRAM] PTR const struct .
  1272 ;;		 -> led_red(1), led_green(1), 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  pin_config_o    1   14[COMRAM] struct .
  1275 ;;  ret             1   13[COMRAM] unsigned char 
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  1    wreg      unsigned char 
  1278 ;; Registers used:
  1279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1285 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1286 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1287 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1288 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1289 ;;Total ram usage:        5 bytes
  1290 ;; Hardware stack levels used: 1
  1291 ;; Hardware stack levels required when called: 1
  1292 ;; This function calls:
  1293 ;;		_gpio_pin_write_logic
  1294 ;; This function is called by:
  1295 ;;		_main
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text1
  1300   001C2C                     __ptext1:
  1301                           	callstack 0
  1302   001C2C                     _led_turn_on:
  1303                           	callstack 29
  1304   001C2C                     
  1305                           ;ECU_layer/LED/ecu_led.c: 34:     if(led == ((void*)0)){
  1306   001C2C  5042               	movf	led_turn_on@led^0,w,c
  1307   001C2E  1043               	iorwf	(led_turn_on@led+1)^0,w,c
  1308   001C30  A4D8               	btfss	status,2,c
  1309   001C32  EF1D  F00E         	goto	u1101
  1310   001C36  EF1F  F00E         	goto	u1100
  1311   001C3A                     u1101:
  1312   001C3A  EF23  F00E         	goto	l128
  1313   001C3E                     u1100:
  1314   001C3E                     
  1315                           ;ECU_layer/LED/ecu_led.c: 35:         ret = (Std_ReturnType)0x00;
  1316   001C3E  0E00               	movlw	0
  1317   001C40  6E45               	movwf	led_turn_on@ret^0,c
  1318                           
  1319                           ;ECU_layer/LED/ecu_led.c: 36:     }
  1320   001C42  EF55  F00E         	goto	l2051
  1321   001C46                     l128:
  1322                           
  1323                           ;ECU_layer/LED/ecu_led.c: 38:         pin_config_t pin_config_obj = {.port = led->port, 
      +                          .pin = led->pin,
  1324   001C46  C063  F046         	movff	led_turn_on@F3032,led_turn_on@pin_config_obj
  1325   001C4A  C042  FFD9         	movff	led_turn_on@led,fsr2l
  1326   001C4E  C043  FFDA         	movff	led_turn_on@led+1,fsr2h
  1327   001C52  50DF               	movf	223,w,c
  1328   001C54  0B07               	andlw	7
  1329   001C56  6E44               	movwf	??_led_turn_on^0,c
  1330   001C58  5046               	movf	led_turn_on@pin_config_obj^0,w,c
  1331   001C5A  1844               	xorwf	??_led_turn_on^0,w,c
  1332   001C5C  0BF8               	andlw	-8
  1333   001C5E  1844               	xorwf	??_led_turn_on^0,w,c
  1334   001C60  6E46               	movwf	led_turn_on@pin_config_obj^0,c
  1335   001C62  C042  FFD9         	movff	led_turn_on@led,fsr2l
  1336   001C66  C043  FFDA         	movff	led_turn_on@led+1,fsr2h
  1337   001C6A  30DF               	rrcf	223,w,c
  1338   001C6C  32E8               	rrcf	wreg,f,c
  1339   001C6E  32E8               	rrcf	wreg,f,c
  1340   001C70  0B07               	andlw	7
  1341   001C72  6E44               	movwf	??_led_turn_on^0,c
  1342   001C74  4644               	rlncf	??_led_turn_on^0,f,c
  1343   001C76  4644               	rlncf	??_led_turn_on^0,f,c
  1344   001C78  4644               	rlncf	??_led_turn_on^0,f,c
  1345   001C7A  5046               	movf	led_turn_on@pin_config_obj^0,w,c
  1346   001C7C  1844               	xorwf	??_led_turn_on^0,w,c
  1347   001C7E  0BC7               	andlw	-57
  1348   001C80  1844               	xorwf	??_led_turn_on^0,w,c
  1349   001C82  6E46               	movwf	led_turn_on@pin_config_obj^0,c
  1350   001C84  9C46               	bcf	led_turn_on@pin_config_obj^0,6,c
  1351   001C86  C042  FFD9         	movff	led_turn_on@led,fsr2l
  1352   001C8A  C043  FFDA         	movff	led_turn_on@led+1,fsr2h
  1353   001C8E  ACDF               	btfss	indf2,6,c
  1354   001C90  D002               	bra	u1115
  1355   001C92  8E46               	bsf	led_turn_on@pin_config_obj^0,7,c
  1356   001C94  D001               	bra	u1117
  1357   001C96                     u1115:
  1358   001C96  9E46               	bcf	led_turn_on@pin_config_obj^0,7,c
  1359   001C98                     u1117:
  1360   001C98                     
  1361                           ;ECU_layer/LED/ecu_led.c: 40:         ret = gpio_pin_write_logic(&pin_config_obj, GPIO_H
      +                          IGH);
  1362   001C98  0E46               	movlw	low led_turn_on@pin_config_obj
  1363   001C9A  6E38               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1364   001C9C  0E00               	movlw	high led_turn_on@pin_config_obj
  1365   001C9E  6E39               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1366   001CA0  0E01               	movlw	1
  1367   001CA2  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  1368   001CA4  ECB4  F00A         	call	_gpio_pin_write_logic	;wreg free
  1369   001CA8  6E45               	movwf	led_turn_on@ret^0,c
  1370   001CAA                     l2051:
  1371                           
  1372                           ;ECU_layer/LED/ecu_led.c: 42:     return ret;
  1373   001CAA  5045               	movf	led_turn_on@ret^0,w,c
  1374   001CAC  0012               	return		;funcret
  1375   001CAE                     __end_of_led_turn_on:
  1376                           	callstack 0
  1377                           
  1378 ;; *************** function _led_turn_off *****************
  1379 ;; Defined at:
  1380 ;;		line 52 in file "ECU_layer/LED/ecu_led.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  led             2   10[COMRAM] PTR const struct .
  1383 ;;		 -> led_red(1), led_green(1), 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  pin_config_o    1   14[COMRAM] struct .
  1386 ;;  ret             1   13[COMRAM] unsigned char 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      unsigned char 
  1389 ;; Registers used:
  1390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1396 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1399 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1400 ;;Total ram usage:        5 bytes
  1401 ;; Hardware stack levels used: 1
  1402 ;; Hardware stack levels required when called: 1
  1403 ;; This function calls:
  1404 ;;		_gpio_pin_write_logic
  1405 ;; This function is called by:
  1406 ;;		_main
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text2
  1411   001CAE                     __ptext2:
  1412                           	callstack 0
  1413   001CAE                     _led_turn_off:
  1414                           	callstack 29
  1415   001CAE                     
  1416                           ;ECU_layer/LED/ecu_led.c: 54:     if(led == ((void*)0)){
  1417   001CAE  5042               	movf	led_turn_off@led^0,w,c
  1418   001CB0  1043               	iorwf	(led_turn_off@led+1)^0,w,c
  1419   001CB2  A4D8               	btfss	status,2,c
  1420   001CB4  EF5E  F00E         	goto	u1121
  1421   001CB8  EF60  F00E         	goto	u1120
  1422   001CBC                     u1121:
  1423   001CBC  EF64  F00E         	goto	l135
  1424   001CC0                     u1120:
  1425   001CC0                     
  1426                           ;ECU_layer/LED/ecu_led.c: 55:         ret = (Std_ReturnType)0x00;
  1427   001CC0  0E00               	movlw	0
  1428   001CC2  6E45               	movwf	led_turn_off@ret^0,c
  1429                           
  1430                           ;ECU_layer/LED/ecu_led.c: 56:     }
  1431   001CC4  EF96  F00E         	goto	l2069
  1432   001CC8                     l135:
  1433                           
  1434                           ;ECU_layer/LED/ecu_led.c: 58:         pin_config_t pin_config_obj = {.port = led->port, 
      +                          .pin = led->pin,
  1435   001CC8  C062  F046         	movff	led_turn_off@F3037,led_turn_off@pin_config_obj
  1436   001CCC  C042  FFD9         	movff	led_turn_off@led,fsr2l
  1437   001CD0  C043  FFDA         	movff	led_turn_off@led+1,fsr2h
  1438   001CD4  50DF               	movf	223,w,c
  1439   001CD6  0B07               	andlw	7
  1440   001CD8  6E44               	movwf	??_led_turn_off^0,c
  1441   001CDA  5046               	movf	led_turn_off@pin_config_obj^0,w,c
  1442   001CDC  1844               	xorwf	??_led_turn_off^0,w,c
  1443   001CDE  0BF8               	andlw	-8
  1444   001CE0  1844               	xorwf	??_led_turn_off^0,w,c
  1445   001CE2  6E46               	movwf	led_turn_off@pin_config_obj^0,c
  1446   001CE4  C042  FFD9         	movff	led_turn_off@led,fsr2l
  1447   001CE8  C043  FFDA         	movff	led_turn_off@led+1,fsr2h
  1448   001CEC  30DF               	rrcf	223,w,c
  1449   001CEE  32E8               	rrcf	wreg,f,c
  1450   001CF0  32E8               	rrcf	wreg,f,c
  1451   001CF2  0B07               	andlw	7
  1452   001CF4  6E44               	movwf	??_led_turn_off^0,c
  1453   001CF6  4644               	rlncf	??_led_turn_off^0,f,c
  1454   001CF8  4644               	rlncf	??_led_turn_off^0,f,c
  1455   001CFA  4644               	rlncf	??_led_turn_off^0,f,c
  1456   001CFC  5046               	movf	led_turn_off@pin_config_obj^0,w,c
  1457   001CFE  1844               	xorwf	??_led_turn_off^0,w,c
  1458   001D00  0BC7               	andlw	-57
  1459   001D02  1844               	xorwf	??_led_turn_off^0,w,c
  1460   001D04  6E46               	movwf	led_turn_off@pin_config_obj^0,c
  1461   001D06  9C46               	bcf	led_turn_off@pin_config_obj^0,6,c
  1462   001D08  C042  FFD9         	movff	led_turn_off@led,fsr2l
  1463   001D0C  C043  FFDA         	movff	led_turn_off@led+1,fsr2h
  1464   001D10  ACDF               	btfss	indf2,6,c
  1465   001D12  D002               	bra	u1135
  1466   001D14  8E46               	bsf	led_turn_off@pin_config_obj^0,7,c
  1467   001D16  D001               	bra	u1137
  1468   001D18                     u1135:
  1469   001D18  9E46               	bcf	led_turn_off@pin_config_obj^0,7,c
  1470   001D1A                     u1137:
  1471   001D1A                     
  1472                           ;ECU_layer/LED/ecu_led.c: 60:         ret = gpio_pin_write_logic(&pin_config_obj, GPIO_L
      +                          OW);
  1473   001D1A  0E46               	movlw	low led_turn_off@pin_config_obj
  1474   001D1C  6E38               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1475   001D1E  0E00               	movlw	high led_turn_off@pin_config_obj
  1476   001D20  6E39               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1477   001D22  0E00               	movlw	0
  1478   001D24  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  1479   001D26  ECB4  F00A         	call	_gpio_pin_write_logic	;wreg free
  1480   001D2A  6E45               	movwf	led_turn_off@ret^0,c
  1481   001D2C                     l2069:
  1482                           
  1483                           ;ECU_layer/LED/ecu_led.c: 62:     return ret;
  1484   001D2C  5045               	movf	led_turn_off@ret^0,w,c
  1485   001D2E  0012               	return		;funcret
  1486   001D30                     __end_of_led_turn_off:
  1487                           	callstack 0
  1488                           
  1489 ;; *************** function _lcd_4bit_send_string_pos *****************
  1490 ;; Defined at:
  1491 ;;		line 109 in file "ECU_layer/Chr_lcd/ecu_lcd.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  lcd             2   25[COMRAM] PTR const struct .
  1494 ;;		 -> lcd(6), 
  1495 ;;  row             1   27[COMRAM] unsigned char 
  1496 ;;  column          1   28[COMRAM] unsigned char 
  1497 ;;  str             2   29[COMRAM] PTR unsigned char 
  1498 ;;		 -> STR_6(20), STR_4(20), STR_2(13), 
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;  ret             1   31[COMRAM] unsigned char 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  1    wreg      unsigned char 
  1503 ;; Registers used:
  1504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1510 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1513 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1514 ;;Total ram usage:        7 bytes
  1515 ;; Hardware stack levels used: 1
  1516 ;; Hardware stack levels required when called: 4
  1517 ;; This function calls:
  1518 ;;		_lcd_4bit_send_char_data
  1519 ;;		_lcd_4bit_set_cursor
  1520 ;; This function is called by:
  1521 ;;		_main
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           	psect	text3
  1526   001BA6                     __ptext3:
  1527                           	callstack 0
  1528   001BA6                     _lcd_4bit_send_string_pos:
  1529                           	callstack 26
  1530   001BA6                     
  1531                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 111:     if((lcd == ((void*)0)) || (str == ((void*)0))){
  1532   001BA6  5051               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  1533   001BA8  1052               	iorwf	(lcd_4bit_send_string_pos@lcd+1)^0,w,c
  1534   001BAA  B4D8               	btfsc	status,2,c
  1535   001BAC  EFDA  F00D         	goto	u1071
  1536   001BB0  EFDC  F00D         	goto	u1070
  1537   001BB4                     u1071:
  1538   001BB4  EFE5  F00D         	goto	l2023
  1539   001BB8                     u1070:
  1540   001BB8  5055               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1541   001BBA  1056               	iorwf	(lcd_4bit_send_string_pos@str+1)^0,w,c
  1542   001BBC  A4D8               	btfss	status,2,c
  1543   001BBE  EFE3  F00D         	goto	u1081
  1544   001BC2  EFE5  F00D         	goto	u1080
  1545   001BC6                     u1081:
  1546   001BC6  EFE9  F00D         	goto	l2025
  1547   001BCA                     u1080:
  1548   001BCA                     l2023:
  1549                           
  1550                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 112:         ret = (Std_ReturnType)0x00;
  1551   001BCA  0E00               	movlw	0
  1552   001BCC  6E57               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1553                           
  1554                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 113:     }
  1555   001BCE  EF14  F00E         	goto	l2033
  1556   001BD2                     l2025:
  1557                           
  1558                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 115:          ret = lcd_4bit_set_cursor(lcd,row,column);
  1559   001BD2  C051  F04A         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  1560   001BD6  C052  F04B         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_set_cursor@lcd+1
  1561   001BDA  C053  F04C         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  1562   001BDE  C054  F04D         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@column
  1563   001BE2  EC7C  F00D         	call	_lcd_4bit_set_cursor	;wreg free
  1564   001BE6  6E57               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1565                           
  1566                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 116:          while(*str != '\0'){
  1567   001BE8  EF06  F00E         	goto	l2031
  1568   001BEC                     l2027:
  1569                           
  1570                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 117:            ret = lcd_4bit_send_char_data(lcd,*str++);
  1571   001BEC  C051  F046         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  1572   001BF0  C052  F047         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  1573   001BF4  C055  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1574   001BF8  C056  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1575   001BFC                     	if	0	;tblptru may be non-zero
  1576   001BFC                     	endif
  1577   001BFC                     	if	0	;tblptru may be non-zero
  1578   001BFC                     	endif
  1579   001BFC  0008               	tblrd		*
  1580   001BFE  CFF5 F048          	movff	tablat,lcd_4bit_send_char_data@data
  1581   001C02  EC17  F00F         	call	_lcd_4bit_send_char_data	;wreg free
  1582   001C06  6E57               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1583   001C08  4A55               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
  1584   001C0A  2A56               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
  1585   001C0C                     l2031:
  1586                           
  1587                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 116:          while(*str != '\0'){
  1588   001C0C  C055  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1589   001C10  C056  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  1590   001C14                     	if	0	;tblptru may be non-zero
  1591   001C14                     	endif
  1592   001C14                     	if	0	;tblptru may be non-zero
  1593   001C14                     	endif
  1594   001C14  0008               	tblrd		*
  1595   001C16  50F5               	movf	tablat,w,c
  1596   001C18  0900               	iorlw	0
  1597   001C1A  A4D8               	btfss	status,2,c
  1598   001C1C  EF12  F00E         	goto	u1091
  1599   001C20  EF14  F00E         	goto	u1090
  1600   001C24                     u1091:
  1601   001C24  EFF6  F00D         	goto	l2027
  1602   001C28                     u1090:
  1603   001C28                     l2033:
  1604                           
  1605                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 120:     return ret;
  1606   001C28  5057               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  1607   001C2A  0012               	return		;funcret
  1608   001C2C                     __end_of_lcd_4bit_send_string_pos:
  1609                           	callstack 0
  1610                           
  1611 ;; *************** function _lcd_4bit_send_string *****************
  1612 ;; Defined at:
  1613 ;;		line 96 in file "ECU_layer/Chr_lcd/ecu_lcd.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  lcd             2   18[COMRAM] PTR const struct .
  1616 ;;		 -> lcd(6), 
  1617 ;;  str             2   20[COMRAM] PTR unsigned char 
  1618 ;;		 -> STR_7(16), STR_5(16), STR_3(16), STR_1(16), 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  ret             1   22[COMRAM] unsigned char 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      unsigned char 
  1623 ;; Registers used:
  1624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1630 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;Total ram usage:        5 bytes
  1635 ;; Hardware stack levels used: 1
  1636 ;; Hardware stack levels required when called: 3
  1637 ;; This function calls:
  1638 ;;		_lcd_4bit_send_char_data
  1639 ;; This function is called by:
  1640 ;;		_main
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           	psect	text4
  1645   001F12                     __ptext4:
  1646                           	callstack 0
  1647   001F12                     _lcd_4bit_send_string:
  1648                           	callstack 27
  1649   001F12                     
  1650                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 97:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1651   001F12  0E01               	movlw	1
  1652   001F14  6E4E               	movwf	lcd_4bit_send_string@ret^0,c
  1653   001F16                     
  1654                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 99:    if((lcd == ((void*)0)) || (str == ((void*)0))){
  1655   001F16  504A               	movf	lcd_4bit_send_string@lcd^0,w,c
  1656   001F18  104B               	iorwf	(lcd_4bit_send_string@lcd+1)^0,w,c
  1657   001F1A  B4D8               	btfsc	status,2,c
  1658   001F1C  EF92  F00F         	goto	u1041
  1659   001F20  EF94  F00F         	goto	u1040
  1660   001F24                     u1041:
  1661   001F24  EF9D  F00F         	goto	l2005
  1662   001F28                     u1040:
  1663   001F28  504C               	movf	lcd_4bit_send_string@str^0,w,c
  1664   001F2A  104D               	iorwf	(lcd_4bit_send_string@str+1)^0,w,c
  1665   001F2C  A4D8               	btfss	status,2,c
  1666   001F2E  EF9B  F00F         	goto	u1051
  1667   001F32  EF9D  F00F         	goto	u1050
  1668   001F36                     u1051:
  1669   001F36  EFB1  F00F         	goto	l2011
  1670   001F3A                     u1050:
  1671   001F3A                     l2005:
  1672                           
  1673                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 100:         ret = (Std_ReturnType)0x00;
  1674   001F3A  0E00               	movlw	0
  1675   001F3C  6E4E               	movwf	lcd_4bit_send_string@ret^0,c
  1676                           
  1677                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 101:     }
  1678   001F3E  EFBF  F00F         	goto	l2013
  1679   001F42                     l2007:
  1680                           
  1681                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 104:            ret = lcd_4bit_send_char_data(lcd,*str++);
  1682   001F42  C04A  F046         	movff	lcd_4bit_send_string@lcd,lcd_4bit_send_char_data@lcd
  1683   001F46  C04B  F047         	movff	lcd_4bit_send_string@lcd+1,lcd_4bit_send_char_data@lcd+1
  1684   001F4A  C04C  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  1685   001F4E  C04D  FFF7         	movff	lcd_4bit_send_string@str+1,tblptrh
  1686   001F52                     	if	0	;tblptru may be non-zero
  1687   001F52                     	endif
  1688   001F52                     	if	0	;tblptru may be non-zero
  1689   001F52                     	endif
  1690   001F52  0008               	tblrd		*
  1691   001F54  CFF5 F048          	movff	tablat,lcd_4bit_send_char_data@data
  1692   001F58  EC17  F00F         	call	_lcd_4bit_send_char_data	;wreg free
  1693   001F5C  6E4E               	movwf	lcd_4bit_send_string@ret^0,c
  1694   001F5E  4A4C               	infsnz	lcd_4bit_send_string@str^0,f,c
  1695   001F60  2A4D               	incf	(lcd_4bit_send_string@str+1)^0,f,c
  1696   001F62                     l2011:
  1697                           
  1698                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 103:        while(*str != '\0'){
  1699   001F62  C04C  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  1700   001F66  C04D  FFF7         	movff	lcd_4bit_send_string@str+1,tblptrh
  1701   001F6A                     	if	0	;tblptru may be non-zero
  1702   001F6A                     	endif
  1703   001F6A                     	if	0	;tblptru may be non-zero
  1704   001F6A                     	endif
  1705   001F6A  0008               	tblrd		*
  1706   001F6C  50F5               	movf	tablat,w,c
  1707   001F6E  0900               	iorlw	0
  1708   001F70  A4D8               	btfss	status,2,c
  1709   001F72  EFBD  F00F         	goto	u1061
  1710   001F76  EFBF  F00F         	goto	u1060
  1711   001F7A                     u1061:
  1712   001F7A  EFA1  F00F         	goto	l2007
  1713   001F7E                     u1060:
  1714   001F7E                     l2013:
  1715                           
  1716                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 107:     return ret;
  1717   001F7E  504E               	movf	lcd_4bit_send_string@ret^0,w,c
  1718   001F80  0012               	return		;funcret
  1719   001F82                     __end_of_lcd_4bit_send_string:
  1720                           	callstack 0
  1721                           
  1722 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  1723 ;; Defined at:
  1724 ;;		line 84 in file "ECU_layer/Chr_lcd/ecu_lcd.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;  lcd             2   25[COMRAM] PTR const struct .
  1727 ;;		 -> lcd(6), 
  1728 ;;  row             1   27[COMRAM] unsigned char 
  1729 ;;  column          1   28[COMRAM] unsigned char 
  1730 ;;  data            1   29[COMRAM] unsigned char 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  ret             1   30[COMRAM] unsigned char 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      unsigned char 
  1735 ;; Registers used:
  1736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1742 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1743 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1745 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1746 ;;Total ram usage:        6 bytes
  1747 ;; Hardware stack levels used: 1
  1748 ;; Hardware stack levels required when called: 4
  1749 ;; This function calls:
  1750 ;;		_lcd_4bit_send_char_data
  1751 ;;		_lcd_4bit_set_cursor
  1752 ;; This function is called by:
  1753 ;;		_main
  1754 ;;		_lcd_4bit_send_custom_char
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text5
  1759   002172                     __ptext5:
  1760                           	callstack 0
  1761   002172                     _lcd_4bit_send_char_data_pos:
  1762                           	callstack 26
  1763   002172                     
  1764                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 86:     if(lcd == ((void*)0)){
  1765   002172  5051               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
  1766   002174  1052               	iorwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,w,c
  1767   002176  A4D8               	btfss	status,2,c
  1768   002178  EFC0  F010         	goto	u1031
  1769   00217C  EFC2  F010         	goto	u1030
  1770   002180                     u1031:
  1771   002180  EFC6  F010         	goto	l1993
  1772   002184                     u1030:
  1773   002184                     
  1774                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 87:         ret = (Std_ReturnType)0x00;
  1775   002184  0E00               	movlw	0
  1776   002186  6E56               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1777                           
  1778                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 88:     }
  1779   002188  EFDA  F010         	goto	l1995
  1780   00218C                     l1993:
  1781                           
  1782                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 90:         ret = lcd_4bit_set_cursor(lcd,row,column);
  1783   00218C  C051  F04A         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_set_cursor@lcd
  1784   002190  C052  F04B         	movff	lcd_4bit_send_char_data_pos@lcd+1,lcd_4bit_set_cursor@lcd+1
  1785   002194  C053  F04C         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bit_set_cursor@row
  1786   002198  C054  F04D         	movff	lcd_4bit_send_char_data_pos@column,lcd_4bit_set_cursor@column
  1787   00219C  EC7C  F00D         	call	_lcd_4bit_set_cursor	;wreg free
  1788   0021A0  6E56               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1789                           
  1790                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 91:         ret = lcd_4bit_send_char_data(lcd,data);
  1791   0021A2  C051  F046         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
  1792   0021A6  C052  F047         	movff	lcd_4bit_send_char_data_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  1793   0021AA  C055  F048         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
  1794   0021AE  EC17  F00F         	call	_lcd_4bit_send_char_data	;wreg free
  1795   0021B2  6E56               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1796   0021B4                     l1995:
  1797                           
  1798                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 93:     return ret;
  1799   0021B4  5056               	movf	lcd_4bit_send_char_data_pos@ret^0,w,c
  1800   0021B6  0012               	return		;funcret
  1801   0021B8                     __end_of_lcd_4bit_send_char_data_pos:
  1802                           	callstack 0
  1803                           
  1804 ;; *************** function _lcd_4bit_set_cursor *****************
  1805 ;; Defined at:
  1806 ;;		line 156 in file "ECU_layer/Chr_lcd/ecu_lcd.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;  lcd             2   18[COMRAM] PTR const struct .
  1809 ;;		 -> lcd(6), 
  1810 ;;  row             1   20[COMRAM] unsigned char 
  1811 ;;  column          1   21[COMRAM] unsigned char 
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  ret             1   24[COMRAM] unsigned char 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      unsigned char 
  1816 ;; Registers used:
  1817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1823 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1825 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1826 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1827 ;;Total ram usage:        7 bytes
  1828 ;; Hardware stack levels used: 1
  1829 ;; Hardware stack levels required when called: 3
  1830 ;; This function calls:
  1831 ;;		_lcd_4bit_send_command
  1832 ;; This function is called by:
  1833 ;;		_lcd_4bit_send_char_data_pos
  1834 ;;		_lcd_4bit_send_string_pos
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text6
  1839   001AF8                     __ptext6:
  1840                           	callstack 0
  1841   001AF8                     _lcd_4bit_set_cursor:
  1842                           	callstack 26
  1843   001AF8                     
  1844                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 157:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1845   001AF8  0E01               	movlw	1
  1846   001AFA  6E50               	movwf	lcd_4bit_set_cursor@ret^0,c
  1847                           
  1848                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 158:     switch(row){
  1849   001AFC  EFB4  F00D         	goto	l1859
  1850   001B00                     l1851:
  1851   001B00  C04A  F046         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1852   001B04  C04B  F047         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1853   001B08  064D               	decf	lcd_4bit_set_cursor@column^0,f,c
  1854   001B0A  504D               	movf	lcd_4bit_set_cursor@column^0,w,c
  1855   001B0C  0F80               	addlw	128
  1856   001B0E  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1857   001B10  EC50  F00F         	call	_lcd_4bit_send_command	;wreg free
  1858   001B14  6E50               	movwf	lcd_4bit_set_cursor@ret^0,c
  1859   001B16  EFD1  F00D         	goto	l1861
  1860   001B1A                     l1853:
  1861   001B1A  C04A  F046         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1862   001B1E  C04B  F047         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1863   001B22  064D               	decf	lcd_4bit_set_cursor@column^0,f,c
  1864   001B24  504D               	movf	lcd_4bit_set_cursor@column^0,w,c
  1865   001B26  0FC0               	addlw	192
  1866   001B28  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1867   001B2A  EC50  F00F         	call	_lcd_4bit_send_command	;wreg free
  1868   001B2E  6E50               	movwf	lcd_4bit_set_cursor@ret^0,c
  1869   001B30  EFD1  F00D         	goto	l1861
  1870   001B34                     l1855:
  1871   001B34  C04A  F046         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1872   001B38  C04B  F047         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1873   001B3C  064D               	decf	lcd_4bit_set_cursor@column^0,f,c
  1874   001B3E  504D               	movf	lcd_4bit_set_cursor@column^0,w,c
  1875   001B40  0F94               	addlw	148
  1876   001B42  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1877   001B44  EC50  F00F         	call	_lcd_4bit_send_command	;wreg free
  1878   001B48  6E50               	movwf	lcd_4bit_set_cursor@ret^0,c
  1879   001B4A  EFD1  F00D         	goto	l1861
  1880   001B4E                     l1857:
  1881   001B4E  C04A  F046         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1882   001B52  C04B  F047         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  1883   001B56  064D               	decf	lcd_4bit_set_cursor@column^0,f,c
  1884   001B58  504D               	movf	lcd_4bit_set_cursor@column^0,w,c
  1885   001B5A  0FD4               	addlw	212
  1886   001B5C  6E48               	movwf	lcd_4bit_send_command@command^0,c
  1887   001B5E  EC50  F00F         	call	_lcd_4bit_send_command	;wreg free
  1888   001B62  6E50               	movwf	lcd_4bit_set_cursor@ret^0,c
  1889   001B64  EFD1  F00D         	goto	l1861
  1890   001B68                     l1859:
  1891   001B68  504C               	movf	lcd_4bit_set_cursor@row^0,w,c
  1892   001B6A  6E4E               	movwf	??_lcd_4bit_set_cursor^0,c
  1893   001B6C  6A4F               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  1894                           
  1895                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1896                           ; Switch size 1, requested type "simple"
  1897                           ; Number of cases is 1, Range of values is 0 to 0
  1898                           ; switch strategies available:
  1899                           ; Name         Instructions Cycles
  1900                           ; simple_byte            4     3 (average)
  1901                           ;	Chosen strategy is simple_byte
  1902   001B6E  504F               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  1903   001B70  0A00               	xorlw	0	; case 0
  1904   001B72  B4D8               	btfsc	status,2,c
  1905   001B74  EFBE  F00D         	goto	l2365
  1906   001B78  EFD1  F00D         	goto	l1861
  1907   001B7C                     l2365:
  1908                           
  1909                           ; Switch size 1, requested type "simple"
  1910                           ; Number of cases is 4, Range of values is 1 to 4
  1911                           ; switch strategies available:
  1912                           ; Name         Instructions Cycles
  1913                           ; simple_byte           13     7 (average)
  1914                           ;	Chosen strategy is simple_byte
  1915   001B7C  504E               	movf	??_lcd_4bit_set_cursor^0,w,c
  1916   001B7E  0A01               	xorlw	1	; case 1
  1917   001B80  B4D8               	btfsc	status,2,c
  1918   001B82  EF80  F00D         	goto	l1851
  1919   001B86  0A03               	xorlw	3	; case 2
  1920   001B88  B4D8               	btfsc	status,2,c
  1921   001B8A  EF8D  F00D         	goto	l1853
  1922   001B8E  0A01               	xorlw	1	; case 3
  1923   001B90  B4D8               	btfsc	status,2,c
  1924   001B92  EF9A  F00D         	goto	l1855
  1925   001B96  0A07               	xorlw	7	; case 4
  1926   001B98  B4D8               	btfsc	status,2,c
  1927   001B9A  EFA7  F00D         	goto	l1857
  1928   001B9E  EFD1  F00D         	goto	l1861
  1929   001BA2                     l1861:
  1930                           
  1931                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 165:     return ret;
  1932   001BA2  5050               	movf	lcd_4bit_set_cursor@ret^0,w,c
  1933   001BA4  0012               	return		;funcret
  1934   001BA6                     __end_of_lcd_4bit_set_cursor:
  1935                           	callstack 0
  1936                           
  1937 ;; *************** function _lcd_4bit_send_char_data *****************
  1938 ;; Defined at:
  1939 ;;		line 64 in file "ECU_layer/Chr_lcd/ecu_lcd.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;  lcd             2   14[COMRAM] PTR const struct .
  1942 ;;		 -> lcd(6), 
  1943 ;;  data            1   16[COMRAM] unsigned char 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  ret             1   17[COMRAM] unsigned char 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      unsigned char 
  1948 ;; Registers used:
  1949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1955 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1956 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1958 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1959 ;;Total ram usage:        4 bytes
  1960 ;; Hardware stack levels used: 1
  1961 ;; Hardware stack levels required when called: 2
  1962 ;; This function calls:
  1963 ;;		_gpio_pin_write_logic
  1964 ;;		_lcd_4bit_send
  1965 ;;		_lcd_4bit_send_enable
  1966 ;; This function is called by:
  1967 ;;		_lcd_4bit_send_char_data_pos
  1968 ;;		_lcd_4bit_send_string
  1969 ;;		_lcd_4bit_send_string_pos
  1970 ;;		_lcd_4bit_send_custom_char
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text7
  1975   001E2E                     __ptext7:
  1976                           	callstack 0
  1977   001E2E                     _lcd_4bit_send_char_data:
  1978                           	callstack 27
  1979   001E2E                     
  1980                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 66:     if(lcd == ((void*)0)){
  1981   001E2E  5046               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1982   001E30  1047               	iorwf	(lcd_4bit_send_char_data@lcd+1)^0,w,c
  1983   001E32  A4D8               	btfss	status,2,c
  1984   001E34  EF1E  F00F         	goto	u901
  1985   001E38  EF20  F00F         	goto	u900
  1986   001E3C                     u901:
  1987   001E3C  EF24  F00F         	goto	l1843
  1988   001E40                     u900:
  1989   001E40                     
  1990                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 67:         ret = (Std_ReturnType)0x00;
  1991   001E40  0E00               	movlw	0
  1992   001E42  6E49               	movwf	lcd_4bit_send_char_data@ret^0,c
  1993                           
  1994                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 68:     }
  1995   001E44  EF4E  F00F         	goto	l1845
  1996   001E48                     l1843:
  1997                           
  1998                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 71:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),GPIO
      +                          _HIGH);
  1999   001E48  C046  F038         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  2000   001E4C  C047  F039         	movff	lcd_4bit_send_char_data@lcd+1,gpio_pin_write_logic@_pin_config+1
  2001   001E50  0E01               	movlw	1
  2002   001E52  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2003   001E54  ECB4  F00A         	call	_gpio_pin_write_logic	;wreg free
  2004   001E58  6E49               	movwf	lcd_4bit_send_char_data@ret^0,c
  2005                           
  2006                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 73:         ret = lcd_4bit_send(lcd,data >> 4);
  2007   001E5A  C046  F042         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send@lcd
  2008   001E5E  C047  F043         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send@lcd+1
  2009   001E62  3848               	swapf	lcd_4bit_send_char_data@data^0,w,c
  2010   001E64  0B0F               	andlw	15
  2011   001E66  6E44               	movwf	lcd_4bit_send@data_command^0,c
  2012   001E68  EC60  F010         	call	_lcd_4bit_send	;wreg free
  2013   001E6C  6E49               	movwf	lcd_4bit_send_char_data@ret^0,c
  2014                           
  2015                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 75:         ret = lcd_4bit_send_enable(lcd);
  2016   001E6E  C046  F042         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable@lcd
  2017   001E72  C047  F043         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable@lcd+1
  2018   001E76  EC9B  F011         	call	_lcd_4bit_send_enable	;wreg free
  2019   001E7A  6E49               	movwf	lcd_4bit_send_char_data@ret^0,c
  2020                           
  2021                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 77:         ret = lcd_4bit_send(lcd,data);
  2022   001E7C  C046  F042         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send@lcd
  2023   001E80  C047  F043         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send@lcd+1
  2024   001E84  C048  F044         	movff	lcd_4bit_send_char_data@data,lcd_4bit_send@data_command
  2025   001E88  EC60  F010         	call	_lcd_4bit_send	;wreg free
  2026   001E8C  6E49               	movwf	lcd_4bit_send_char_data@ret^0,c
  2027                           
  2028                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 79:         ret = lcd_4bit_send_enable(lcd);
  2029   001E8E  C046  F042         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable@lcd
  2030   001E92  C047  F043         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable@lcd+1
  2031   001E96  EC9B  F011         	call	_lcd_4bit_send_enable	;wreg free
  2032   001E9A  6E49               	movwf	lcd_4bit_send_char_data@ret^0,c
  2033   001E9C                     l1845:
  2034                           
  2035                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 81:     return ret;
  2036   001E9C  5049               	movf	lcd_4bit_send_char_data@ret^0,w,c
  2037   001E9E  0012               	return		;funcret
  2038   001EA0                     __end_of_lcd_4bit_send_char_data:
  2039                           	callstack 0
  2040                           
  2041 ;; *************** function _keypad_read_value *****************
  2042 ;; Defined at:
  2043 ;;		line 219 in file "application.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;		None
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  new_val         1   23[COMRAM] unsigned char 
  2048 ;;  val             1   22[COMRAM] unsigned char 
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  1    wreg      unsigned char 
  2051 ;; Registers used:
  2052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2061 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2062 ;;Total ram usage:        3 bytes
  2063 ;; Hardware stack levels used: 1
  2064 ;; Hardware stack levels required when called: 2
  2065 ;; This function calls:
  2066 ;;		_keypad_get_value
  2067 ;; This function is called by:
  2068 ;;		_main
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           	psect	text8
  2073   002058                     __ptext8:
  2074                           	callstack 0
  2075   002058                     _keypad_read_value:
  2076                           	callstack 28
  2077   002058                     
  2078                           ;application.c: 220:     uint8 val;;application.c: 223:     ret = keypad_get_value(&keyp
      +                          ad,&val);
  2079   002058  0E25               	movlw	low _keypad
  2080   00205A  6E42               	movwf	keypad_get_value@_keypad_obj^0,c
  2081   00205C  0E00               	movlw	high _keypad
  2082   00205E  6E43               	movwf	(keypad_get_value@_keypad_obj+1)^0,c
  2083   002060  0E4E               	movlw	low keypad_read_value@val
  2084   002062  6E44               	movwf	keypad_get_value@value^0,c
  2085   002064  0E00               	movlw	high keypad_read_value@val
  2086   002066  6E45               	movwf	(keypad_get_value@value+1)^0,c
  2087   002068  EC4A  F00B         	call	_keypad_get_value	;wreg free
  2088   00206C  6E24               	movwf	_ret^0,c
  2089   00206E                     
  2090                           ;application.c: 224:     _delay((unsigned long)((150)*(4000000/4000.0)));
  2091   00206E  0EC3               	movlw	195
  2092   002070  6E4D               	movwf	??_keypad_read_value^0,c
  2093   002072  0ECD               	movlw	205
  2094   002074                     u1467:
  2095   002074  2EE8               	decfsz	wreg,f,c
  2096   002076  D7FE               	bra	u1467
  2097   002078  2E4D               	decfsz	??_keypad_read_value^0,f,c
  2098   00207A  D7FC               	bra	u1467
  2099   00207C  F000               	nop	
  2100   00207E                     
  2101                           ;application.c: 226:     if(val == '\0'){
  2102   00207E  504E               	movf	keypad_read_value@val^0,w,c
  2103   002080  A4D8               	btfss	status,2,c
  2104   002082  EF45  F010         	goto	u1171
  2105   002086  EF47  F010         	goto	u1170
  2106   00208A                     u1171:
  2107   00208A  EF4A  F010         	goto	l2133
  2108   00208E                     u1170:
  2109   00208E                     l2129:
  2110                           
  2111                           ;application.c: 227:         return 0;
  2112   00208E  0E00               	movlw	0
  2113   002090  EF5F  F010         	goto	l320
  2114   002094                     l2133:
  2115                           
  2116                           ;application.c: 229:     uint8 new_val;;application.c: 230:     ret = keypad_get_value(&
      +                          keypad,&new_val);
  2117   002094  0E25               	movlw	low _keypad
  2118   002096  6E42               	movwf	keypad_get_value@_keypad_obj^0,c
  2119   002098  0E00               	movlw	high _keypad
  2120   00209A  6E43               	movwf	(keypad_get_value@_keypad_obj+1)^0,c
  2121   00209C  0E4F               	movlw	low keypad_read_value@new_val
  2122   00209E  6E44               	movwf	keypad_get_value@value^0,c
  2123   0020A0  0E00               	movlw	high keypad_read_value@new_val
  2124   0020A2  6E45               	movwf	(keypad_get_value@value+1)^0,c
  2125   0020A4  EC4A  F00B         	call	_keypad_get_value	;wreg free
  2126   0020A8  6E24               	movwf	_ret^0,c
  2127   0020AA                     
  2128                           ;application.c: 232:     if(new_val == val){
  2129   0020AA  504E               	movf	keypad_read_value@val^0,w,c
  2130   0020AC  184F               	xorwf	keypad_read_value@new_val^0,w,c
  2131   0020AE  A4D8               	btfss	status,2,c
  2132   0020B0  EF5C  F010         	goto	u1181
  2133   0020B4  EF5E  F010         	goto	u1180
  2134   0020B8                     u1181:
  2135   0020B8  EF47  F010         	goto	l2129
  2136   0020BC                     u1180:
  2137   0020BC                     
  2138                           ;application.c: 233:         return new_val;
  2139   0020BC  504F               	movf	keypad_read_value@new_val^0,w,c
  2140   0020BE                     l320:
  2141   0020BE  0012               	return		;funcret
  2142   0020C0                     __end_of_keypad_read_value:
  2143                           	callstack 0
  2144                           
  2145 ;; *************** function _keypad_get_value *****************
  2146 ;; Defined at:
  2147 ;;		line 48 in file "ECU_layer/Keypad/ecu_kaypad.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  _keypad_obj     2   10[COMRAM] PTR const struct .
  2150 ;;		 -> keypad(8), 
  2151 ;;  value           2   12[COMRAM] PTR unsigned char 
  2152 ;;		 -> keypad_read_value@new_val(1), keypad_read_value@val(1), 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;  l_columns_co    1   20[COMRAM] unsigned char 
  2155 ;;  l_rows_count    1   19[COMRAM] unsigned char 
  2156 ;;  l_counter       1   18[COMRAM] unsigned char 
  2157 ;;  column_logic    1   17[COMRAM] unsigned char 
  2158 ;;  ret             1   16[COMRAM] unsigned char 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      unsigned char 
  2161 ;; Registers used:
  2162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2168 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2170 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2171 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2172 ;;Total ram usage:       11 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; Hardware stack levels required when called: 1
  2175 ;; This function calls:
  2176 ;;		_gpio_pin_read_logic
  2177 ;;		_gpio_pin_write_logic
  2178 ;; This function is called by:
  2179 ;;		_keypad_read_value
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text9
  2184   001694                     __ptext9:
  2185                           	callstack 0
  2186   001694                     _keypad_get_value:
  2187                           	callstack 28
  2188   001694                     
  2189                           ;ECU_layer/Keypad/ecu_kaypad.c: 50:     uint8 l_rows_counter = 0, l_columns_counter = 0,
      +                           l_counter = 0;
  2190   001694  0E00               	movlw	0
  2191   001696  6E4B               	movwf	keypad_get_value@l_rows_counter^0,c
  2192   001698  0E00               	movlw	0
  2193   00169A  6E4C               	movwf	keypad_get_value@l_columns_counter^0,c
  2194   00169C  0E00               	movlw	0
  2195   00169E  6E4A               	movwf	keypad_get_value@l_counter^0,c
  2196                           
  2197                           ;ECU_layer/Keypad/ecu_kaypad.c: 51:     uint8 column_logic = 0;
  2198   0016A0  0E00               	movlw	0
  2199   0016A2  6E49               	movwf	keypad_get_value@column_logic^0,c
  2200   0016A4                     
  2201                           ;ECU_layer/Keypad/ecu_kaypad.c: 52:     if((((void*)0) == _keypad_obj) || (((void*)0) ==
      +                           value)){
  2202   0016A4  5042               	movf	keypad_get_value@_keypad_obj^0,w,c
  2203   0016A6  1043               	iorwf	(keypad_get_value@_keypad_obj+1)^0,w,c
  2204   0016A8  B4D8               	btfsc	status,2,c
  2205   0016AA  EF59  F00B         	goto	u941
  2206   0016AE  EF5B  F00B         	goto	u940
  2207   0016B2                     u941:
  2208   0016B2  EF64  F00B         	goto	l1909
  2209   0016B6                     u940:
  2210   0016B6  5044               	movf	keypad_get_value@value^0,w,c
  2211   0016B8  1045               	iorwf	(keypad_get_value@value+1)^0,w,c
  2212   0016BA  A4D8               	btfss	status,2,c
  2213   0016BC  EF62  F00B         	goto	u951
  2214   0016C0  EF64  F00B         	goto	u950
  2215   0016C4                     u951:
  2216   0016C4  EF68  F00B         	goto	l1911
  2217   0016C8                     u950:
  2218   0016C8                     l1909:
  2219                           
  2220                           ;ECU_layer/Keypad/ecu_kaypad.c: 53:         ret = (Std_ReturnType)0x00;
  2221   0016C8  0E00               	movlw	0
  2222   0016CA  6E48               	movwf	keypad_get_value@ret^0,c
  2223                           
  2224                           ;ECU_layer/Keypad/ecu_kaypad.c: 54:     }
  2225   0016CC  EFD6  F00B         	goto	l1953
  2226   0016D0                     l1911:
  2227                           
  2228                           ;ECU_layer/Keypad/ecu_kaypad.c: 56:         for(l_rows_counter=0; l_rows_counter<4; l_ro
      +                          ws_counter++){
  2229   0016D0  0E00               	movlw	0
  2230   0016D2  6E4B               	movwf	keypad_get_value@l_rows_counter^0,c
  2231   0016D4                     l1917:
  2232                           
  2233                           ;ECU_layer/Keypad/ecu_kaypad.c: 57:             for(l_counter=0; l_counter<4; l_counter+
      +                          +){
  2234   0016D4  0E00               	movlw	0
  2235   0016D6  6E4A               	movwf	keypad_get_value@l_counter^0,c
  2236   0016D8                     l1923:
  2237   0016D8  504A               	movf	keypad_get_value@l_counter^0,w,c
  2238   0016DA  2442               	addwf	keypad_get_value@_keypad_obj^0,w,c
  2239   0016DC  6E38               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2240   0016DE  0E00               	movlw	0
  2241   0016E0  2043               	addwfc	(keypad_get_value@_keypad_obj+1)^0,w,c
  2242   0016E2  6E39               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2243   0016E4  0E00               	movlw	0
  2244   0016E6  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2245   0016E8  ECB4  F00A         	call	_gpio_pin_write_logic	;wreg free
  2246   0016EC                     
  2247                           ;ECU_layer/Keypad/ecu_kaypad.c: 59:             }
  2248   0016EC  2A4A               	incf	keypad_get_value@l_counter^0,f,c
  2249   0016EE  0E03               	movlw	3
  2250   0016F0  644A               	cpfsgt	keypad_get_value@l_counter^0,c
  2251   0016F2  EF7D  F00B         	goto	u961
  2252   0016F6  EF7F  F00B         	goto	u960
  2253   0016FA                     u961:
  2254   0016FA  EF6C  F00B         	goto	l1923
  2255   0016FE                     u960:
  2256   0016FE                     
  2257                           ;ECU_layer/Keypad/ecu_kaypad.c: 60:             gpio_pin_write_logic(&(_keypad_obj->keyp
      +                          ad_row_pins[l_rows_counter]), GPIO_HIGH);
  2258   0016FE  504B               	movf	keypad_get_value@l_rows_counter^0,w,c
  2259   001700  2442               	addwf	keypad_get_value@_keypad_obj^0,w,c
  2260   001702  6E38               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2261   001704  0E00               	movlw	0
  2262   001706  2043               	addwfc	(keypad_get_value@_keypad_obj+1)^0,w,c
  2263   001708  6E39               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2264   00170A  0E01               	movlw	1
  2265   00170C  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2266   00170E  ECB4  F00A         	call	_gpio_pin_write_logic	;wreg free
  2267   001712                     
  2268                           ;ECU_layer/Keypad/ecu_kaypad.c: 61:             _delay((unsigned long)((10)*(4000000/400
      +                          0.0)));
  2269   001712  0E0D               	movlw	13
  2270   001714  6E46               	movwf	??_keypad_get_value^0,c
  2271   001716  0EFC               	movlw	252
  2272   001718                     u1477:
  2273   001718  2EE8               	decfsz	wreg,f,c
  2274   00171A  D7FE               	bra	u1477
  2275   00171C  2E46               	decfsz	??_keypad_get_value^0,f,c
  2276   00171E  D7FC               	bra	u1477
  2277   001720                     
  2278                           ;ECU_layer/Keypad/ecu_kaypad.c: 62:             for(l_columns_counter=0; l_columns_count
      +                          er<4; l_columns_counter++){
  2279   001720  0E00               	movlw	0
  2280   001722  6E4C               	movwf	keypad_get_value@l_columns_counter^0,c
  2281   001724                     l1939:
  2282                           
  2283                           ;ECU_layer/Keypad/ecu_kaypad.c: 63:                 ret = gpio_pin_read_logic(&(_keypad_
      +                          obj->keypad_columns_pins[l_columns_counter]), &column_logic);
  2284   001724  504C               	movf	keypad_get_value@l_columns_counter^0,w,c
  2285   001726  2442               	addwf	keypad_get_value@_keypad_obj^0,w,c
  2286   001728  6E46               	movwf	??_keypad_get_value^0,c
  2287   00172A  0E00               	movlw	0
  2288   00172C  2043               	addwfc	(keypad_get_value@_keypad_obj+1)^0,w,c
  2289   00172E  6E47               	movwf	(??_keypad_get_value+1)^0,c
  2290   001730  0E04               	movlw	4
  2291   001732  2446               	addwf	??_keypad_get_value^0,w,c
  2292   001734  6E38               	movwf	gpio_pin_read_logic@_pin_config^0,c
  2293   001736  0E00               	movlw	0
  2294   001738  2047               	addwfc	(??_keypad_get_value+1)^0,w,c
  2295   00173A  6E39               	movwf	(gpio_pin_read_logic@_pin_config+1)^0,c
  2296   00173C  0E49               	movlw	low keypad_get_value@column_logic
  2297   00173E  6E3A               	movwf	gpio_pin_read_logic@logic^0,c
  2298   001740  0E00               	movlw	high keypad_get_value@column_logic
  2299   001742  6E3B               	movwf	(gpio_pin_read_logic@logic+1)^0,c
  2300   001744  ECC8  F00C         	call	_gpio_pin_read_logic	;wreg free
  2301   001748  6E48               	movwf	keypad_get_value@ret^0,c
  2302   00174A                     
  2303                           ;ECU_layer/Keypad/ecu_kaypad.c: 64:                 if(GPIO_HIGH == column_logic){
  2304   00174A  0449               	decf	keypad_get_value@column_logic^0,w,c
  2305   00174C  A4D8               	btfss	status,2,c
  2306   00174E  EFAB  F00B         	goto	u971
  2307   001752  EFAD  F00B         	goto	u970
  2308   001756                     u971:
  2309   001756  EFC4  F00B         	goto	l1945
  2310   00175A                     u970:
  2311   00175A                     
  2312                           ;ECU_layer/Keypad/ecu_kaypad.c: 65:                     *value = btn_values[l_rows_count
      +                          er][l_columns_counter];
  2313   00175A  504B               	movf	keypad_get_value@l_rows_counter^0,w,c
  2314   00175C  0D04               	mullw	4
  2315   00175E  0E01               	movlw	low _btn_values
  2316   001760  24F3               	addwf	243,w,c
  2317   001762  6E46               	movwf	??_keypad_get_value^0,c
  2318   001764  0E10               	movlw	high _btn_values
  2319   001766  20F4               	addwfc	prodh,w,c
  2320   001768  6E47               	movwf	(??_keypad_get_value+1)^0,c
  2321   00176A  504C               	movf	keypad_get_value@l_columns_counter^0,w,c
  2322   00176C  2646               	addwf	??_keypad_get_value^0,f,c
  2323   00176E  0E00               	movlw	0
  2324   001770  2247               	addwfc	(??_keypad_get_value+1)^0,f,c
  2325   001772  C046  FFF6         	movff	??_keypad_get_value,tblptrl
  2326   001776  C047  FFF7         	movff	??_keypad_get_value+1,tblptrh
  2327   00177A                     	if	0	;tblptru may be non-zero
  2328   00177A                     	endif
  2329   00177A                     	if	0	;tblptru may be non-zero
  2330   00177A                     	endif
  2331   00177A  C044  FFD9         	movff	keypad_get_value@value,fsr2l
  2332   00177E  C045  FFDA         	movff	keypad_get_value@value+1,fsr2h
  2333   001782  0008               	tblrd		*
  2334   001784  CFF5 FFDF          	movff	tablat,indf2
  2335   001788                     l1945:
  2336                           
  2337                           ;ECU_layer/Keypad/ecu_kaypad.c: 67:             }
  2338   001788  2A4C               	incf	keypad_get_value@l_columns_counter^0,f,c
  2339   00178A  0E03               	movlw	3
  2340   00178C  644C               	cpfsgt	keypad_get_value@l_columns_counter^0,c
  2341   00178E  EFCB  F00B         	goto	u981
  2342   001792  EFCD  F00B         	goto	u980
  2343   001796                     u981:
  2344   001796  EF92  F00B         	goto	l1939
  2345   00179A                     u980:
  2346   00179A                     
  2347                           ;ECU_layer/Keypad/ecu_kaypad.c: 68:         }
  2348   00179A  2A4B               	incf	keypad_get_value@l_rows_counter^0,f,c
  2349   00179C  0E03               	movlw	3
  2350   00179E  644B               	cpfsgt	keypad_get_value@l_rows_counter^0,c
  2351   0017A0  EFD4  F00B         	goto	u991
  2352   0017A4  EFD6  F00B         	goto	u990
  2353   0017A8                     u991:
  2354   0017A8  EF6A  F00B         	goto	l1917
  2355   0017AC                     u990:
  2356   0017AC                     l1953:
  2357                           
  2358                           ;ECU_layer/Keypad/ecu_kaypad.c: 70:     return ret;
  2359   0017AC  5048               	movf	keypad_get_value@ret^0,w,c
  2360   0017AE  0012               	return		;funcret
  2361   0017B0                     __end_of_keypad_get_value:
  2362                           	callstack 0
  2363                           
  2364 ;; *************** function _gpio_pin_read_logic *****************
  2365 ;; Defined at:
  2366 ;;		line 75 in file "MCAL_layer/GPIO/hal_gpio.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  2369 ;;		 -> keypad.keypad_columns_pins(4), keypad(8), 
  2370 ;;  logic           2    2[COMRAM] PTR enum E2968
  2371 ;;		 -> keypad_get_value@column_logic(1), 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  ret             1    9[COMRAM] unsigned char 
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  1    wreg      unsigned char 
  2376 ;; Registers used:
  2377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2383 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2384 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2385 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2386 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2387 ;;Total ram usage:       10 bytes
  2388 ;; Hardware stack levels used: 1
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_keypad_get_value
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           	psect	text10
  2397   001990                     __ptext10:
  2398                           	callstack 0
  2399   001990                     _gpio_pin_read_logic:
  2400                           	callstack 28
  2401   001990                     
  2402                           ;MCAL_layer/GPIO/hal_gpio.c: 76:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2403   001990  0E01               	movlw	1
  2404   001992  6E41               	movwf	gpio_pin_read_logic@ret^0,c
  2405   001994                     
  2406                           ;MCAL_layer/GPIO/hal_gpio.c: 77:     if(_pin_config == ((void*)0) || logic == ((void*)0)
      +                           || _pin_config->pin > 8 -1){
  2407   001994  5038               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  2408   001996  1039               	iorwf	(gpio_pin_read_logic@_pin_config+1)^0,w,c
  2409   001998  B4D8               	btfsc	status,2,c
  2410   00199A  EFD1  F00C         	goto	u841
  2411   00199E  EFD3  F00C         	goto	u840
  2412   0019A2                     u841:
  2413   0019A2  EFED  F00C         	goto	l1785
  2414   0019A6                     u840:
  2415   0019A6  503A               	movf	gpio_pin_read_logic@logic^0,w,c
  2416   0019A8  103B               	iorwf	(gpio_pin_read_logic@logic+1)^0,w,c
  2417   0019AA  B4D8               	btfsc	status,2,c
  2418   0019AC  EFDA  F00C         	goto	u851
  2419   0019B0  EFDC  F00C         	goto	u850
  2420   0019B4                     u851:
  2421   0019B4  EFED  F00C         	goto	l1785
  2422   0019B8                     u850:
  2423   0019B8  C038  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  2424   0019BC  C039  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  2425   0019C0  30DF               	rrcf	223,w,c
  2426   0019C2  32E8               	rrcf	wreg,f,c
  2427   0019C4  32E8               	rrcf	wreg,f,c
  2428   0019C6  0B07               	andlw	7
  2429   0019C8  6E3C               	movwf	??_gpio_pin_read_logic^0,c
  2430   0019CA  0E07               	movlw	7
  2431   0019CC  643C               	cpfsgt	??_gpio_pin_read_logic^0,c
  2432   0019CE  EFEB  F00C         	goto	u861
  2433   0019D2  EFED  F00C         	goto	u860
  2434   0019D6                     u861:
  2435   0019D6  EFF1  F00C         	goto	l1787
  2436   0019DA                     u860:
  2437   0019DA                     l1785:
  2438                           
  2439                           ;MCAL_layer/GPIO/hal_gpio.c: 78:         ret = (Std_ReturnType)0x00;
  2440   0019DA  0E00               	movlw	0
  2441   0019DC  6E41               	movwf	gpio_pin_read_logic@ret^0,c
  2442                           
  2443                           ;MCAL_layer/GPIO/hal_gpio.c: 79:     }
  2444   0019DE  EF22  F00D         	goto	l1789
  2445   0019E2                     l1787:
  2446                           
  2447                           ;MCAL_layer/GPIO/hal_gpio.c: 81:         *logic = ((*port_registers[_pin_config->port] >
      +                          > _pin_config->pin) & (uint8) 1);
  2448   0019E2  C038  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  2449   0019E6  C039  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  2450   0019EA  30DF               	rrcf	223,w,c
  2451   0019EC  32E8               	rrcf	wreg,f,c
  2452   0019EE  32E8               	rrcf	wreg,f,c
  2453   0019F0  0B07               	andlw	7
  2454   0019F2  6E3C               	movwf	??_gpio_pin_read_logic^0,c
  2455   0019F4  C038  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  2456   0019F8  C039  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  2457   0019FC  50DF               	movf	223,w,c
  2458   0019FE  0B07               	andlw	7
  2459   001A00  6E3D               	movwf	(??_gpio_pin_read_logic+1)^0,c
  2460   001A02  503D               	movf	(??_gpio_pin_read_logic+1)^0,w,c
  2461   001A04  0D02               	mullw	2
  2462   001A06  0E0B               	movlw	low _port_registers
  2463   001A08  24F3               	addwf	243,w,c
  2464   001A0A  6ED9               	movwf	fsr2l,c
  2465   001A0C  0E00               	movlw	high _port_registers
  2466   001A0E  20F4               	addwfc	prodh,w,c
  2467   001A10  6EDA               	movwf	fsr2h,c
  2468   001A12  CFDE F03E          	movff	postinc2,??_gpio_pin_read_logic+2
  2469   001A16  CFDD F03F          	movff	postdec2,??_gpio_pin_read_logic+3
  2470   001A1A  C03E  FFD9         	movff	??_gpio_pin_read_logic+2,fsr2l
  2471   001A1E  C03F  FFDA         	movff	??_gpio_pin_read_logic+3,fsr2h
  2472   001A22  50DF               	movf	indf2,w,c
  2473   001A24  6E40               	movwf	(??_gpio_pin_read_logic+4)^0,c
  2474   001A26  2A3C               	incf	??_gpio_pin_read_logic^0,f,c
  2475   001A28  EF18  F00D         	goto	u874
  2476   001A2C                     u875:
  2477   001A2C  90D8               	bcf	status,0,c
  2478   001A2E  3240               	rrcf	(??_gpio_pin_read_logic+4)^0,f,c
  2479   001A30                     u874:
  2480   001A30  2E3C               	decfsz	??_gpio_pin_read_logic^0,f,c
  2481   001A32  EF16  F00D         	goto	u875
  2482   001A36  5040               	movf	(??_gpio_pin_read_logic+4)^0,w,c
  2483   001A38  0B01               	andlw	1
  2484   001A3A  C03A  FFD9         	movff	gpio_pin_read_logic@logic,fsr2l
  2485   001A3E  C03B  FFDA         	movff	gpio_pin_read_logic@logic+1,fsr2h
  2486   001A42  6EDF               	movwf	indf2,c
  2487   001A44                     l1789:
  2488                           
  2489                           ;MCAL_layer/GPIO/hal_gpio.c: 83:     return ret;
  2490   001A44  5041               	movf	gpio_pin_read_logic@ret^0,w,c
  2491   001A46  0012               	return		;funcret
  2492   001A48                     __end_of_gpio_pin_read_logic:
  2493                           	callstack 0
  2494                           
  2495 ;; *************** function _dc_motor_stop *****************
  2496 ;; Defined at:
  2497 ;;		line 78 in file "ECU_layer/Motor/ecu_dc_motor.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;  _dc_motor       2   10[COMRAM] PTR const struct .
  2500 ;;		 -> motor_2(2), motor_1(2), 
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;  ret             1   12[COMRAM] unsigned char 
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      unsigned char 
  2505 ;; Registers used:
  2506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2512 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;Total ram usage:        3 bytes
  2517 ;; Hardware stack levels used: 1
  2518 ;; Hardware stack levels required when called: 1
  2519 ;; This function calls:
  2520 ;;		_gpio_pin_write_logic
  2521 ;; This function is called by:
  2522 ;;		_main
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           	psect	text11
  2527   0021B8                     __ptext11:
  2528                           	callstack 0
  2529   0021B8                     _dc_motor_stop:
  2530                           	callstack 29
  2531   0021B8                     
  2532                           ;ECU_layer/Motor/ecu_dc_motor.c: 79:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2533   0021B8  0E01               	movlw	1
  2534   0021BA  6E44               	movwf	dc_motor_stop@ret^0,c
  2535   0021BC                     
  2536                           ;ECU_layer/Motor/ecu_dc_motor.c: 80:     if(((void*)0) == _dc_motor){
  2537   0021BC  5042               	movf	dc_motor_stop@_dc_motor^0,w,c
  2538   0021BE  1043               	iorwf	(dc_motor_stop@_dc_motor+1)^0,w,c
  2539   0021C0  A4D8               	btfss	status,2,c
  2540   0021C2  EFE5  F010         	goto	u1161
  2541   0021C6  EFE7  F010         	goto	u1160
  2542   0021CA                     u1161:
  2543   0021CA  EFEB  F010         	goto	l2103
  2544   0021CE                     u1160:
  2545   0021CE                     
  2546                           ;ECU_layer/Motor/ecu_dc_motor.c: 81:         ret = (Std_ReturnType)0x00;
  2547   0021CE  0E00               	movlw	0
  2548   0021D0  6E44               	movwf	dc_motor_stop@ret^0,c
  2549                           
  2550                           ;ECU_layer/Motor/ecu_dc_motor.c: 82:     }
  2551   0021D2  EFFD  F010         	goto	l2105
  2552   0021D6                     l2103:
  2553                           
  2554                           ;ECU_layer/Motor/ecu_dc_motor.c: 84:         gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[0x00U]),GPIO_LOW);
  2555   0021D6  C042  F038         	movff	dc_motor_stop@_dc_motor,gpio_pin_write_logic@_pin_config
  2556   0021DA  C043  F039         	movff	dc_motor_stop@_dc_motor+1,gpio_pin_write_logic@_pin_config+1
  2557   0021DE  0E00               	movlw	0
  2558   0021E0  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2559   0021E2  ECB4  F00A         	call	_gpio_pin_write_logic	;wreg free
  2560                           
  2561                           ;ECU_layer/Motor/ecu_dc_motor.c: 85:         gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[0x01U]),GPIO_LOW);
  2562   0021E6  0E01               	movlw	1
  2563   0021E8  2442               	addwf	dc_motor_stop@_dc_motor^0,w,c
  2564   0021EA  6E38               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2565   0021EC  0E00               	movlw	0
  2566   0021EE  2043               	addwfc	(dc_motor_stop@_dc_motor+1)^0,w,c
  2567   0021F0  6E39               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2568   0021F2  0E00               	movlw	0
  2569   0021F4  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2570   0021F6  ECB4  F00A         	call	_gpio_pin_write_logic	;wreg free
  2571   0021FA                     l2105:
  2572                           
  2573                           ;ECU_layer/Motor/ecu_dc_motor.c: 87:     return ret;
  2574   0021FA  5044               	movf	dc_motor_stop@ret^0,w,c
  2575   0021FC  0012               	return		;funcret
  2576   0021FE                     __end_of_dc_motor_stop:
  2577                           	callstack 0
  2578                           
  2579 ;; *************** function _dc_motor_move_right *****************
  2580 ;; Defined at:
  2581 ;;		line 38 in file "ECU_layer/Motor/ecu_dc_motor.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;  _dc_motor       2   10[COMRAM] PTR const struct .
  2584 ;;		 -> motor_1(2), 
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;  ret             1   12[COMRAM] unsigned char 
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  1    wreg      unsigned char 
  2589 ;; Registers used:
  2590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2596 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2597 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;Total ram usage:        3 bytes
  2601 ;; Hardware stack levels used: 1
  2602 ;; Hardware stack levels required when called: 1
  2603 ;; This function calls:
  2604 ;;		_gpio_pin_write_logic
  2605 ;; This function is called by:
  2606 ;;		_main
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text12
  2611   0021FE                     __ptext12:
  2612                           	callstack 0
  2613   0021FE                     _dc_motor_move_right:
  2614                           	callstack 29
  2615   0021FE                     
  2616                           ;ECU_layer/Motor/ecu_dc_motor.c: 39:    Std_ReturnType ret = (Std_ReturnType)0x01;
  2617   0021FE  0E01               	movlw	1
  2618   002200  6E44               	movwf	dc_motor_move_right@ret^0,c
  2619   002202                     
  2620                           ;ECU_layer/Motor/ecu_dc_motor.c: 40:     if(((void*)0) == _dc_motor){
  2621   002202  5042               	movf	dc_motor_move_right@_dc_motor^0,w,c
  2622   002204  1043               	iorwf	(dc_motor_move_right@_dc_motor+1)^0,w,c
  2623   002206  A4D8               	btfss	status,2,c
  2624   002208  EF08  F011         	goto	u1141
  2625   00220C  EF0A  F011         	goto	u1140
  2626   002210                     u1141:
  2627   002210  EF0E  F011         	goto	l2079
  2628   002214                     u1140:
  2629   002214                     
  2630                           ;ECU_layer/Motor/ecu_dc_motor.c: 41:         ret = (Std_ReturnType)0x00;
  2631   002214  0E00               	movlw	0
  2632   002216  6E44               	movwf	dc_motor_move_right@ret^0,c
  2633                           
  2634                           ;ECU_layer/Motor/ecu_dc_motor.c: 42:     }
  2635   002218  EF20  F011         	goto	l2081
  2636   00221C                     l2079:
  2637                           
  2638                           ;ECU_layer/Motor/ecu_dc_motor.c: 44:         gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[0x00U]),GPIO_HIGH);
  2639   00221C  C042  F038         	movff	dc_motor_move_right@_dc_motor,gpio_pin_write_logic@_pin_config
  2640   002220  C043  F039         	movff	dc_motor_move_right@_dc_motor+1,gpio_pin_write_logic@_pin_config+1
  2641   002224  0E01               	movlw	1
  2642   002226  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2643   002228  ECB4  F00A         	call	_gpio_pin_write_logic	;wreg free
  2644                           
  2645                           ;ECU_layer/Motor/ecu_dc_motor.c: 45:         gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[0x01U]),GPIO_LOW);
  2646   00222C  0E01               	movlw	1
  2647   00222E  2442               	addwf	dc_motor_move_right@_dc_motor^0,w,c
  2648   002230  6E38               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2649   002232  0E00               	movlw	0
  2650   002234  2043               	addwfc	(dc_motor_move_right@_dc_motor+1)^0,w,c
  2651   002236  6E39               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2652   002238  0E00               	movlw	0
  2653   00223A  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2654   00223C  ECB4  F00A         	call	_gpio_pin_write_logic	;wreg free
  2655   002240                     l2081:
  2656                           
  2657                           ;ECU_layer/Motor/ecu_dc_motor.c: 47:     return ret;
  2658   002240  5044               	movf	dc_motor_move_right@ret^0,w,c
  2659   002242  0012               	return		;funcret
  2660   002244                     __end_of_dc_motor_move_right:
  2661                           	callstack 0
  2662                           
  2663 ;; *************** function _dc_motor_move_left *****************
  2664 ;; Defined at:
  2665 ;;		line 58 in file "ECU_layer/Motor/ecu_dc_motor.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  _dc_motor       2   10[COMRAM] PTR const struct .
  2668 ;;		 -> motor_2(2), 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;  ret             1   12[COMRAM] unsigned char 
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      unsigned char 
  2673 ;; Registers used:
  2674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2681 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2683 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;Total ram usage:        3 bytes
  2685 ;; Hardware stack levels used: 1
  2686 ;; Hardware stack levels required when called: 1
  2687 ;; This function calls:
  2688 ;;		_gpio_pin_write_logic
  2689 ;; This function is called by:
  2690 ;;		_main
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text13
  2695   002244                     __ptext13:
  2696                           	callstack 0
  2697   002244                     _dc_motor_move_left:
  2698                           	callstack 29
  2699   002244                     
  2700                           ;ECU_layer/Motor/ecu_dc_motor.c: 59:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2701   002244  0E01               	movlw	1
  2702   002246  6E44               	movwf	dc_motor_move_left@ret^0,c
  2703   002248                     
  2704                           ;ECU_layer/Motor/ecu_dc_motor.c: 60:     if(((void*)0) == _dc_motor){
  2705   002248  5042               	movf	dc_motor_move_left@_dc_motor^0,w,c
  2706   00224A  1043               	iorwf	(dc_motor_move_left@_dc_motor+1)^0,w,c
  2707   00224C  A4D8               	btfss	status,2,c
  2708   00224E  EF2B  F011         	goto	u1151
  2709   002252  EF2D  F011         	goto	u1150
  2710   002256                     u1151:
  2711   002256  EF31  F011         	goto	l2091
  2712   00225A                     u1150:
  2713   00225A                     
  2714                           ;ECU_layer/Motor/ecu_dc_motor.c: 61:         ret = (Std_ReturnType)0x00;
  2715   00225A  0E00               	movlw	0
  2716   00225C  6E44               	movwf	dc_motor_move_left@ret^0,c
  2717                           
  2718                           ;ECU_layer/Motor/ecu_dc_motor.c: 62:     }
  2719   00225E  EF43  F011         	goto	l2093
  2720   002262                     l2091:
  2721                           
  2722                           ;ECU_layer/Motor/ecu_dc_motor.c: 64:         gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[0x00U]),GPIO_LOW);
  2723   002262  C042  F038         	movff	dc_motor_move_left@_dc_motor,gpio_pin_write_logic@_pin_config
  2724   002266  C043  F039         	movff	dc_motor_move_left@_dc_motor+1,gpio_pin_write_logic@_pin_config+1
  2725   00226A  0E00               	movlw	0
  2726   00226C  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2727   00226E  ECB4  F00A         	call	_gpio_pin_write_logic	;wreg free
  2728                           
  2729                           ;ECU_layer/Motor/ecu_dc_motor.c: 65:         gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[0x01U]),GPIO_HIGH);
  2730   002272  0E01               	movlw	1
  2731   002274  2442               	addwf	dc_motor_move_left@_dc_motor^0,w,c
  2732   002276  6E38               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2733   002278  0E00               	movlw	0
  2734   00227A  2043               	addwfc	(dc_motor_move_left@_dc_motor+1)^0,w,c
  2735   00227C  6E39               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2736   00227E  0E01               	movlw	1
  2737   002280  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  2738   002282  ECB4  F00A         	call	_gpio_pin_write_logic	;wreg free
  2739   002286                     l2093:
  2740                           
  2741                           ;ECU_layer/Motor/ecu_dc_motor.c: 67:     return ret;
  2742   002286  5044               	movf	dc_motor_move_left@ret^0,w,c
  2743   002288  0012               	return		;funcret
  2744   00228A                     __end_of_dc_motor_move_left:
  2745                           	callstack 0
  2746                           
  2747 ;; *************** function _app_init *****************
  2748 ;; Defined at:
  2749 ;;		line 207 in file "application.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;		None
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;  ret             1    0        unsigned char 
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  1    wreg      void 
  2756 ;; Registers used:
  2757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;Total ram usage:        0 bytes
  2768 ;; Hardware stack levels used: 1
  2769 ;; Hardware stack levels required when called: 4
  2770 ;; This function calls:
  2771 ;;		_dc_motor_intialize
  2772 ;;		_keypad_intialize
  2773 ;;		_lcd_4bit_intialize
  2774 ;;		_led_intialiaze
  2775 ;; This function is called by:
  2776 ;;		_main
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           	psect	text14
  2781   002128                     __ptext14:
  2782                           	callstack 0
  2783   002128                     _app_init:
  2784                           	callstack 26
  2785   002128  0E37               	movlw	low _led_green
  2786   00212A  6E46               	movwf	led_intialiaze@led^0,c
  2787   00212C  0E00               	movlw	high _led_green
  2788   00212E  6E47               	movwf	(led_intialiaze@led+1)^0,c
  2789   002130  ECD8  F00E         	call	_led_intialiaze	;wreg free
  2790   002134  0E65               	movlw	low _led_red
  2791   002136  6E46               	movwf	led_intialiaze@led^0,c
  2792   002138  0E00               	movlw	high _led_red
  2793   00213A  6E47               	movwf	(led_intialiaze@led+1)^0,c
  2794   00213C  ECD8  F00E         	call	_led_intialiaze	;wreg free
  2795   002140  0E35               	movlw	low _motor_1
  2796   002142  6E46               	movwf	dc_motor_intialize@_dc_motor^0,c
  2797   002144  0E00               	movlw	high _motor_1
  2798   002146  6E47               	movwf	(dc_motor_intialize@_dc_motor+1)^0,c
  2799   002148  EC45  F011         	call	_dc_motor_intialize	;wreg free
  2800   00214C  0E33               	movlw	low _motor_2
  2801   00214E  6E46               	movwf	dc_motor_intialize@_dc_motor^0,c
  2802   002150  0E00               	movlw	high _motor_2
  2803   002152  6E47               	movwf	(dc_motor_intialize@_dc_motor+1)^0,c
  2804   002154  EC45  F011         	call	_dc_motor_intialize	;wreg free
  2805   002158  0E2D               	movlw	low _lcd
  2806   00215A  6E4A               	movwf	lcd_4bit_intialize@lcd^0,c
  2807   00215C  0E00               	movlw	high _lcd
  2808   00215E  6E4B               	movwf	(lcd_4bit_intialize@lcd+1)^0,c
  2809   002160  ECD8  F00B         	call	_lcd_4bit_intialize	;wreg free
  2810   002164  0E25               	movlw	low _keypad
  2811   002166  6E46               	movwf	keypad_intialize@_keypad_obj^0,c
  2812   002168  0E00               	movlw	high _keypad
  2813   00216A  6E47               	movwf	(keypad_intialize@_keypad_obj+1)^0,c
  2814   00216C  EC98  F00E         	call	_keypad_intialize	;wreg free
  2815   002170  0012               	return		;funcret
  2816   002172                     __end_of_app_init:
  2817                           	callstack 0
  2818                           
  2819 ;; *************** function _led_intialiaze *****************
  2820 ;; Defined at:
  2821 ;;		line 12 in file "ECU_layer/LED/ecu_led.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  led             2   14[COMRAM] PTR const struct .
  2824 ;;		 -> led_red(1), led_green(1), 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  pin_config_o    1   18[COMRAM] struct .
  2827 ;;  ret             1   17[COMRAM] unsigned char 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      unsigned char 
  2830 ;; Registers used:
  2831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2838 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2840 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2841 ;;Total ram usage:        5 bytes
  2842 ;; Hardware stack levels used: 1
  2843 ;; Hardware stack levels required when called: 2
  2844 ;; This function calls:
  2845 ;;		_gpio_pin_intialize
  2846 ;; This function is called by:
  2847 ;;		_app_init
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           	psect	text15
  2852   001DB0                     __ptext15:
  2853                           	callstack 0
  2854   001DB0                     _led_intialiaze:
  2855                           	callstack 27
  2856   001DB0                     
  2857                           ;ECU_layer/LED/ecu_led.c: 14:     if(led == ((void*)0)){
  2858   001DB0  5046               	movf	led_intialiaze@led^0,w,c
  2859   001DB2  1047               	iorwf	(led_intialiaze@led+1)^0,w,c
  2860   001DB4  A4D8               	btfss	status,2,c
  2861   001DB6  EFDF  F00E         	goto	u1001
  2862   001DBA  EFE1  F00E         	goto	u1000
  2863   001DBE                     u1001:
  2864   001DBE  EFE5  F00E         	goto	l121
  2865   001DC2                     u1000:
  2866   001DC2                     
  2867                           ;ECU_layer/LED/ecu_led.c: 15:         ret = (Std_ReturnType)0x00;
  2868   001DC2  0E00               	movlw	0
  2869   001DC4  6E49               	movwf	led_intialiaze@ret^0,c
  2870                           
  2871                           ;ECU_layer/LED/ecu_led.c: 16:     }
  2872   001DC6  EF15  F00F         	goto	l1971
  2873   001DCA                     l121:
  2874                           
  2875                           ;ECU_layer/LED/ecu_led.c: 18:         pin_config_t pin_config_obj = {.port = led->port, 
      +                          .pin = led->pin,
  2876   001DCA  C064  F04A         	movff	led_intialiaze@F3027,led_intialiaze@pin_config_obj
  2877   001DCE  C046  FFD9         	movff	led_intialiaze@led,fsr2l
  2878   001DD2  C047  FFDA         	movff	led_intialiaze@led+1,fsr2h
  2879   001DD6  50DF               	movf	223,w,c
  2880   001DD8  0B07               	andlw	7
  2881   001DDA  6E48               	movwf	??_led_intialiaze^0,c
  2882   001DDC  504A               	movf	led_intialiaze@pin_config_obj^0,w,c
  2883   001DDE  1848               	xorwf	??_led_intialiaze^0,w,c
  2884   001DE0  0BF8               	andlw	-8
  2885   001DE2  1848               	xorwf	??_led_intialiaze^0,w,c
  2886   001DE4  6E4A               	movwf	led_intialiaze@pin_config_obj^0,c
  2887   001DE6  C046  FFD9         	movff	led_intialiaze@led,fsr2l
  2888   001DEA  C047  FFDA         	movff	led_intialiaze@led+1,fsr2h
  2889   001DEE  30DF               	rrcf	223,w,c
  2890   001DF0  32E8               	rrcf	wreg,f,c
  2891   001DF2  32E8               	rrcf	wreg,f,c
  2892   001DF4  0B07               	andlw	7
  2893   001DF6  6E48               	movwf	??_led_intialiaze^0,c
  2894   001DF8  4648               	rlncf	??_led_intialiaze^0,f,c
  2895   001DFA  4648               	rlncf	??_led_intialiaze^0,f,c
  2896   001DFC  4648               	rlncf	??_led_intialiaze^0,f,c
  2897   001DFE  504A               	movf	led_intialiaze@pin_config_obj^0,w,c
  2898   001E00  1848               	xorwf	??_led_intialiaze^0,w,c
  2899   001E02  0BC7               	andlw	-57
  2900   001E04  1848               	xorwf	??_led_intialiaze^0,w,c
  2901   001E06  6E4A               	movwf	led_intialiaze@pin_config_obj^0,c
  2902   001E08  9C4A               	bcf	led_intialiaze@pin_config_obj^0,6,c
  2903   001E0A  C046  FFD9         	movff	led_intialiaze@led,fsr2l
  2904   001E0E  C047  FFDA         	movff	led_intialiaze@led+1,fsr2h
  2905   001E12  ACDF               	btfss	indf2,6,c
  2906   001E14  D002               	bra	u1015
  2907   001E16  8E4A               	bsf	led_intialiaze@pin_config_obj^0,7,c
  2908   001E18  D001               	bra	u1017
  2909   001E1A                     u1015:
  2910   001E1A  9E4A               	bcf	led_intialiaze@pin_config_obj^0,7,c
  2911   001E1C                     u1017:
  2912   001E1C                     
  2913                           ;ECU_layer/LED/ecu_led.c: 20:         ret = gpio_pin_intialize(&pin_config_obj);
  2914   001E1C  0E4A               	movlw	low led_intialiaze@pin_config_obj
  2915   001E1E  6E42               	movwf	gpio_pin_intialize@_pin_config^0,c
  2916   001E20  0E00               	movlw	high led_intialiaze@pin_config_obj
  2917   001E22  6E43               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  2918   001E24  ECC1  F00F         	call	_gpio_pin_intialize	;wreg free
  2919   001E28  6E49               	movwf	led_intialiaze@ret^0,c
  2920   001E2A                     l1971:
  2921                           
  2922                           ;ECU_layer/LED/ecu_led.c: 22:     return ret;
  2923   001E2A  5049               	movf	led_intialiaze@ret^0,w,c
  2924   001E2C  0012               	return		;funcret
  2925   001E2E                     __end_of_led_intialiaze:
  2926                           	callstack 0
  2927                           
  2928 ;; *************** function _lcd_4bit_intialize *****************
  2929 ;; Defined at:
  2930 ;;		line 15 in file "ECU_layer/Chr_lcd/ecu_lcd.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  lcd             2   18[COMRAM] PTR const struct .
  2933 ;;		 -> lcd(6), 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  ret             1   23[COMRAM] unsigned char 
  2936 ;;  l_counter       1   22[COMRAM] unsigned char 
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  1    wreg      unsigned char 
  2939 ;; Registers used:
  2940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2947 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2948 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2949 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2950 ;;Total ram usage:        6 bytes
  2951 ;; Hardware stack levels used: 1
  2952 ;; Hardware stack levels required when called: 3
  2953 ;; This function calls:
  2954 ;;		_gpio_pin_intialize
  2955 ;;		_lcd_4bit_send_command
  2956 ;; This function is called by:
  2957 ;;		_app_init
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           	psect	text16
  2962   0017B0                     __ptext16:
  2963                           	callstack 0
  2964   0017B0                     _lcd_4bit_intialize:
  2965                           	callstack 26
  2966   0017B0                     
  2967                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 17:     uint8 l_counter = 0;
  2968   0017B0  0E00               	movlw	0
  2969   0017B2  6E4E               	movwf	lcd_4bit_intialize@l_counter^0,c
  2970   0017B4                     
  2971                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 18:     if(lcd == ((void*)0)){
  2972   0017B4  504A               	movf	lcd_4bit_intialize@lcd^0,w,c
  2973   0017B6  104B               	iorwf	(lcd_4bit_intialize@lcd+1)^0,w,c
  2974   0017B8  A4D8               	btfss	status,2,c
  2975   0017BA  EFE1  F00B         	goto	u881
  2976   0017BE  EFE3  F00B         	goto	u880
  2977   0017C2                     u881:
  2978   0017C2  EFE7  F00B         	goto	l1799
  2979   0017C6                     u880:
  2980   0017C6                     
  2981                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 19:         ret = (Std_ReturnType)0x00;
  2982   0017C6  0E00               	movlw	0
  2983   0017C8  6E4F               	movwf	lcd_4bit_intialize@ret^0,c
  2984                           
  2985                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 20:     }
  2986   0017CA  EF64  F00C         	goto	l1833
  2987   0017CE                     l1799:
  2988                           
  2989                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 22:         ret = gpio_pin_intialize(&(lcd->lcd_rs));
  2990   0017CE  C04A  F042         	movff	lcd_4bit_intialize@lcd,gpio_pin_intialize@_pin_config
  2991   0017D2  C04B  F043         	movff	lcd_4bit_intialize@lcd+1,gpio_pin_intialize@_pin_config+1
  2992   0017D6  ECC1  F00F         	call	_gpio_pin_intialize	;wreg free
  2993   0017DA  6E4F               	movwf	lcd_4bit_intialize@ret^0,c
  2994                           
  2995                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 23:         ret = gpio_pin_intialize(&(lcd->lcd_en));
  2996   0017DC  0E01               	movlw	1
  2997   0017DE  244A               	addwf	lcd_4bit_intialize@lcd^0,w,c
  2998   0017E0  6E42               	movwf	gpio_pin_intialize@_pin_config^0,c
  2999   0017E2  0E00               	movlw	0
  3000   0017E4  204B               	addwfc	(lcd_4bit_intialize@lcd+1)^0,w,c
  3001   0017E6  6E43               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  3002   0017E8  ECC1  F00F         	call	_gpio_pin_intialize	;wreg free
  3003   0017EC  6E4F               	movwf	lcd_4bit_intialize@ret^0,c
  3004   0017EE                     
  3005                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 24:        for(l_counter = 0; l_counter < 4; l_counter++){
  3006   0017EE  0E00               	movlw	0
  3007   0017F0  6E4E               	movwf	lcd_4bit_intialize@l_counter^0,c
  3008   0017F2                     l1807:
  3009   0017F2  504E               	movf	lcd_4bit_intialize@l_counter^0,w,c
  3010   0017F4  244A               	addwf	lcd_4bit_intialize@lcd^0,w,c
  3011   0017F6  6E4C               	movwf	??_lcd_4bit_intialize^0,c
  3012   0017F8  0E00               	movlw	0
  3013   0017FA  204B               	addwfc	(lcd_4bit_intialize@lcd+1)^0,w,c
  3014   0017FC  6E4D               	movwf	(??_lcd_4bit_intialize+1)^0,c
  3015   0017FE  0E02               	movlw	2
  3016   001800  244C               	addwf	??_lcd_4bit_intialize^0,w,c
  3017   001802  6E42               	movwf	gpio_pin_intialize@_pin_config^0,c
  3018   001804  0E00               	movlw	0
  3019   001806  204D               	addwfc	(??_lcd_4bit_intialize+1)^0,w,c
  3020   001808  6E43               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  3021   00180A  ECC1  F00F         	call	_gpio_pin_intialize	;wreg free
  3022   00180E                     
  3023                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 26:        }
  3024   00180E  2A4E               	incf	lcd_4bit_intialize@l_counter^0,f,c
  3025   001810  0E03               	movlw	3
  3026   001812  644E               	cpfsgt	lcd_4bit_intialize@l_counter^0,c
  3027   001814  EF0E  F00C         	goto	u891
  3028   001818  EF10  F00C         	goto	u890
  3029   00181C                     u891:
  3030   00181C  EFF9  F00B         	goto	l1807
  3031   001820                     u890:
  3032   001820                     
  3033                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 27:         _delay((unsigned long)((20)*(4000000/4000.0)))
      +                          ;
  3034   001820  0E1A               	movlw	26
  3035   001822  6E4C               	movwf	??_lcd_4bit_intialize^0,c
  3036   001824  0EF8               	movlw	248
  3037   001826                     u1487:
  3038   001826  2EE8               	decfsz	wreg,f,c
  3039   001828  D7FE               	bra	u1487
  3040   00182A  2E4C               	decfsz	??_lcd_4bit_intialize^0,f,c
  3041   00182C  D7FC               	bra	u1487
  3042   00182E  D000               	nop2	
  3043   001830  C04A  F046         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3044   001834  C04B  F047         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  3045   001838  0E38               	movlw	56
  3046   00183A  6E48               	movwf	lcd_4bit_send_command@command^0,c
  3047   00183C  EC50  F00F         	call	_lcd_4bit_send_command	;wreg free
  3048   001840                     
  3049                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 29:         _delay((unsigned long)((5)*(4000000/4000.0)));
  3050   001840  0E07               	movlw	7
  3051   001842  6E4C               	movwf	??_lcd_4bit_intialize^0,c
  3052   001844  0E7D               	movlw	125
  3053   001846                     u1497:
  3054   001846  2EE8               	decfsz	wreg,f,c
  3055   001848  D7FE               	bra	u1497
  3056   00184A  2E4C               	decfsz	??_lcd_4bit_intialize^0,f,c
  3057   00184C  D7FC               	bra	u1497
  3058   00184E  F000               	nop	
  3059   001850  C04A  F046         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3060   001854  C04B  F047         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  3061   001858  0E38               	movlw	56
  3062   00185A  6E48               	movwf	lcd_4bit_send_command@command^0,c
  3063   00185C  EC50  F00F         	call	_lcd_4bit_send_command	;wreg free
  3064   001860                     
  3065                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 31:         _delay((unsigned long)((150)*(4000000/4000000.
      +                          0)));
  3066   001860  0E32               	movlw	50
  3067   001862                     u1507:
  3068   001862  2EE8               	decfsz	wreg,f,c
  3069   001864  D7FE               	bra	u1507
  3070   001866  C04A  F046         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3071   00186A  C04B  F047         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  3072   00186E  0E38               	movlw	56
  3073   001870  6E48               	movwf	lcd_4bit_send_command@command^0,c
  3074   001872  EC50  F00F         	call	_lcd_4bit_send_command	;wreg free
  3075   001876  C04A  F046         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3076   00187A  C04B  F047         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  3077   00187E  0E01               	movlw	1
  3078   001880  6E48               	movwf	lcd_4bit_send_command@command^0,c
  3079   001882  EC50  F00F         	call	_lcd_4bit_send_command	;wreg free
  3080   001886  C04A  F046         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3081   00188A  C04B  F047         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  3082   00188E  0E02               	movlw	2
  3083   001890  6E48               	movwf	lcd_4bit_send_command@command^0,c
  3084   001892  EC50  F00F         	call	_lcd_4bit_send_command	;wreg free
  3085   001896  C04A  F046         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3086   00189A  C04B  F047         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  3087   00189E  0E0C               	movlw	12
  3088   0018A0  6E48               	movwf	lcd_4bit_send_command@command^0,c
  3089   0018A2  EC50  F00F         	call	_lcd_4bit_send_command	;wreg free
  3090   0018A6  C04A  F046         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3091   0018AA  C04B  F047         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  3092   0018AE  0E28               	movlw	40
  3093   0018B0  6E48               	movwf	lcd_4bit_send_command@command^0,c
  3094   0018B2  EC50  F00F         	call	_lcd_4bit_send_command	;wreg free
  3095   0018B6                     
  3096                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 39:         ret = lcd_4bit_send_command(lcd, 0x80);
  3097   0018B6  C04A  F046         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3098   0018BA  C04B  F047         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  3099   0018BE  0E80               	movlw	128
  3100   0018C0  6E48               	movwf	lcd_4bit_send_command@command^0,c
  3101   0018C2  EC50  F00F         	call	_lcd_4bit_send_command	;wreg free
  3102   0018C6  6E4F               	movwf	lcd_4bit_intialize@ret^0,c
  3103   0018C8                     l1833:
  3104                           
  3105                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 41:     return ret;
  3106   0018C8  504F               	movf	lcd_4bit_intialize@ret^0,w,c
  3107   0018CA  0012               	return		;funcret
  3108   0018CC                     __end_of_lcd_4bit_intialize:
  3109                           	callstack 0
  3110                           
  3111 ;; *************** function _lcd_4bit_send_command *****************
  3112 ;; Defined at:
  3113 ;;		line 44 in file "ECU_layer/Chr_lcd/ecu_lcd.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;  lcd             2   14[COMRAM] PTR const struct .
  3116 ;;		 -> lcd(6), 
  3117 ;;  command         1   16[COMRAM] unsigned char 
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;  ret             1   17[COMRAM] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      unsigned char 
  3122 ;; Registers used:
  3123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3129 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3130 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;Total ram usage:        4 bytes
  3134 ;; Hardware stack levels used: 1
  3135 ;; Hardware stack levels required when called: 2
  3136 ;; This function calls:
  3137 ;;		_gpio_pin_write_logic
  3138 ;;		_lcd_4bit_send
  3139 ;;		_lcd_4bit_send_enable
  3140 ;; This function is called by:
  3141 ;;		_lcd_4bit_intialize
  3142 ;;		_lcd_4bit_set_cursor
  3143 ;;		_main
  3144 ;;		_lcd_4bit_send_custom_char
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           	psect	text17
  3149   001EA0                     __ptext17:
  3150                           	callstack 0
  3151   001EA0                     _lcd_4bit_send_command:
  3152                           	callstack 26
  3153   001EA0                     
  3154                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 46:     if(lcd == ((void*)0)){
  3155   001EA0  5046               	movf	lcd_4bit_send_command@lcd^0,w,c
  3156   001EA2  1047               	iorwf	(lcd_4bit_send_command@lcd+1)^0,w,c
  3157   001EA4  A4D8               	btfss	status,2,c
  3158   001EA6  EF57  F00F         	goto	u831
  3159   001EAA  EF59  F00F         	goto	u830
  3160   001EAE                     u831:
  3161   001EAE  EF5D  F00F         	goto	l1771
  3162   001EB2                     u830:
  3163   001EB2                     
  3164                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 47:         ret = (Std_ReturnType)0x00;
  3165   001EB2  0E00               	movlw	0
  3166   001EB4  6E49               	movwf	lcd_4bit_send_command@ret^0,c
  3167                           
  3168                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 48:     }
  3169   001EB6  EF87  F00F         	goto	l1773
  3170   001EBA                     l1771:
  3171                           
  3172                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 51:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),GPIO
      +                          _LOW);
  3173   001EBA  C046  F038         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  3174   001EBE  C047  F039         	movff	lcd_4bit_send_command@lcd+1,gpio_pin_write_logic@_pin_config+1
  3175   001EC2  0E00               	movlw	0
  3176   001EC4  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  3177   001EC6  ECB4  F00A         	call	_gpio_pin_write_logic	;wreg free
  3178   001ECA  6E49               	movwf	lcd_4bit_send_command@ret^0,c
  3179                           
  3180                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 53:         ret = lcd_4bit_send(lcd,command >> 4);
  3181   001ECC  C046  F042         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send@lcd
  3182   001ED0  C047  F043         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send@lcd+1
  3183   001ED4  3848               	swapf	lcd_4bit_send_command@command^0,w,c
  3184   001ED6  0B0F               	andlw	15
  3185   001ED8  6E44               	movwf	lcd_4bit_send@data_command^0,c
  3186   001EDA  EC60  F010         	call	_lcd_4bit_send	;wreg free
  3187   001EDE  6E49               	movwf	lcd_4bit_send_command@ret^0,c
  3188                           
  3189                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 55:         ret = lcd_4bit_send_enable(lcd);
  3190   001EE0  C046  F042         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable@lcd
  3191   001EE4  C047  F043         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable@lcd+1
  3192   001EE8  EC9B  F011         	call	_lcd_4bit_send_enable	;wreg free
  3193   001EEC  6E49               	movwf	lcd_4bit_send_command@ret^0,c
  3194                           
  3195                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 57:         ret = lcd_4bit_send(lcd,command);
  3196   001EEE  C046  F042         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send@lcd
  3197   001EF2  C047  F043         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send@lcd+1
  3198   001EF6  C048  F044         	movff	lcd_4bit_send_command@command,lcd_4bit_send@data_command
  3199   001EFA  EC60  F010         	call	_lcd_4bit_send	;wreg free
  3200   001EFE  6E49               	movwf	lcd_4bit_send_command@ret^0,c
  3201                           
  3202                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 59:         ret = lcd_4bit_send_enable(lcd);
  3203   001F00  C046  F042         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable@lcd
  3204   001F04  C047  F043         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable@lcd+1
  3205   001F08  EC9B  F011         	call	_lcd_4bit_send_enable	;wreg free
  3206   001F0C  6E49               	movwf	lcd_4bit_send_command@ret^0,c
  3207   001F0E                     l1773:
  3208                           
  3209                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 61:     return ret;
  3210   001F0E  5049               	movf	lcd_4bit_send_command@ret^0,w,c
  3211   001F10  0012               	return		;funcret
  3212   001F12                     __end_of_lcd_4bit_send_command:
  3213                           	callstack 0
  3214                           
  3215 ;; *************** function _lcd_4bit_send_enable *****************
  3216 ;; Defined at:
  3217 ;;		line 139 in file "ECU_layer/Chr_lcd/ecu_lcd.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;  lcd             2   10[COMRAM] PTR const struct .
  3220 ;;		 -> lcd(6), 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  ret             1   12[COMRAM] unsigned char 
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  1    wreg      unsigned char 
  3225 ;; Registers used:
  3226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3232 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3235 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3236 ;;Total ram usage:        3 bytes
  3237 ;; Hardware stack levels used: 1
  3238 ;; Hardware stack levels required when called: 1
  3239 ;; This function calls:
  3240 ;;		_gpio_pin_write_logic
  3241 ;; This function is called by:
  3242 ;;		_lcd_4bit_send_command
  3243 ;;		_lcd_4bit_send_char_data
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           	psect	text18
  3248   002336                     __ptext18:
  3249                           	callstack 0
  3250   002336                     _lcd_4bit_send_enable:
  3251                           	callstack 26
  3252   002336  0E01               	movlw	1
  3253   002338  2442               	addwf	lcd_4bit_send_enable@lcd^0,w,c
  3254   00233A  6E38               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3255   00233C  0E00               	movlw	0
  3256   00233E  2043               	addwfc	(lcd_4bit_send_enable@lcd+1)^0,w,c
  3257   002340  6E39               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  3258   002342  0E01               	movlw	1
  3259   002344  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  3260   002346  ECB4  F00A         	call	_gpio_pin_write_logic	;wreg free
  3261   00234A                     
  3262                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 142:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  3263   00234A  D000               	nop2		;2 cycle nop
  3264   00234C  D000               	nop2		;2 cycle nop
  3265   00234E  F000               	nop	
  3266   002350                     
  3267                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 143:     ret = gpio_pin_write_logic(&(lcd->lcd_en),GPIO_LO
      +                          W);
  3268   002350  0E01               	movlw	1
  3269   002352  2442               	addwf	lcd_4bit_send_enable@lcd^0,w,c
  3270   002354  6E38               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3271   002356  0E00               	movlw	0
  3272   002358  2043               	addwfc	(lcd_4bit_send_enable@lcd+1)^0,w,c
  3273   00235A  6E39               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  3274   00235C  0E00               	movlw	0
  3275   00235E  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  3276   002360  ECB4  F00A         	call	_gpio_pin_write_logic	;wreg free
  3277   002364  6E44               	movwf	lcd_4bit_send_enable@ret^0,c
  3278                           
  3279                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 144:     return ret;
  3280   002366  5044               	movf	lcd_4bit_send_enable@ret^0,w,c
  3281   002368  0012               	return		;funcret
  3282   00236A                     __end_of_lcd_4bit_send_enable:
  3283                           	callstack 0
  3284                           
  3285 ;; *************** function _lcd_4bit_send *****************
  3286 ;; Defined at:
  3287 ;;		line 147 in file "ECU_layer/Chr_lcd/ecu_lcd.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;  lcd             2   10[COMRAM] PTR const struct .
  3290 ;;		 -> lcd(6), 
  3291 ;;  data_command    1   12[COMRAM] unsigned char 
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;  ret             1   13[COMRAM] unsigned char 
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1    wreg      unsigned char 
  3296 ;; Registers used:
  3297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3303 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3304 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3306 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3307 ;;Total ram usage:        4 bytes
  3308 ;; Hardware stack levels used: 1
  3309 ;; Hardware stack levels required when called: 1
  3310 ;; This function calls:
  3311 ;;		_gpio_pin_write_logic
  3312 ;; This function is called by:
  3313 ;;		_lcd_4bit_send_command
  3314 ;;		_lcd_4bit_send_char_data
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           	psect	text19
  3319   0020C0                     __ptext19:
  3320                           	callstack 0
  3321   0020C0                     _lcd_4bit_send:
  3322                           	callstack 26
  3323   0020C0  0E02               	movlw	2
  3324   0020C2  2442               	addwf	lcd_4bit_send@lcd^0,w,c
  3325   0020C4  6E38               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3326   0020C6  0E00               	movlw	0
  3327   0020C8  2043               	addwfc	(lcd_4bit_send@lcd+1)^0,w,c
  3328   0020CA  6E39               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  3329   0020CC  5044               	movf	lcd_4bit_send@data_command^0,w,c
  3330   0020CE  0B01               	andlw	1
  3331   0020D0  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  3332   0020D2  ECB4  F00A         	call	_gpio_pin_write_logic	;wreg free
  3333   0020D6  0E03               	movlw	3
  3334   0020D8  2442               	addwf	lcd_4bit_send@lcd^0,w,c
  3335   0020DA  6E38               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3336   0020DC  0E00               	movlw	0
  3337   0020DE  2043               	addwfc	(lcd_4bit_send@lcd+1)^0,w,c
  3338   0020E0  6E39               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  3339   0020E2  90D8               	bcf	status,0,c
  3340   0020E4  3044               	rrcf	lcd_4bit_send@data_command^0,w,c
  3341   0020E6  0B01               	andlw	1
  3342   0020E8  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  3343   0020EA  ECB4  F00A         	call	_gpio_pin_write_logic	;wreg free
  3344   0020EE  0E04               	movlw	4
  3345   0020F0  2442               	addwf	lcd_4bit_send@lcd^0,w,c
  3346   0020F2  6E38               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3347   0020F4  0E00               	movlw	0
  3348   0020F6  2043               	addwfc	(lcd_4bit_send@lcd+1)^0,w,c
  3349   0020F8  6E39               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  3350   0020FA  4044               	rrncf	lcd_4bit_send@data_command^0,w,c
  3351   0020FC  42E8               	rrncf	wreg,f,c
  3352   0020FE  0B3F               	andlw	63
  3353   002100  0B01               	andlw	1
  3354   002102  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  3355   002104  ECB4  F00A         	call	_gpio_pin_write_logic	;wreg free
  3356   002108                     
  3357                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 152:     ret = gpio_pin_write_logic(&(lcd->lcd_data[3]), (
      +                          data_command >> 3) & (uint8)0x01);
  3358   002108  0E05               	movlw	5
  3359   00210A  2442               	addwf	lcd_4bit_send@lcd^0,w,c
  3360   00210C  6E38               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3361   00210E  0E00               	movlw	0
  3362   002110  2043               	addwfc	(lcd_4bit_send@lcd+1)^0,w,c
  3363   002112  6E39               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  3364   002114  3844               	swapf	lcd_4bit_send@data_command^0,w,c
  3365   002116  46E8               	rlncf	wreg,f,c
  3366   002118  0B1F               	andlw	31
  3367   00211A  0B01               	andlw	1
  3368   00211C  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  3369   00211E  ECB4  F00A         	call	_gpio_pin_write_logic	;wreg free
  3370   002122  6E45               	movwf	lcd_4bit_send@ret^0,c
  3371                           
  3372                           ;ECU_layer/Chr_lcd/ecu_lcd.c: 153:     return ret;
  3373   002124  5045               	movf	lcd_4bit_send@ret^0,w,c
  3374   002126  0012               	return		;funcret
  3375   002128                     __end_of_lcd_4bit_send:
  3376                           	callstack 0
  3377                           
  3378 ;; *************** function _keypad_intialize *****************
  3379 ;; Defined at:
  3380 ;;		line 22 in file "ECU_layer/Keypad/ecu_kaypad.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;  _keypad_obj     2   14[COMRAM] PTR const struct .
  3383 ;;		 -> keypad(8), 
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;  columns_coun    1   20[COMRAM] unsigned char 
  3386 ;;  rows_counter    1   19[COMRAM] unsigned char 
  3387 ;;  ret             1   18[COMRAM] unsigned char 
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  1    wreg      unsigned char 
  3390 ;; Registers used:
  3391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3397 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3399 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3401 ;;Total ram usage:        7 bytes
  3402 ;; Hardware stack levels used: 1
  3403 ;; Hardware stack levels required when called: 2
  3404 ;; This function calls:
  3405 ;;		_gpio_pin_direction_intialize
  3406 ;;		_gpio_pin_intialize
  3407 ;; This function is called by:
  3408 ;;		_app_init
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text20
  3413   001D30                     __ptext20:
  3414                           	callstack 0
  3415   001D30                     _keypad_intialize:
  3416                           	callstack 27
  3417   001D30                     
  3418                           ;ECU_layer/Keypad/ecu_kaypad.c: 24:     uint8 rows_counter = 0, columns_counter = 0;
  3419   001D30  0E00               	movlw	0
  3420   001D32  6E4B               	movwf	keypad_intialize@rows_counter^0,c
  3421   001D34  0E00               	movlw	0
  3422   001D36  6E4C               	movwf	keypad_intialize@columns_counter^0,c
  3423   001D38                     
  3424                           ;ECU_layer/Keypad/ecu_kaypad.c: 25:     if(((void*)0) == _keypad_obj){
  3425   001D38  5046               	movf	keypad_intialize@_keypad_obj^0,w,c
  3426   001D3A  1047               	iorwf	(keypad_intialize@_keypad_obj+1)^0,w,c
  3427   001D3C  A4D8               	btfss	status,2,c
  3428   001D3E  EFA3  F00E         	goto	u911
  3429   001D42  EFA5  F00E         	goto	u910
  3430   001D46                     u911:
  3431   001D46  EFA9  F00E         	goto	l1875
  3432   001D4A                     u910:
  3433   001D4A                     
  3434                           ;ECU_layer/Keypad/ecu_kaypad.c: 26:         ret = (Std_ReturnType)0x00;
  3435   001D4A  0E00               	movlw	0
  3436   001D4C  6E4A               	movwf	keypad_intialize@ret^0,c
  3437                           
  3438                           ;ECU_layer/Keypad/ecu_kaypad.c: 27:     }
  3439   001D4E  EFD6  F00E         	goto	l1899
  3440   001D52                     l1875:
  3441                           
  3442                           ;ECU_layer/Keypad/ecu_kaypad.c: 29:         for(rows_counter=0; rows_counter<4; rows_cou
      +                          nter++){
  3443   001D52  0E00               	movlw	0
  3444   001D54  6E4B               	movwf	keypad_intialize@rows_counter^0,c
  3445   001D56                     l1881:
  3446   001D56  504B               	movf	keypad_intialize@rows_counter^0,w,c
  3447   001D58  2446               	addwf	keypad_intialize@_keypad_obj^0,w,c
  3448   001D5A  6E42               	movwf	gpio_pin_intialize@_pin_config^0,c
  3449   001D5C  0E00               	movlw	0
  3450   001D5E  2047               	addwfc	(keypad_intialize@_keypad_obj+1)^0,w,c
  3451   001D60  6E43               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  3452   001D62  ECC1  F00F         	call	_gpio_pin_intialize	;wreg free
  3453   001D66                     
  3454                           ;ECU_layer/Keypad/ecu_kaypad.c: 31:         }
  3455   001D66  2A4B               	incf	keypad_intialize@rows_counter^0,f,c
  3456   001D68  0E03               	movlw	3
  3457   001D6A  644B               	cpfsgt	keypad_intialize@rows_counter^0,c
  3458   001D6C  EFBA  F00E         	goto	u921
  3459   001D70  EFBC  F00E         	goto	u920
  3460   001D74                     u921:
  3461   001D74  EFAB  F00E         	goto	l1881
  3462   001D78                     u920:
  3463   001D78                     
  3464                           ;ECU_layer/Keypad/ecu_kaypad.c: 32:         for(columns_counter=0; columns_counter<4; co
      +                          lumns_counter++){
  3465   001D78  0E00               	movlw	0
  3466   001D7A  6E4C               	movwf	keypad_intialize@columns_counter^0,c
  3467   001D7C                     l1893:
  3468                           
  3469                           ;ECU_layer/Keypad/ecu_kaypad.c: 33:             ret = gpio_pin_direction_intialize(&(_ke
      +                          ypad_obj->keypad_columns_pins[columns_counter]));
  3470   001D7C  504C               	movf	keypad_intialize@columns_counter^0,w,c
  3471   001D7E  2446               	addwf	keypad_intialize@_keypad_obj^0,w,c
  3472   001D80  6E48               	movwf	??_keypad_intialize^0,c
  3473   001D82  0E00               	movlw	0
  3474   001D84  2047               	addwfc	(keypad_intialize@_keypad_obj+1)^0,w,c
  3475   001D86  6E49               	movwf	(??_keypad_intialize+1)^0,c
  3476   001D88  0E04               	movlw	4
  3477   001D8A  2448               	addwf	??_keypad_intialize^0,w,c
  3478   001D8C  6E38               	movwf	gpio_pin_direction_intialize@_pin_config^0,c
  3479   001D8E  0E00               	movlw	0
  3480   001D90  2049               	addwfc	(??_keypad_intialize+1)^0,w,c
  3481   001D92  6E39               	movwf	(gpio_pin_direction_intialize@_pin_config+1)^0,c
  3482   001D94  EC12  F00A         	call	_gpio_pin_direction_intialize	;wreg free
  3483   001D98  6E4A               	movwf	keypad_intialize@ret^0,c
  3484   001D9A                     
  3485                           ;ECU_layer/Keypad/ecu_kaypad.c: 34:         }
  3486   001D9A  2A4C               	incf	keypad_intialize@columns_counter^0,f,c
  3487   001D9C  0E03               	movlw	3
  3488   001D9E  644C               	cpfsgt	keypad_intialize@columns_counter^0,c
  3489   001DA0  EFD4  F00E         	goto	u931
  3490   001DA4  EFD6  F00E         	goto	u930
  3491   001DA8                     u931:
  3492   001DA8  EFBE  F00E         	goto	l1893
  3493   001DAC                     u930:
  3494   001DAC                     l1899:
  3495                           
  3496                           ;ECU_layer/Keypad/ecu_kaypad.c: 36:     return ret;
  3497   001DAC  504A               	movf	keypad_intialize@ret^0,w,c
  3498   001DAE  0012               	return		;funcret
  3499   001DB0                     __end_of_keypad_intialize:
  3500                           	callstack 0
  3501                           
  3502 ;; *************** function _dc_motor_intialize *****************
  3503 ;; Defined at:
  3504 ;;		line 18 in file "ECU_layer/Motor/ecu_dc_motor.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  _dc_motor       2   14[COMRAM] PTR const struct .
  3507 ;;		 -> motor_2(2), motor_1(2), 
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;  ret             1   16[COMRAM] unsigned char 
  3510 ;; Return value:  Size  Location     Type
  3511 ;;                  1    wreg      unsigned char 
  3512 ;; Registers used:
  3513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/0
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3519 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;Total ram usage:        3 bytes
  3524 ;; Hardware stack levels used: 1
  3525 ;; Hardware stack levels required when called: 2
  3526 ;; This function calls:
  3527 ;;		_gpio_pin_intialize
  3528 ;; This function is called by:
  3529 ;;		_app_init
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533                           	psect	text21
  3534   00228A                     __ptext21:
  3535                           	callstack 0
  3536   00228A                     _dc_motor_intialize:
  3537                           	callstack 27
  3538   00228A                     
  3539                           ;ECU_layer/Motor/ecu_dc_motor.c: 19:     Std_ReturnType ret = (Std_ReturnType)0x01;
  3540   00228A  0E01               	movlw	1
  3541   00228C  6E48               	movwf	dc_motor_intialize@ret^0,c
  3542   00228E                     
  3543                           ;ECU_layer/Motor/ecu_dc_motor.c: 20:     if(((void*)0) == _dc_motor){
  3544   00228E  5046               	movf	dc_motor_intialize@_dc_motor^0,w,c
  3545   002290  1047               	iorwf	(dc_motor_intialize@_dc_motor+1)^0,w,c
  3546   002292  A4D8               	btfss	status,2,c
  3547   002294  EF4E  F011         	goto	u1021
  3548   002298  EF50  F011         	goto	u1020
  3549   00229C                     u1021:
  3550   00229C  EF54  F011         	goto	l1981
  3551   0022A0                     u1020:
  3552   0022A0                     
  3553                           ;ECU_layer/Motor/ecu_dc_motor.c: 21:         ret = (Std_ReturnType)0x00;
  3554   0022A0  0E00               	movlw	0
  3555   0022A2  6E48               	movwf	dc_motor_intialize@ret^0,c
  3556                           
  3557                           ;ECU_layer/Motor/ecu_dc_motor.c: 22:     }
  3558   0022A4  EF62  F011         	goto	l1983
  3559   0022A8                     l1981:
  3560                           
  3561                           ;ECU_layer/Motor/ecu_dc_motor.c: 24:      gpio_pin_intialize(&(_dc_motor->dc_motor_pin[0
      +                          x00U]));
  3562   0022A8  C046  F042         	movff	dc_motor_intialize@_dc_motor,gpio_pin_intialize@_pin_config
  3563   0022AC  C047  F043         	movff	dc_motor_intialize@_dc_motor+1,gpio_pin_intialize@_pin_config+1
  3564   0022B0  ECC1  F00F         	call	_gpio_pin_intialize	;wreg free
  3565                           
  3566                           ;ECU_layer/Motor/ecu_dc_motor.c: 25:      gpio_pin_intialize(&(_dc_motor->dc_motor_pin[0
      +                          x01U]));
  3567   0022B4  0E01               	movlw	1
  3568   0022B6  2446               	addwf	dc_motor_intialize@_dc_motor^0,w,c
  3569   0022B8  6E42               	movwf	gpio_pin_intialize@_pin_config^0,c
  3570   0022BA  0E00               	movlw	0
  3571   0022BC  2047               	addwfc	(dc_motor_intialize@_dc_motor+1)^0,w,c
  3572   0022BE  6E43               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  3573   0022C0  ECC1  F00F         	call	_gpio_pin_intialize	;wreg free
  3574   0022C4                     l1983:
  3575                           
  3576                           ;ECU_layer/Motor/ecu_dc_motor.c: 27:     return ret;
  3577   0022C4  5048               	movf	dc_motor_intialize@ret^0,w,c
  3578   0022C6  0012               	return		;funcret
  3579   0022C8                     __end_of_dc_motor_intialize:
  3580                           	callstack 0
  3581                           
  3582 ;; *************** function _gpio_pin_intialize *****************
  3583 ;; Defined at:
  3584 ;;		line 93 in file "MCAL_layer/GPIO/hal_gpio.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;  _pin_config     2   10[COMRAM] PTR const struct .
  3587 ;;		 -> keypad.keypad_row_pins(4), keypad(8), lcd.lcd_data(4), lcd(6), 
  3588 ;;		 -> motor_2.dc_motor_pin(2), motor_2(2), motor_1.dc_motor_pin(2), motor_1(2), 
  3589 ;;		 -> led_intialiaze@pin_config_obj(1), 
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;  ret             1   13[COMRAM] unsigned char 
  3592 ;; Return value:  Size  Location     Type
  3593 ;;                  1    wreg      unsigned char 
  3594 ;; Registers used:
  3595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3596 ;; Tracked objects:
  3597 ;;		On entry : 0/0
  3598 ;;		On exit  : 0/0
  3599 ;;		Unchanged: 0/0
  3600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3603 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3604 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3605 ;;Total ram usage:        4 bytes
  3606 ;; Hardware stack levels used: 1
  3607 ;; Hardware stack levels required when called: 1
  3608 ;; This function calls:
  3609 ;;		_gpio_pin_direction_intialize
  3610 ;;		_gpio_pin_write_logic
  3611 ;; This function is called by:
  3612 ;;		_lcd_4bit_intialize
  3613 ;;		_keypad_intialize
  3614 ;;		_led_intialiaze
  3615 ;;		_dc_motor_intialize
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           	psect	text22
  3620   001F82                     __ptext22:
  3621                           	callstack 0
  3622   001F82                     _gpio_pin_intialize:
  3623                           	callstack 27
  3624   001F82                     
  3625                           ;MCAL_layer/GPIO/hal_gpio.c: 95:     if(_pin_config == ((void*)0) || _pin_config->pin > 
      +                          8 -1){
  3626   001F82  5042               	movf	gpio_pin_intialize@_pin_config^0,w,c
  3627   001F84  1043               	iorwf	(gpio_pin_intialize@_pin_config+1)^0,w,c
  3628   001F86  B4D8               	btfsc	status,2,c
  3629   001F88  EFC8  F00F         	goto	u811
  3630   001F8C  EFCA  F00F         	goto	u810
  3631   001F90                     u811:
  3632   001F90  EFDB  F00F         	goto	l1757
  3633   001F94                     u810:
  3634   001F94  C042  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  3635   001F98  C043  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  3636   001F9C  30DF               	rrcf	223,w,c
  3637   001F9E  32E8               	rrcf	wreg,f,c
  3638   001FA0  32E8               	rrcf	wreg,f,c
  3639   001FA2  0B07               	andlw	7
  3640   001FA4  6E44               	movwf	??_gpio_pin_intialize^0,c
  3641   001FA6  0E07               	movlw	7
  3642   001FA8  6444               	cpfsgt	??_gpio_pin_intialize^0,c
  3643   001FAA  EFD9  F00F         	goto	u821
  3644   001FAE  EFDB  F00F         	goto	u820
  3645   001FB2                     u821:
  3646   001FB2  EFDF  F00F         	goto	l1759
  3647   001FB6                     u820:
  3648   001FB6                     l1757:
  3649                           
  3650                           ;MCAL_layer/GPIO/hal_gpio.c: 96:         ret = (Std_ReturnType)0x00;
  3651   001FB6  0E00               	movlw	0
  3652   001FB8  6E45               	movwf	gpio_pin_intialize@ret^0,c
  3653                           
  3654                           ;MCAL_layer/GPIO/hal_gpio.c: 97:     }
  3655   001FBA  EFF5  F00F         	goto	l1761
  3656   001FBE                     l1759:
  3657                           
  3658                           ;MCAL_layer/GPIO/hal_gpio.c: 99:         ret = gpio_pin_direction_intialize(_pin_config)
      +                          ;
  3659   001FBE  C042  F038         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  3660   001FC2  C043  F039         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_direction_intialize@_pin_config+1
  3661   001FC6  EC12  F00A         	call	_gpio_pin_direction_intialize	;wreg free
  3662   001FCA  6E45               	movwf	gpio_pin_intialize@ret^0,c
  3663                           
  3664                           ;MCAL_layer/GPIO/hal_gpio.c: 100:         ret = gpio_pin_write_logic(_pin_config,_pin_co
      +                          nfig->logic);
  3665   001FCC  C042  F038         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  3666   001FD0  C043  F039         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  3667   001FD4  C042  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  3668   001FD8  C043  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  3669   001FDC  0E00               	movlw	0
  3670   001FDE  BEDF               	btfsc	indf2,7,c
  3671   001FE0  0E01               	movlw	1
  3672   001FE2  6E3A               	movwf	gpio_pin_write_logic@logic^0,c
  3673   001FE4  ECB4  F00A         	call	_gpio_pin_write_logic	;wreg free
  3674   001FE8  6E45               	movwf	gpio_pin_intialize@ret^0,c
  3675   001FEA                     l1761:
  3676                           
  3677                           ;MCAL_layer/GPIO/hal_gpio.c: 102:     return ret;
  3678   001FEA  5045               	movf	gpio_pin_intialize@ret^0,w,c
  3679   001FEC  0012               	return		;funcret
  3680   001FEE                     __end_of_gpio_pin_intialize:
  3681                           	callstack 0
  3682                           
  3683 ;; *************** function _gpio_pin_write_logic *****************
  3684 ;; Defined at:
  3685 ;;		line 48 in file "MCAL_layer/GPIO/hal_gpio.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  3688 ;;		 -> keypad.keypad_row_pins(4), keypad(8), lcd.lcd_data(4), lcd(6), 
  3689 ;;		 -> motor_2.dc_motor_pin(2), motor_2(2), motor_1.dc_motor_pin(2), motor_1(2), 
  3690 ;;		 -> led_turn_off@pin_config_obj(1), led_turn_on@pin_config_obj(1), led_intialiaze@pin_config_obj(1), 
  3691 ;;  logic           1    2[COMRAM] enum E2968
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;  ret             1    9[COMRAM] unsigned char 
  3694 ;; Return value:  Size  Location     Type
  3695 ;;                  1    wreg      unsigned char 
  3696 ;; Registers used:
  3697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3703 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3705 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3706 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3707 ;;Total ram usage:       10 bytes
  3708 ;; Hardware stack levels used: 1
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		_lcd_4bit_send_command
  3713 ;;		_lcd_4bit_send_char_data
  3714 ;;		_lcd_4bit_send_enable
  3715 ;;		_lcd_4bit_send
  3716 ;;		_keypad_get_value
  3717 ;;		_led_turn_on
  3718 ;;		_led_turn_off
  3719 ;;		_dc_motor_move_right
  3720 ;;		_dc_motor_move_left
  3721 ;;		_dc_motor_stop
  3722 ;;		_gpio_pin_intialize
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text23
  3727   001568                     __ptext23:
  3728                           	callstack 0
  3729   001568                     _gpio_pin_write_logic:
  3730                           	callstack 29
  3731   001568                     
  3732                           ;MCAL_layer/GPIO/hal_gpio.c: 49:     Std_ReturnType ret = (Std_ReturnType)0x01;
  3733   001568  0E01               	movlw	1
  3734   00156A  6E41               	movwf	gpio_pin_write_logic@ret^0,c
  3735   00156C                     
  3736                           ;MCAL_layer/GPIO/hal_gpio.c: 50:     if(_pin_config == ((void*)0) || _pin_config->pin > 
      +                          8 -1){
  3737   00156C  5038               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3738   00156E  1039               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  3739   001570  B4D8               	btfsc	status,2,c
  3740   001572  EFBD  F00A         	goto	u711
  3741   001576  EFBF  F00A         	goto	u710
  3742   00157A                     u711:
  3743   00157A  EFD0  F00A         	goto	l1687
  3744   00157E                     u710:
  3745   00157E  C038  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3746   001582  C039  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3747   001586  30DF               	rrcf	223,w,c
  3748   001588  32E8               	rrcf	wreg,f,c
  3749   00158A  32E8               	rrcf	wreg,f,c
  3750   00158C  0B07               	andlw	7
  3751   00158E  6E3B               	movwf	??_gpio_pin_write_logic^0,c
  3752   001590  0E07               	movlw	7
  3753   001592  643B               	cpfsgt	??_gpio_pin_write_logic^0,c
  3754   001594  EFCE  F00A         	goto	u721
  3755   001598  EFD0  F00A         	goto	u720
  3756   00159C                     u721:
  3757   00159C  EF33  F00B         	goto	l1695
  3758   0015A0                     u720:
  3759   0015A0                     l1687:
  3760                           
  3761                           ;MCAL_layer/GPIO/hal_gpio.c: 51:         ret = (Std_ReturnType)0x00;
  3762   0015A0  0E00               	movlw	0
  3763   0015A2  6E41               	movwf	gpio_pin_write_logic@ret^0,c
  3764                           
  3765                           ;MCAL_layer/GPIO/hal_gpio.c: 52:     }
  3766   0015A4  EF48  F00B         	goto	l1697
  3767   0015A8                     l1689:
  3768                           
  3769                           ;MCAL_layer/GPIO/hal_gpio.c: 56:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8) 1 << _pin_config->pin));
  3770   0015A8  C038  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3771   0015AC  C039  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3772   0015B0  30DF               	rrcf	223,w,c
  3773   0015B2  32E8               	rrcf	wreg,f,c
  3774   0015B4  32E8               	rrcf	wreg,f,c
  3775   0015B6  0B07               	andlw	7
  3776   0015B8  6E3B               	movwf	??_gpio_pin_write_logic^0,c
  3777   0015BA  0E01               	movlw	1
  3778   0015BC  6E3C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3779   0015BE  2A3B               	incf	??_gpio_pin_write_logic^0,f,c
  3780   0015C0  EFE4  F00A         	goto	u734
  3781   0015C4                     u735:
  3782   0015C4  90D8               	bcf	status,0,c
  3783   0015C6  363C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3784   0015C8                     u734:
  3785   0015C8  2E3B               	decfsz	??_gpio_pin_write_logic^0,f,c
  3786   0015CA  EFE2  F00A         	goto	u735
  3787   0015CE  503C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3788   0015D0  0AFF               	xorlw	255
  3789   0015D2  6E3D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3790   0015D4  C038  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3791   0015D8  C039  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3792   0015DC  50DF               	movf	223,w,c
  3793   0015DE  0B07               	andlw	7
  3794   0015E0  6E3E               	movwf	(??_gpio_pin_write_logic+3)^0,c
  3795   0015E2  503E               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  3796   0015E4  0D02               	mullw	2
  3797   0015E6  0E01               	movlw	low _lat_registers
  3798   0015E8  24F3               	addwf	243,w,c
  3799   0015EA  6ED9               	movwf	fsr2l,c
  3800   0015EC  0E00               	movlw	high _lat_registers
  3801   0015EE  20F4               	addwfc	prodh,w,c
  3802   0015F0  6EDA               	movwf	fsr2h,c
  3803   0015F2  CFDE F03F          	movff	postinc2,??_gpio_pin_write_logic+4
  3804   0015F6  CFDD F040          	movff	postdec2,??_gpio_pin_write_logic+5
  3805   0015FA  C03F  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  3806   0015FE  C040  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  3807   001602  503D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3808   001604  16DF               	andwf	indf2,f,c
  3809                           
  3810                           ;MCAL_layer/GPIO/hal_gpio.c: 57:                 break;
  3811   001606  EF48  F00B         	goto	l1697
  3812   00160A                     l1691:
  3813                           
  3814                           ;MCAL_layer/GPIO/hal_gpio.c: 59:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8) 1 << _pin_config->pin));
  3815   00160A  C038  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3816   00160E  C039  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3817   001612  30DF               	rrcf	223,w,c
  3818   001614  32E8               	rrcf	wreg,f,c
  3819   001616  32E8               	rrcf	wreg,f,c
  3820   001618  0B07               	andlw	7
  3821   00161A  6E3B               	movwf	??_gpio_pin_write_logic^0,c
  3822   00161C  0E01               	movlw	1
  3823   00161E  6E3C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3824   001620  2A3B               	incf	??_gpio_pin_write_logic^0,f,c
  3825   001622  EF15  F00B         	goto	u744
  3826   001626                     u745:
  3827   001626  90D8               	bcf	status,0,c
  3828   001628  363C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3829   00162A                     u744:
  3830   00162A  2E3B               	decfsz	??_gpio_pin_write_logic^0,f,c
  3831   00162C  EF13  F00B         	goto	u745
  3832   001630  C038  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3833   001634  C039  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3834   001638  50DF               	movf	223,w,c
  3835   00163A  0B07               	andlw	7
  3836   00163C  6E3D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3837   00163E  503D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3838   001640  0D02               	mullw	2
  3839   001642  0E01               	movlw	low _lat_registers
  3840   001644  24F3               	addwf	243,w,c
  3841   001646  6ED9               	movwf	fsr2l,c
  3842   001648  0E00               	movlw	high _lat_registers
  3843   00164A  20F4               	addwfc	prodh,w,c
  3844   00164C  6EDA               	movwf	fsr2h,c
  3845   00164E  CFDE F03E          	movff	postinc2,??_gpio_pin_write_logic+3
  3846   001652  CFDD F03F          	movff	postdec2,??_gpio_pin_write_logic+4
  3847   001656  C03E  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  3848   00165A  C03F  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  3849   00165E  503C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3850   001660  12DF               	iorwf	indf2,f,c
  3851                           
  3852                           ;MCAL_layer/GPIO/hal_gpio.c: 60:                 break;
  3853   001662  EF48  F00B         	goto	l1697
  3854   001666                     l1695:
  3855   001666  503A               	movf	gpio_pin_write_logic@logic^0,w,c
  3856   001668  6E3B               	movwf	??_gpio_pin_write_logic^0,c
  3857   00166A  6A3C               	clrf	(??_gpio_pin_write_logic+1)^0,c
  3858                           
  3859                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3860                           ; Switch size 1, requested type "simple"
  3861                           ; Number of cases is 1, Range of values is 0 to 0
  3862                           ; switch strategies available:
  3863                           ; Name         Instructions Cycles
  3864                           ; simple_byte            4     3 (average)
  3865                           ;	Chosen strategy is simple_byte
  3866   00166C  503C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3867   00166E  0A00               	xorlw	0	; case 0
  3868   001670  B4D8               	btfsc	status,2,c
  3869   001672  EF3D  F00B         	goto	l2367
  3870   001676  EFD0  F00A         	goto	l1687
  3871   00167A                     l2367:
  3872                           
  3873                           ; Switch size 1, requested type "simple"
  3874                           ; Number of cases is 2, Range of values is 0 to 1
  3875                           ; switch strategies available:
  3876                           ; Name         Instructions Cycles
  3877                           ; simple_byte            7     4 (average)
  3878                           ;	Chosen strategy is simple_byte
  3879   00167A  503B               	movf	??_gpio_pin_write_logic^0,w,c
  3880   00167C  0A00               	xorlw	0	; case 0
  3881   00167E  B4D8               	btfsc	status,2,c
  3882   001680  EFD4  F00A         	goto	l1689
  3883   001684  0A01               	xorlw	1	; case 1
  3884   001686  B4D8               	btfsc	status,2,c
  3885   001688  EF05  F00B         	goto	l1691
  3886   00168C  EFD0  F00A         	goto	l1687
  3887   001690                     l1697:
  3888                           
  3889                           ;MCAL_layer/GPIO/hal_gpio.c: 64:     return ret;
  3890   001690  5041               	movf	gpio_pin_write_logic@ret^0,w,c
  3891   001692  0012               	return		;funcret
  3892   001694                     __end_of_gpio_pin_write_logic:
  3893                           	callstack 0
  3894                           
  3895 ;; *************** function _gpio_pin_direction_intialize *****************
  3896 ;; Defined at:
  3897 ;;		line 21 in file "MCAL_layer/GPIO/hal_gpio.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  3900 ;;		 -> keypad.keypad_columns_pins(4), keypad.keypad_row_pins(4), keypad(8), lcd.lcd_data(4), 
  3901 ;;		 -> lcd(6), motor_2.dc_motor_pin(2), motor_2(2), motor_1.dc_motor_pin(2), 
  3902 ;;		 -> motor_1(2), led_intialiaze@pin_config_obj(1), 
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;  ret             1    8[COMRAM] unsigned char 
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  1    wreg      unsigned char 
  3907 ;; Registers used:
  3908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3916 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3917 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3918 ;;Total ram usage:        9 bytes
  3919 ;; Hardware stack levels used: 1
  3920 ;; This function calls:
  3921 ;;		Nothing
  3922 ;; This function is called by:
  3923 ;;		_keypad_intialize
  3924 ;;		_gpio_pin_intialize
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           	psect	text24
  3929   001424                     __ptext24:
  3930                           	callstack 0
  3931   001424                     _gpio_pin_direction_intialize:
  3932                           	callstack 27
  3933   001424                     
  3934                           ;MCAL_layer/GPIO/hal_gpio.c: 22:     Std_ReturnType ret = (Std_ReturnType)0x01;
  3935   001424  0E01               	movlw	1
  3936   001426  6E40               	movwf	gpio_pin_direction_intialize@ret^0,c
  3937   001428                     
  3938                           ;MCAL_layer/GPIO/hal_gpio.c: 23:     if(_pin_config == ((void*)0) || _pin_config->pin > 
      +                          8 -1){
  3939   001428  5038               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  3940   00142A  1039               	iorwf	(gpio_pin_direction_intialize@_pin_config+1)^0,w,c
  3941   00142C  B4D8               	btfsc	status,2,c
  3942   00142E  EF1B  F00A         	goto	u751
  3943   001432  EF1D  F00A         	goto	u750
  3944   001436                     u751:
  3945   001436  EF2E  F00A         	goto	l1733
  3946   00143A                     u750:
  3947   00143A  C038  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  3948   00143E  C039  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  3949   001442  30DF               	rrcf	223,w,c
  3950   001444  32E8               	rrcf	wreg,f,c
  3951   001446  32E8               	rrcf	wreg,f,c
  3952   001448  0B07               	andlw	7
  3953   00144A  6E3A               	movwf	??_gpio_pin_direction_intialize^0,c
  3954   00144C  0E07               	movlw	7
  3955   00144E  643A               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  3956   001450  EF2C  F00A         	goto	u761
  3957   001454  EF2E  F00A         	goto	u760
  3958   001458                     u761:
  3959   001458  EF91  F00A         	goto	l1741
  3960   00145C                     u760:
  3961   00145C                     l1733:
  3962                           
  3963                           ;MCAL_layer/GPIO/hal_gpio.c: 24:         ret = (Std_ReturnType)0x00;
  3964   00145C  0E00               	movlw	0
  3965   00145E  6E40               	movwf	gpio_pin_direction_intialize@ret^0,c
  3966                           
  3967                           ;MCAL_layer/GPIO/hal_gpio.c: 25:     }
  3968   001460  EFB2  F00A         	goto	l1743
  3969   001464                     l1735:
  3970                           
  3971                           ;MCAL_layer/GPIO/hal_gpio.c: 29:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8) 1 << _pin_config->pin));
  3972   001464  C038  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  3973   001468  C039  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  3974   00146C  30DF               	rrcf	223,w,c
  3975   00146E  32E8               	rrcf	wreg,f,c
  3976   001470  32E8               	rrcf	wreg,f,c
  3977   001472  0B07               	andlw	7
  3978   001474  6E3A               	movwf	??_gpio_pin_direction_intialize^0,c
  3979   001476  0E01               	movlw	1
  3980   001478  6E3B               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  3981   00147A  2A3A               	incf	??_gpio_pin_direction_intialize^0,f,c
  3982   00147C  EF42  F00A         	goto	u774
  3983   001480                     u775:
  3984   001480  90D8               	bcf	status,0,c
  3985   001482  363B               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  3986   001484                     u774:
  3987   001484  2E3A               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  3988   001486  EF40  F00A         	goto	u775
  3989   00148A  503B               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  3990   00148C  0AFF               	xorlw	255
  3991   00148E  6E3C               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  3992   001490  C038  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  3993   001494  C039  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  3994   001498  50DF               	movf	223,w,c
  3995   00149A  0B07               	andlw	7
  3996   00149C  6E3D               	movwf	(??_gpio_pin_direction_intialize+3)^0,c
  3997   00149E  503D               	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
  3998   0014A0  0D02               	mullw	2
  3999   0014A2  0E15               	movlw	low _tris_registers
  4000   0014A4  24F3               	addwf	243,w,c
  4001   0014A6  6ED9               	movwf	fsr2l,c
  4002   0014A8  0E00               	movlw	high _tris_registers
  4003   0014AA  20F4               	addwfc	prodh,w,c
  4004   0014AC  6EDA               	movwf	fsr2h,c
  4005   0014AE  CFDE F03E          	movff	postinc2,??_gpio_pin_direction_intialize+4
  4006   0014B2  CFDD F03F          	movff	postdec2,??_gpio_pin_direction_intialize+5
  4007   0014B6  C03E  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  4008   0014BA  C03F  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  4009   0014BE  503C               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  4010   0014C0  16DF               	andwf	indf2,f,c
  4011                           
  4012                           ;MCAL_layer/GPIO/hal_gpio.c: 30:                 break;
  4013   0014C2  EFB2  F00A         	goto	l1743
  4014   0014C6                     l1737:
  4015                           
  4016                           ;MCAL_layer/GPIO/hal_gpio.c: 32:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8) 1 << _pin_config->pin));
  4017   0014C6  C038  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  4018   0014CA  C039  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  4019   0014CE  30DF               	rrcf	223,w,c
  4020   0014D0  32E8               	rrcf	wreg,f,c
  4021   0014D2  32E8               	rrcf	wreg,f,c
  4022   0014D4  0B07               	andlw	7
  4023   0014D6  6E3A               	movwf	??_gpio_pin_direction_intialize^0,c
  4024   0014D8  0E01               	movlw	1
  4025   0014DA  6E3B               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  4026   0014DC  2A3A               	incf	??_gpio_pin_direction_intialize^0,f,c
  4027   0014DE  EF73  F00A         	goto	u784
  4028   0014E2                     u785:
  4029   0014E2  90D8               	bcf	status,0,c
  4030   0014E4  363B               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  4031   0014E6                     u784:
  4032   0014E6  2E3A               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  4033   0014E8  EF71  F00A         	goto	u785
  4034   0014EC  C038  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  4035   0014F0  C039  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  4036   0014F4  50DF               	movf	223,w,c
  4037   0014F6  0B07               	andlw	7
  4038   0014F8  6E3C               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  4039   0014FA  503C               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  4040   0014FC  0D02               	mullw	2
  4041   0014FE  0E15               	movlw	low _tris_registers
  4042   001500  24F3               	addwf	243,w,c
  4043   001502  6ED9               	movwf	fsr2l,c
  4044   001504  0E00               	movlw	high _tris_registers
  4045   001506  20F4               	addwfc	prodh,w,c
  4046   001508  6EDA               	movwf	fsr2h,c
  4047   00150A  CFDE F03D          	movff	postinc2,??_gpio_pin_direction_intialize+3
  4048   00150E  CFDD F03E          	movff	postdec2,??_gpio_pin_direction_intialize+4
  4049   001512  C03D  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  4050   001516  C03E  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  4051   00151A  503B               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  4052   00151C  12DF               	iorwf	indf2,f,c
  4053                           
  4054                           ;MCAL_layer/GPIO/hal_gpio.c: 33:                 break;
  4055   00151E  EFB2  F00A         	goto	l1743
  4056   001522                     l1741:
  4057   001522  C038  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  4058   001526  C039  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  4059   00152A  BCDF               	btfsc	indf2,6,c
  4060   00152C  EF9A  F00A         	goto	u791
  4061   001530  EF9D  F00A         	goto	u790
  4062   001534                     u791:
  4063   001534  0E01               	movlw	1
  4064   001536  EF9E  F00A         	goto	u800
  4065   00153A                     u790:
  4066   00153A  0E00               	movlw	0
  4067   00153C                     u800:
  4068   00153C  6E3A               	movwf	??_gpio_pin_direction_intialize^0,c
  4069   00153E  6A3B               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  4070                           
  4071                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4072                           ; Switch size 1, requested type "simple"
  4073                           ; Number of cases is 1, Range of values is 0 to 0
  4074                           ; switch strategies available:
  4075                           ; Name         Instructions Cycles
  4076                           ; simple_byte            4     3 (average)
  4077                           ;	Chosen strategy is simple_byte
  4078   001540  503B               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  4079   001542  0A00               	xorlw	0	; case 0
  4080   001544  B4D8               	btfsc	status,2,c
  4081   001546  EFA7  F00A         	goto	l2369
  4082   00154A  EF2E  F00A         	goto	l1733
  4083   00154E                     l2369:
  4084                           
  4085                           ; Switch size 1, requested type "simple"
  4086                           ; Number of cases is 2, Range of values is 0 to 1
  4087                           ; switch strategies available:
  4088                           ; Name         Instructions Cycles
  4089                           ; simple_byte            7     4 (average)
  4090                           ;	Chosen strategy is simple_byte
  4091   00154E  503A               	movf	??_gpio_pin_direction_intialize^0,w,c
  4092   001550  0A00               	xorlw	0	; case 0
  4093   001552  B4D8               	btfsc	status,2,c
  4094   001554  EF32  F00A         	goto	l1735
  4095   001558  0A01               	xorlw	1	; case 1
  4096   00155A  B4D8               	btfsc	status,2,c
  4097   00155C  EF63  F00A         	goto	l1737
  4098   001560  EF2E  F00A         	goto	l1733
  4099   001564                     l1743:
  4100                           
  4101                           ;MCAL_layer/GPIO/hal_gpio.c: 37:     return ret;
  4102   001564  5040               	movf	gpio_pin_direction_intialize@ret^0,w,c
  4103   001566  0012               	return		;funcret
  4104   001568                     __end_of_gpio_pin_direction_intialize:
  4105                           	callstack 0
  4106                           
  4107 ;; *************** function ___lmul *****************
  4108 ;; Defined at:
  4109 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul32.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;  multiplier      4    0[COMRAM] unsigned long 
  4112 ;;  multiplicand    4    4[COMRAM] unsigned long 
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;  product         4    8[COMRAM] unsigned long 
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  4    0[COMRAM] unsigned long 
  4117 ;; Registers used:
  4118 ;;		wreg, status,2, status,0
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4124 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4125 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4127 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4128 ;;Total ram usage:       12 bytes
  4129 ;; Hardware stack levels used: 1
  4130 ;; This function calls:
  4131 ;;		Nothing
  4132 ;; This function is called by:
  4133 ;;		_main
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137                           	psect	text25
  4138   001FEE                     __ptext25:
  4139                           	callstack 0
  4140   001FEE                     ___lmul:
  4141                           	callstack 30
  4142   001FEE  0E00               	movlw	0
  4143   001FF0  6E40               	movwf	___lmul@product^0,c
  4144   001FF2  0E00               	movlw	0
  4145   001FF4  6E41               	movwf	(___lmul@product+1)^0,c
  4146   001FF6  0E00               	movlw	0
  4147   001FF8  6E42               	movwf	(___lmul@product+2)^0,c
  4148   001FFA  0E00               	movlw	0
  4149   001FFC  6E43               	movwf	(___lmul@product+3)^0,c
  4150   001FFE                     l2147:
  4151   001FFE  A038               	btfss	___lmul@multiplier^0,0,c
  4152   002000  EF04  F010         	goto	u1191
  4153   002004  EF06  F010         	goto	u1190
  4154   002008                     u1191:
  4155   002008  EF0E  F010         	goto	l2151
  4156   00200C                     u1190:
  4157   00200C  503C               	movf	___lmul@multiplicand^0,w,c
  4158   00200E  2640               	addwf	___lmul@product^0,f,c
  4159   002010  503D               	movf	(___lmul@multiplicand+1)^0,w,c
  4160   002012  2241               	addwfc	(___lmul@product+1)^0,f,c
  4161   002014  503E               	movf	(___lmul@multiplicand+2)^0,w,c
  4162   002016  2242               	addwfc	(___lmul@product+2)^0,f,c
  4163   002018  503F               	movf	(___lmul@multiplicand+3)^0,w,c
  4164   00201A  2243               	addwfc	(___lmul@product+3)^0,f,c
  4165   00201C                     l2151:
  4166   00201C  90D8               	bcf	status,0,c
  4167   00201E  363C               	rlcf	___lmul@multiplicand^0,f,c
  4168   002020  363D               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4169   002022  363E               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4170   002024  363F               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4171   002026  90D8               	bcf	status,0,c
  4172   002028  323B               	rrcf	(___lmul@multiplier+3)^0,f,c
  4173   00202A  323A               	rrcf	(___lmul@multiplier+2)^0,f,c
  4174   00202C  3239               	rrcf	(___lmul@multiplier+1)^0,f,c
  4175   00202E  3238               	rrcf	___lmul@multiplier^0,f,c
  4176   002030  5038               	movf	___lmul@multiplier^0,w,c
  4177   002032  1039               	iorwf	(___lmul@multiplier+1)^0,w,c
  4178   002034  103A               	iorwf	(___lmul@multiplier+2)^0,w,c
  4179   002036  103B               	iorwf	(___lmul@multiplier+3)^0,w,c
  4180   002038  A4D8               	btfss	status,2,c
  4181   00203A  EF21  F010         	goto	u1201
  4182   00203E  EF23  F010         	goto	u1200
  4183   002042                     u1201:
  4184   002042  EFFF  F00F         	goto	l2147
  4185   002046                     u1200:
  4186   002046  C040  F038         	movff	___lmul@product,?___lmul
  4187   00204A  C041  F039         	movff	___lmul@product+1,?___lmul+1
  4188   00204E  C042  F03A         	movff	___lmul@product+2,?___lmul+2
  4189   002052  C043  F03B         	movff	___lmul@product+3,?___lmul+3
  4190   002056  0012               	return		;funcret
  4191   002058                     __end_of___lmul:
  4192                           	callstack 0
  4193                           
  4194 ;; *************** function ___awmod *****************
  4195 ;; Defined at:
  4196 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;  dividend        2    8[COMRAM] int 
  4199 ;;  divisor         2   10[COMRAM] int 
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;  sign            1   13[COMRAM] unsigned char 
  4202 ;;  counter         1   12[COMRAM] unsigned char 
  4203 ;; Return value:  Size  Location     Type
  4204 ;;                  2    8[COMRAM] int 
  4205 ;; Registers used:
  4206 ;;		wreg, status,2, status,0
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4212 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4215 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4216 ;;Total ram usage:        6 bytes
  4217 ;; Hardware stack levels used: 1
  4218 ;; This function calls:
  4219 ;;		Nothing
  4220 ;; This function is called by:
  4221 ;;		_main
  4222 ;; This function uses a non-reentrant model
  4223 ;;
  4224                           
  4225                           	psect	text26
  4226   001A48                     __ptext26:
  4227                           	callstack 0
  4228   001A48                     ___awmod:
  4229                           	callstack 30
  4230   001A48  0E00               	movlw	0
  4231   001A4A  6E45               	movwf	___awmod@sign^0,c
  4232   001A4C  BE41               	btfsc	(___awmod@dividend+1)^0,7,c
  4233   001A4E  EF2D  F00D         	goto	u1270
  4234   001A52  EF2B  F00D         	goto	u1271
  4235   001A56                     u1271:
  4236   001A56  EF33  F00D         	goto	l2207
  4237   001A5A                     u1270:
  4238   001A5A  6C40               	negf	___awmod@dividend^0,c
  4239   001A5C  1E41               	comf	(___awmod@dividend+1)^0,f,c
  4240   001A5E  B0D8               	btfsc	status,0,c
  4241   001A60  2A41               	incf	(___awmod@dividend+1)^0,f,c
  4242   001A62  0E01               	movlw	1
  4243   001A64  6E45               	movwf	___awmod@sign^0,c
  4244   001A66                     l2207:
  4245   001A66  BE43               	btfsc	(___awmod@divisor+1)^0,7,c
  4246   001A68  EF3A  F00D         	goto	u1280
  4247   001A6C  EF38  F00D         	goto	u1281
  4248   001A70                     u1281:
  4249   001A70  EF3E  F00D         	goto	l2211
  4250   001A74                     u1280:
  4251   001A74  6C42               	negf	___awmod@divisor^0,c
  4252   001A76  1E43               	comf	(___awmod@divisor+1)^0,f,c
  4253   001A78  B0D8               	btfsc	status,0,c
  4254   001A7A  2A43               	incf	(___awmod@divisor+1)^0,f,c
  4255   001A7C                     l2211:
  4256   001A7C  5042               	movf	___awmod@divisor^0,w,c
  4257   001A7E  1043               	iorwf	(___awmod@divisor+1)^0,w,c
  4258   001A80  B4D8               	btfsc	status,2,c
  4259   001A82  EF45  F00D         	goto	u1291
  4260   001A86  EF47  F00D         	goto	u1290
  4261   001A8A                     u1291:
  4262   001A8A  EF6B  F00D         	goto	l2227
  4263   001A8E                     u1290:
  4264   001A8E  0E01               	movlw	1
  4265   001A90  6E44               	movwf	___awmod@counter^0,c
  4266   001A92  EF4F  F00D         	goto	l2217
  4267   001A96                     l2215:
  4268   001A96  90D8               	bcf	status,0,c
  4269   001A98  3642               	rlcf	___awmod@divisor^0,f,c
  4270   001A9A  3643               	rlcf	(___awmod@divisor+1)^0,f,c
  4271   001A9C  2A44               	incf	___awmod@counter^0,f,c
  4272   001A9E                     l2217:
  4273   001A9E  AE43               	btfss	(___awmod@divisor+1)^0,7,c
  4274   001AA0  EF54  F00D         	goto	u1301
  4275   001AA4  EF56  F00D         	goto	u1300
  4276   001AA8                     u1301:
  4277   001AA8  EF4B  F00D         	goto	l2215
  4278   001AAC                     u1300:
  4279   001AAC                     l2219:
  4280   001AAC  5042               	movf	___awmod@divisor^0,w,c
  4281   001AAE  5C40               	subwf	___awmod@dividend^0,w,c
  4282   001AB0  5043               	movf	(___awmod@divisor+1)^0,w,c
  4283   001AB2  5841               	subwfb	(___awmod@dividend+1)^0,w,c
  4284   001AB4  A0D8               	btfss	status,0,c
  4285   001AB6  EF5F  F00D         	goto	u1311
  4286   001ABA  EF61  F00D         	goto	u1310
  4287   001ABE                     u1311:
  4288   001ABE  EF65  F00D         	goto	l2223
  4289   001AC2                     u1310:
  4290   001AC2  5042               	movf	___awmod@divisor^0,w,c
  4291   001AC4  5E40               	subwf	___awmod@dividend^0,f,c
  4292   001AC6  5043               	movf	(___awmod@divisor+1)^0,w,c
  4293   001AC8  5A41               	subwfb	(___awmod@dividend+1)^0,f,c
  4294   001ACA                     l2223:
  4295   001ACA  90D8               	bcf	status,0,c
  4296   001ACC  3243               	rrcf	(___awmod@divisor+1)^0,f,c
  4297   001ACE  3242               	rrcf	___awmod@divisor^0,f,c
  4298   001AD0  2E44               	decfsz	___awmod@counter^0,f,c
  4299   001AD2  EF56  F00D         	goto	l2219
  4300   001AD6                     l2227:
  4301   001AD6  5045               	movf	___awmod@sign^0,w,c
  4302   001AD8  B4D8               	btfsc	status,2,c
  4303   001ADA  EF71  F00D         	goto	u1321
  4304   001ADE  EF73  F00D         	goto	u1320
  4305   001AE2                     u1321:
  4306   001AE2  EF77  F00D         	goto	l2231
  4307   001AE6                     u1320:
  4308   001AE6  6C40               	negf	___awmod@dividend^0,c
  4309   001AE8  1E41               	comf	(___awmod@dividend+1)^0,f,c
  4310   001AEA  B0D8               	btfsc	status,0,c
  4311   001AEC  2A41               	incf	(___awmod@dividend+1)^0,f,c
  4312   001AEE                     l2231:
  4313   001AEE  C040  F040         	movff	___awmod@dividend,?___awmod
  4314   001AF2  C041  F041         	movff	___awmod@dividend+1,?___awmod+1
  4315   001AF6  0012               	return		;funcret
  4316   001AF8                     __end_of___awmod:
  4317                           	callstack 0
  4318                           
  4319 ;; *************** function ___awdiv *****************
  4320 ;; Defined at:
  4321 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  4322 ;; Parameters:    Size  Location     Type
  4323 ;;  dividend        2    0[COMRAM] int 
  4324 ;;  divisor         2    2[COMRAM] int 
  4325 ;; Auto vars:     Size  Location     Type
  4326 ;;  quotient        2    6[COMRAM] int 
  4327 ;;  sign            1    5[COMRAM] unsigned char 
  4328 ;;  counter         1    4[COMRAM] unsigned char 
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  2    0[COMRAM] int 
  4331 ;; Registers used:
  4332 ;;		wreg, status,2, status,0
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4338 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4339 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4342 ;;Total ram usage:        8 bytes
  4343 ;; Hardware stack levels used: 1
  4344 ;; This function calls:
  4345 ;;		Nothing
  4346 ;; This function is called by:
  4347 ;;		_main
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           	psect	text27
  4352   0018CC                     __ptext27:
  4353                           	callstack 0
  4354   0018CC                     ___awdiv:
  4355                           	callstack 30
  4356   0018CC  0E00               	movlw	0
  4357   0018CE  6E3D               	movwf	___awdiv@sign^0,c
  4358   0018D0  BE3B               	btfsc	(___awdiv@divisor+1)^0,7,c
  4359   0018D2  EF6F  F00C         	goto	u1210
  4360   0018D6  EF6D  F00C         	goto	u1211
  4361   0018DA                     u1211:
  4362   0018DA  EF75  F00C         	goto	l2163
  4363   0018DE                     u1210:
  4364   0018DE  6C3A               	negf	___awdiv@divisor^0,c
  4365   0018E0  1E3B               	comf	(___awdiv@divisor+1)^0,f,c
  4366   0018E2  B0D8               	btfsc	status,0,c
  4367   0018E4  2A3B               	incf	(___awdiv@divisor+1)^0,f,c
  4368   0018E6  0E01               	movlw	1
  4369   0018E8  6E3D               	movwf	___awdiv@sign^0,c
  4370   0018EA                     l2163:
  4371   0018EA  BE39               	btfsc	(___awdiv@dividend+1)^0,7,c
  4372   0018EC  EF7C  F00C         	goto	u1220
  4373   0018F0  EF7A  F00C         	goto	u1221
  4374   0018F4                     u1221:
  4375   0018F4  EF82  F00C         	goto	l2169
  4376   0018F8                     u1220:
  4377   0018F8  6C38               	negf	___awdiv@dividend^0,c
  4378   0018FA  1E39               	comf	(___awdiv@dividend+1)^0,f,c
  4379   0018FC  B0D8               	btfsc	status,0,c
  4380   0018FE  2A39               	incf	(___awdiv@dividend+1)^0,f,c
  4381   001900  0E01               	movlw	1
  4382   001902  1A3D               	xorwf	___awdiv@sign^0,f,c
  4383   001904                     l2169:
  4384   001904  0E00               	movlw	0
  4385   001906  6E3F               	movwf	(___awdiv@quotient+1)^0,c
  4386   001908  0E00               	movlw	0
  4387   00190A  6E3E               	movwf	___awdiv@quotient^0,c
  4388   00190C  503A               	movf	___awdiv@divisor^0,w,c
  4389   00190E  103B               	iorwf	(___awdiv@divisor+1)^0,w,c
  4390   001910  B4D8               	btfsc	status,2,c
  4391   001912  EF8D  F00C         	goto	u1231
  4392   001916  EF8F  F00C         	goto	u1230
  4393   00191A                     u1231:
  4394   00191A  EFB7  F00C         	goto	l2191
  4395   00191E                     u1230:
  4396   00191E  0E01               	movlw	1
  4397   001920  6E3C               	movwf	___awdiv@counter^0,c
  4398   001922  EF97  F00C         	goto	l2177
  4399   001926                     l2175:
  4400   001926  90D8               	bcf	status,0,c
  4401   001928  363A               	rlcf	___awdiv@divisor^0,f,c
  4402   00192A  363B               	rlcf	(___awdiv@divisor+1)^0,f,c
  4403   00192C  2A3C               	incf	___awdiv@counter^0,f,c
  4404   00192E                     l2177:
  4405   00192E  AE3B               	btfss	(___awdiv@divisor+1)^0,7,c
  4406   001930  EF9C  F00C         	goto	u1241
  4407   001934  EF9E  F00C         	goto	u1240
  4408   001938                     u1241:
  4409   001938  EF93  F00C         	goto	l2175
  4410   00193C                     u1240:
  4411   00193C                     l2179:
  4412   00193C  90D8               	bcf	status,0,c
  4413   00193E  363E               	rlcf	___awdiv@quotient^0,f,c
  4414   001940  363F               	rlcf	(___awdiv@quotient+1)^0,f,c
  4415   001942  503A               	movf	___awdiv@divisor^0,w,c
  4416   001944  5C38               	subwf	___awdiv@dividend^0,w,c
  4417   001946  503B               	movf	(___awdiv@divisor+1)^0,w,c
  4418   001948  5839               	subwfb	(___awdiv@dividend+1)^0,w,c
  4419   00194A  A0D8               	btfss	status,0,c
  4420   00194C  EFAA  F00C         	goto	u1251
  4421   001950  EFAC  F00C         	goto	u1250
  4422   001954                     u1251:
  4423   001954  EFB1  F00C         	goto	l2187
  4424   001958                     u1250:
  4425   001958  503A               	movf	___awdiv@divisor^0,w,c
  4426   00195A  5E38               	subwf	___awdiv@dividend^0,f,c
  4427   00195C  503B               	movf	(___awdiv@divisor+1)^0,w,c
  4428   00195E  5A39               	subwfb	(___awdiv@dividend+1)^0,f,c
  4429   001960  803E               	bsf	___awdiv@quotient^0,0,c
  4430   001962                     l2187:
  4431   001962  90D8               	bcf	status,0,c
  4432   001964  323B               	rrcf	(___awdiv@divisor+1)^0,f,c
  4433   001966  323A               	rrcf	___awdiv@divisor^0,f,c
  4434   001968  2E3C               	decfsz	___awdiv@counter^0,f,c
  4435   00196A  EF9E  F00C         	goto	l2179
  4436   00196E                     l2191:
  4437   00196E  503D               	movf	___awdiv@sign^0,w,c
  4438   001970  B4D8               	btfsc	status,2,c
  4439   001972  EFBD  F00C         	goto	u1261
  4440   001976  EFBF  F00C         	goto	u1260
  4441   00197A                     u1261:
  4442   00197A  EFC3  F00C         	goto	l2195
  4443   00197E                     u1260:
  4444   00197E  6C3E               	negf	___awdiv@quotient^0,c
  4445   001980  1E3F               	comf	(___awdiv@quotient+1)^0,f,c
  4446   001982  B0D8               	btfsc	status,0,c
  4447   001984  2A3F               	incf	(___awdiv@quotient+1)^0,f,c
  4448   001986                     l2195:
  4449   001986  C03E  F038         	movff	___awdiv@quotient,?___awdiv
  4450   00198A  C03F  F039         	movff	___awdiv@quotient+1,?___awdiv+1
  4451   00198E  0012               	return		;funcret
  4452   001990                     __end_of___awdiv:
  4453                           	callstack 0
  4454                           
  4455                           	psect	rparam
  4456   000000                     tosu	equ	0xFFF
  4457                           tosh	equ	0xFFE
  4458                           tosl	equ	0xFFD
  4459                           stkptr	equ	0xFFC
  4460                           pclatu	equ	0xFFB
  4461                           pclath	equ	0xFFA
  4462                           pcl	equ	0xFF9
  4463                           tblptru	equ	0xFF8
  4464                           tblptrh	equ	0xFF7
  4465                           tblptrl	equ	0xFF6
  4466                           tablat	equ	0xFF5
  4467                           prodh	equ	0xFF4
  4468                           prodl	equ	0xFF3
  4469                           indf0	equ	0xFEF
  4470                           postinc0	equ	0xFEE
  4471                           postdec0	equ	0xFED
  4472                           preinc0	equ	0xFEC
  4473                           plusw0	equ	0xFEB
  4474                           fsr0h	equ	0xFEA
  4475                           fsr0l	equ	0xFE9
  4476                           wreg	equ	0xFE8
  4477                           indf1	equ	0xFE7
  4478                           postinc1	equ	0xFE6
  4479                           postdec1	equ	0xFE5
  4480                           preinc1	equ	0xFE4
  4481                           plusw1	equ	0xFE3
  4482                           fsr1h	equ	0xFE2
  4483                           fsr1l	equ	0xFE1
  4484                           bsr	equ	0xFE0
  4485                           indf2	equ	0xFDF
  4486                           postinc2	equ	0xFDE
  4487                           postdec2	equ	0xFDD
  4488                           preinc2	equ	0xFDC
  4489                           plusw2	equ	0xFDB
  4490                           fsr2h	equ	0xFDA
  4491                           fsr2l	equ	0xFD9
  4492                           status	equ	0xFD8

Data Sizes:
    Strings     69
    Constant    16
    Data        55
    BSS         10
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     36     102
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_intialize@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> keypad.keypad_row_pins(COMRAM[4]), keypad(COMRAM[8]), lcd.lcd_data(COMRAM[4]), lcd(COMRAM[6]), 
		 -> motor_2.dc_motor_pin(COMRAM[2]), motor_2(COMRAM[2]), motor_1.dc_motor_pin(COMRAM[2]), motor_1(COMRAM[2]), 
		 -> led_intialiaze@pin_config_obj(COMRAM[1]), 

    gpio_pin_read_logic@logic	PTR enum E2968 size(2) Largest target is 1
		 -> keypad_get_value@column_logic(COMRAM[1]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> keypad.keypad_columns_pins(COMRAM[4]), keypad(COMRAM[8]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> keypad.keypad_row_pins(COMRAM[4]), keypad(COMRAM[8]), lcd.lcd_data(COMRAM[4]), lcd(COMRAM[6]), 
		 -> motor_2.dc_motor_pin(COMRAM[2]), motor_2(COMRAM[2]), motor_1.dc_motor_pin(COMRAM[2]), motor_1(COMRAM[2]), 
		 -> led_turn_off@pin_config_obj(COMRAM[1]), led_turn_on@pin_config_obj(COMRAM[1]), led_intialiaze@pin_config_obj(COMRAM[1]), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> keypad.keypad_columns_pins(COMRAM[4]), keypad.keypad_row_pins(COMRAM[4]), keypad(COMRAM[8]), lcd.lcd_data(COMRAM[4]), 
		 -> lcd(COMRAM[6]), motor_2.dc_motor_pin(COMRAM[2]), motor_2(COMRAM[2]), motor_1.dc_motor_pin(COMRAM[2]), 
		 -> motor_1(COMRAM[2]), led_intialiaze@pin_config_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    dc_motor_stop@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor_2(COMRAM[2]), motor_1(COMRAM[2]), 

    dc_motor_move_left@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor_2(COMRAM[2]), 

    dc_motor_move_right@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor_1(COMRAM[2]), 

    dc_motor_intialize@_dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor_2(COMRAM[2]), motor_1(COMRAM[2]), 

    led_turn_off@led	PTR const struct . size(2) Largest target is 1
		 -> led_red(COMRAM[1]), led_green(COMRAM[1]), 

    led_turn_on@led	PTR const struct . size(2) Largest target is 1
		 -> led_red(COMRAM[1]), led_green(COMRAM[1]), 

    led_intialiaze@led	PTR const struct . size(2) Largest target is 1
		 -> led_red(COMRAM[1]), led_green(COMRAM[1]), 

    keypad_get_value@value	PTR unsigned char  size(2) Largest target is 1
		 -> keypad_read_value@new_val(COMRAM[1]), keypad_read_value@val(COMRAM[1]), 

    keypad_get_value@_keypad_obj	PTR const struct . size(2) Largest target is 8
		 -> keypad(COMRAM[8]), 

    keypad_intialize@_keypad_obj	PTR const struct . size(2) Largest target is 8
		 -> keypad(COMRAM[8]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_4bit_send@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_4bit_send_enable@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 20
		 -> STR_6(CODE[20]), STR_4(CODE[20]), STR_2(CODE[13]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_4bit_send_string@str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_7(CODE[16]), STR_5(CODE[16]), STR_3(CODE[16]), STR_1(CODE[16]), 

    lcd_4bit_send_string@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_4bit_intialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_lcd_4bit_send_string_pos
    _led_turn_on->_gpio_pin_write_logic
    _led_turn_off->_gpio_pin_write_logic
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_send_string->_lcd_4bit_send_char_data
    _lcd_4bit_send_char_data_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_4bit_send
    _keypad_read_value->_keypad_get_value
    _keypad_get_value->_gpio_pin_read_logic
    _keypad_get_value->_gpio_pin_write_logic
    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_right->_gpio_pin_write_logic
    _dc_motor_move_left->_gpio_pin_write_logic
    _app_init->_lcd_4bit_intialize
    _led_intialiaze->_gpio_pin_intialize
    _lcd_4bit_intialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_4bit_send
    _lcd_4bit_send_enable->_gpio_pin_write_logic
    _lcd_4bit_send->_gpio_pin_write_logic
    _keypad_intialize->_gpio_pin_intialize
    _dc_motor_intialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  132333
                                             32 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                             ___lmul
                           _app_init
                 _dc_motor_move_left
                _dc_motor_move_right
                      _dc_motor_stop
                  _keypad_read_value
        _lcd_4bit_send_char_data_pos
              _lcd_4bit_send_command
               _lcd_4bit_send_string
           _lcd_4bit_send_string_pos
                       _led_turn_off
                        _led_turn_on
 ---------------------------------------------------------------------------------
 (1) _led_turn_on                                          5     3      2    3440
                                             10 COMRAM     5     3      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _led_turn_off                                         5     3      2    3440
                                             10 COMRAM     5     3      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             7     1      6   26320
                                             25 COMRAM     7     1      6
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string                                 5     1      4   11942
                                             18 COMRAM     5     1      4
            _lcd_4bit_send_char_data
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_char_data_pos                          6     1      5   26883
                                             25 COMRAM     6     1      5
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  7     3      4   14007
                                             18 COMRAM     7     3      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              4     1      3   11198
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
                      _lcd_4bit_send
               _lcd_4bit_send_enable
 ---------------------------------------------------------------------------------
 (1) _keypad_read_value                                    3     3      0    4271
                                             21 COMRAM     3     3      0
                   _keypad_get_value
 ---------------------------------------------------------------------------------
 (2) _keypad_get_value                                    11     7      4    4135
                                             10 COMRAM    11     7      4
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_read_logic                                 10     6      4     308
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        3     1      2    3385
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  3     1      2    3233
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_left                                   3     1      2    3309
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _app_init                                             1     1      0   31225
                 _dc_motor_intialize
                   _keypad_intialize
                 _lcd_4bit_intialize
                     _led_intialiaze
 ---------------------------------------------------------------------------------
 (2) _led_intialiaze                                       5     3      2    4371
                                             14 COMRAM     5     3      2
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_intialize                                   6     4      2   17836
                                             18 COMRAM     6     4      2
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   13326
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
                      _lcd_4bit_send
               _lcd_4bit_send_enable
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable                                 3     1      2    3440
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send                                        4     1      3    3878
                                             10 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _keypad_intialize                                     7     5      2    4703
                                             14 COMRAM     7     5      2
       _gpio_pin_direction_intialize
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (2) _dc_motor_intialize                                   3     1      2    4308
                                             14 COMRAM     3     1      2
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   4     2      2    4066
                                             10 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    3067
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         9     7      2     331
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     600
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   ___lmul
   _app_init
     _dc_motor_intialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
     _keypad_intialize
       _gpio_pin_direction_intialize
       _gpio_pin_intialize
     _lcd_4bit_intialize
       _gpio_pin_intialize
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_4bit_send
           _gpio_pin_write_logic
         _lcd_4bit_send_enable
           _gpio_pin_write_logic
     _led_intialiaze
       _gpio_pin_intialize
   _dc_motor_move_left
     _gpio_pin_write_logic
   _dc_motor_move_right
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic
   _keypad_read_value
     _keypad_get_value
       _gpio_pin_read_logic
       _gpio_pin_write_logic
   _lcd_4bit_send_char_data_pos
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send
       _lcd_4bit_send_enable
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command
   _lcd_4bit_send_command
   _lcd_4bit_send_string
     _lcd_4bit_send_char_data
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_char_data
     _lcd_4bit_set_cursor
   _led_turn_off
     _gpio_pin_write_logic
   _led_turn_on
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     24      66       1       80.3%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      66      39        0.0%
DATA                 0      0      66       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Nov 02 22:11:01 2023

                         _led_intialiaze 1DB0                                       l21 18CA  
                                     l31 1E9E                                       l26 1F10  
                                     l36 21B6                                       l46 1F80  
                                     l56 1C2A                                       l66 2368  
                                     l69 2126                                       l79 1BA4  
                           ___awdiv@sign 003D                                      l100 1DAE  
                                    l121 1DCA                                      l114 17AE  
                                    l211 1566                                      l132 1CAC  
                                    l125 1E2C                                      l230 1A46  
                                    l223 1692                                      l135 1CC8  
                                    l320 20BE                                      l128 1C46  
                                    l153 2242                                      l305 1206  
                                    l163 21FC                                      l139 1D2E  
                                    l148 22C6                                      l316 2170  
                                    l237 1FEC                                      l158 2288  
                                    l335 2046                                      l336 2056  
                                    l555 198E                                      l568 1AF6  
                                    u710 157E                                      u711 157A  
                                    u800 153C                                      u720 15A0  
                                    u721 159C                                      u810 1F94  
                                    u811 1F90                                      u820 1FB6  
                                    u900 1E40                                      u821 1FB2  
                                    u901 1E3C                                      u750 143A  
                                    u734 15C8                                      u910 1D4A  
                                    u830 1EB2                                      u751 1436  
                                    u735 15C4                                      u911 1D46  
                                    u831 1EAE                                      u760 145C  
                                    u744 162A                                      u920 1D78  
                                    u840 19A6                                      u761 1458  
                                    u745 1626                                      u921 1D74  
                                    u841 19A2                                      u930 1DAC  
                                    u850 19B8                                      u931 1DA8  
                                    u851 19B4                                      u860 19DA  
                                    u940 16B6                                      u861 19D6  
                                    u941 16B2                                      u790 153A  
                                    u774 1484                                      u950 16C8  
                                    u791 1534                                      u775 1480  
                                    u951 16C4                                      u784 14E6  
                                    u880 17C6                                      u960 16FE  
                                    u785 14E2                                      u881 17C2  
                                    u961 16FA                                      u890 1820  
                                    u874 1A30                                      u970 175A  
                                    u891 181C                                      u875 1A2C  
                                    u971 1756                                      u980 179A  
                                    u981 1796                                      u990 17AC  
                                    u991 17A8                                      _lcd 002D  
                                    _ret 0024                             ___awmod@sign 0045  
                                    prod 0FF3                                      wreg 0FE8  
                           ?_led_turn_on 0042                     _lcd_4bit_send_enable 2336  
                       lcd_4bit_send@lcd 0042                         lcd_4bit_send@ret 0045  
                                   l2001 1F16                                     l2011 1F62  
                                   l2003 1F28                                     l2101 21CE  
                                   l2013 1F7E                                     l2005 1F3A  
                                   l2021 1BB8                                     l2111 2128  
                                   l2103 21D6                                     l2007 1F42  
                                   l2031 1C0C                                     l2023 1BCA  
                                   l2201 1A4C                                     l2121 2164  
                                   l2113 2134                                     l2105 21FA  
                                   l2009 1F5E                                     l2033 1C28  
                                   l2025 1BD2                                     l2017 1BA6  
                                   l2041 1C3E                                     l2211 1A7C  
                                   l2203 1A5A                                     l2115 2140  
                                   l2123 2058                                     l2027 1BEC  
                                   l2019 1BA6                                     l2043 1C4A  
                                   l2051 1CAA                                     l2221 1AC2  
                                   l2213 1A8E                                     l2205 1A62  
                                   l2117 214C                                     l2109 2128  
                                   l2133 2094                                     l2125 206E  
                                   l2029 1C08                                     l2061 1CCC  
                                   l2045 1C84                                     l2037 1C2C  
                                   l2301 11F0                                     l2231 1AEE  
                                   l2223 1ACA                                     l2215 1A96  
                                   l2207 1A66                                     l2151 201C  
                                   l2119 2158                                     l2135 20AA  
                                   l2127 207E                                     l2063 1D06  
                                   l2055 1CAE                                     l2047 1C86  
                                   l2039 1C2C                                     l2303 1218  
                                   l2161 18E6                                     l2225 1AD0  
                                   l2217 1A9E                                     l2209 1A74  
                                   l2153 2026                                     l2145 1FEE  
                                   l2081 2240                                     l2073 21FE  
                                   l2137 20BC                                     l2129 208E  
                                   l2065 1D08                                     l2057 1CAE  
                                   l2049 1C98                                     l2321 12E4  
                                   l2313 123A                                     l2305 1236  
                                   l2171 190C                                     l2163 18EA  
                                   l2155 18CC                                     l2219 1AAC  
                                   l2227 1AD6                                     l2147 1FFE  
                                   l2091 2262                                     l2075 2202  
                                   l2067 1D1A                                     l2059 1CC0  
                                   l2331 1328                                     l2323 12F2  
                                   l2315 1252                                     l2307 1236  
                                   l2181 1942                                     l2173 191E  
                                   l2165 18F8                                     l2157 18D0  
                                   l2229 1AE6                                     l2149 200C  
                                   l2093 2286                                     l2085 2244  
                                   l2077 2214                                     l2069 1D2C  
                                   l2341 1374                                     l2333 132C  
                                   l2325 1300                                     l2317 126C  
                                   l2261 105C                                     l2183 1958  
                                   l2175 1926                                     l2191 196E  
                                   l2167 1900                                     l2159 18DE  
                                   l1711 20EE                                     l2087 2248  
                                   l2079 221C                                     l2351 1402  
                                   l2343 1384                                     l2335 133E  
                                   l2327 1316                                     l2319 12CE  
                                   l2271 10B0                                     l2263 1072  
                                   l2193 197E                                     l2185 1960  
                                   l2177 192E                                     l2169 1904  
                                   l1713 2108                                     l1705 20C0  
                                   l1721 234A                                     l1801 17EE  
                                   l2089 225A                                     l2097 21B8  
                                   l2345 1386                                     l2329 1318  
                                   l2337 1354                                     l2281 1124  
                                   l2273 10DE                                     l2265 1078  
                                   l2195 1986                                     l2187 1962  
                                   l2179 193C                                     l1731 143A  
                                   l1707 20C0                                     l1723 2350  
                                   l1811 1810                                     l2099 21BC  
                                   l2347 13CE                                     l2291 11AA  
                                   l2283 1132                                     l2275 10FC  
                                   l2267 108A                                     l2339 1364  
                                   l2259 1058                                     l2189 1968  
                                   l1741 1522                                     l1733 145C  
                                   l1709 20D6                                     l1717 2336  
                                   l1821 1866                                     l1813 1820  
                                   l2365 1B7C                                     l2349 13EA  
                                   l2293 11AC                                     l2285 1144  
                                   l2277 1100                                     l2269 1092  
                                   l2199 1A48                                     l1735 1464  
                                   l1743 1564                                     l1727 1424  
                                   l2367 167A                                     l1751 1F82  
                                   l1719 2336                                     l1831 18B6  
                                   l1823 1876                                     l1815 1830  
                                   l1807 17F2                                     l1911 16D0  
                                   l1903 1694                                     l2295 11C2  
                                   l2279 1116                                     l2287 115E  
                                   l2369 154E                                     l1737 14C6  
                                   l1729 1428                                     l1681 1568  
                                   l1761 1FEA                                     l1753 1F82  
                                   l1825 1886                                     l1817 1840  
                                   l1809 180E                                     l1833 18C8  
                                   l1905 16A4                                     l1841 1E40  
                                   l2297 11D0                                     l2289 118C  
                                   l1691 160A                                     l1683 156C  
                                   l1755 1F94                                     l1771 1EBA  
                                   l1827 1896                                     l1819 1860  
                                   l1931 1712                                     l1923 16D8  
                                   l1907 16B6                                     l1843 1E48  
                                   l1851 1B00                                     l2299 11DE  
                                   l1685 157E                                     l1757 1FB6  
                                   l1773 1F0E                                     l1765 1EA0  
                                   l1829 18A6                                     l1781 19A6  
                                   l1941 174A                                     l1933 1720  
                                   l1925 16EC                                     l1917 16D4  
                                   l1909 16C8                                     l1845 1E9C  
                                   l1837 1E2E                                     l1853 1B1A  
                                   l1861 1BA2                                     l1695 1666  
                                   l1687 15A0                                     l1759 1FBE  
                                   l1871 1D38                                     l1767 1EA0  
                                   l1783 19B8                                     l1951 179C  
                                   l1943 175A                                     l1927 16EE  
                                   l1839 1E2E                                     l1855 1B34  
                                   l1689 15A8                                     l1697 1690  
                                   l1881 1D56                                     l1873 1D4A  
                                   l1769 1EB2                                     l1793 17B0  
                                   l1961 1DC2                                     l1785 19DA  
                                   l1777 1990                                     l1945 1788  
                                   l1929 16FE                                     l1953 17AC  
                                   l1857 1B4E                                     l1849 1AF8  
                                   l1883 1D66                                     l1875 1D52  
                                   l1795 17B4                                     l1963 1DCE  
                                   l1971 1E2A                                     l1787 19E2  
                                   l1779 1994                                     l1947 178A  
                                   l1939 1724                                     l1859 1B68  
                                   l1981 22A8                                     l1893 1D7C  
                                   l1885 1D68                                     l1869 1D30  
                                   l1797 17C6                                     l1965 1E08  
                                   l1957 1DB0                                     l1789 1A44  
                                   l1949 179A                                     l1983 22C4  
                                   l1975 228A                                     l1895 1D9A  
                                   l1887 1D78                                     l1799 17CE  
                                   l1967 1E0A                                     l1959 1DB0  
                                   l1991 2184                                     l1977 228E  
                                   l1897 1D9C                                     l1969 1E1C  
                                   l1993 218C                                     l1979 22A0  
                                   l1899 1DAC                                     l1995 21B4  
                                   l1987 2172                                     l1989 2172  
                                   l1999 1F12                                     STR_1 1039  
                                   STR_2 1049                                     STR_3 1039  
                                   STR_4 1011                                     STR_5 1039  
                                   STR_6 1025                                     STR_7 1039  
                                   u1000 1DC2                                     u1001 1DBE  
                                   u1020 22A0                                     u1100 1C3E  
                                   u1021 229C                                     u1101 1C3A  
                                   u1030 2184                                     u1015 1E1A  
                                   u1031 2180                                     u1200 2046  
                                   u1040 1F28                                     u1120 1CC0  
                                   u1201 2042                                     u1017 1E1C  
                                   u1041 1F24                                     u1121 1CBC  
                                   u1210 18DE                                     u1050 1F3A  
                                   u1211 18DA                                     u1051 1F36  
                                   u1115 1C96                                     u1220 18F8  
                                   u1300 1AAC                                     u1140 2214  
                                   u1060 1F7E                                     u1221 18F4  
                                   u1301 1AA8                                     u1141 2210  
                                   u1061 1F7A                                     u1117 1C98  
                                   u1230 191E                                     u1310 1AC2  
                                   u1150 225A                                     u1070 1BB8  
                                   u1231 191A                                     u1311 1ABE  
                                   u1151 2256                                     u1071 1BB4  
                                   u1135 1D18                                     u1240 193C  
                                   u1320 1AE6                                     u1160 21CE  
                                   u1080 1BCA                                     u1400 1384  
                                   u1241 1938                                     u1321 1AE2  
                                   u1161 21CA                                     u1081 1BC6  
                                   u1137 1D1A                                     u1401 1380  
                                   u1250 1958                                     u1170 208E  
                                   u1090 1C28                                     u1251 1954  
                                   u1171 208A                                     u1091 1C24  
                                   u1260 197E                                     u1180 20BC  
                                   u1261 197A                                     u1181 20B8  
                                   _LATA 0F89                                     u1270 1A5A  
                                   u1190 200C                                     u1350 108A  
                                   _LATB 0F8A                                     u1271 1A56  
                                   u1191 2008                                     u1351 1086  
                                   _LATC 0F8B                                     u1280 1A74  
                                   u1360 10B0                                     _LATD 0F8C  
                                   u1281 1A70                                     u1417 110A  
                                   u1361 10AC                                     _LATE 0F8D  
                                   u1290 1A8E                                     u1370 1218  
                                   u1291 1A8A                                     u1507 1862  
                                   u1371 1214                                     u1427 11B6  
                                   u1380 1328                                     u1381 1324  
                                   u1437 12D8                                     u1390 1374  
                                   u1391 1370                                     u1447 130A  
                                   u1457 13F4                                     u1467 2074  
                                   u1477 1718                                     u1487 1826  
                                   u1497 1846                              main@counter 005B  
                   _lcd_4bit_send_string 1F12           gpio_pin_read_logic@_pin_config 0038  
                                   _main 1058                                     fsr2h 0FDA  
                                   indf2 0FDF                                     fsr1l 0FE1  
                                   fsr2l 0FD9        lcd_4bit_send_char_data_pos@column 0054  
                                   prodl 0FF3                                     start 0000  
                          ?_led_turn_off 0042                   __end_of_led_intialiaze 1E2E  
                           ___param_bank 0000                    _lcd_4bit_send_command 1EA0  
                   keypad_read_value@val 004E                     _gpio_pin_write_logic 1568  
         lcd_4bit_send_string_pos@column 0054                    lcd_4bit_intialize@lcd 004A  
                  lcd_4bit_intialize@ret 004F                                    ?_main 0038  
                        __end_of___awdiv 1990                          __end_of___awmod 1AF8  
                        ___awdiv@divisor 003A                          ___awdiv@counter 003C  
                                  _PORTA 0F80                                    _PORTB 0F81  
                                  _PORTC 0F82                                    _PORTD 0F83  
                                  _PORTE 0F84                                    _TRISA 0F92  
                                  _TRISB 0F93                                    _TRISC 0F94  
                                  _TRISD 0F95                                    _TRISE 0F96  
              lcd_4bit_set_cursor@column 004D                      ___lmul@multiplicand 003C  
                  ?_lcd_4bit_send_enable 0042                 __end_of_keypad_get_value 17B0  
                  ?_lcd_4bit_send_string 004A                                    tablat 0FF5  
                  dc_motor_intialize@ret 0048                  lcd_4bit_send_enable@lcd 0042  
                lcd_4bit_send_enable@ret 0044                                    status 0FD8  
                         ??_led_turn_off 0044        keypad_get_value@l_columns_counter 004C  
               __end_of_keypad_intialize 1DB0                          ?_led_intialiaze 0046  
                        __initialization 2300                      keypad_get_value@ret 0048  
                           __end_of_main 1424                    ?_gpio_pin_write_logic 0038  
               gpio_pin_read_logic@logic 003A                            _lat_registers 0001  
                                 ??_main 0058                            __activetblptr 0002  
                       led_turn_on@F3032 0063                         ___awdiv@dividend 0038  
              keypad_get_value@l_counter 004A               led_turn_off@pin_config_obj 0046  
               keypad_read_value@new_val 004F         __end_of_lcd_4bit_send_string_pos 1C2C  
                       __end_of_app_init 2172              __end_of_dc_motor_move_right 2244  
                 ?_lcd_4bit_send_command 0046                                   ___lmul 1FEE  
                              ??___awdiv 003C                                ??___awmod 0044  
                  __end_of_lcd_4bit_send 2128                                   _keypad 0025  
                                 clear_0 2326                         ___awdiv@quotient 003E  
                        ___awmod@divisor 0042                                   isa$std 0001  
                        ___awmod@counter 0044  gpio_pin_direction_intialize@_pin_config 0038  
                           __pdataCOMRAM 0001                   ??_lcd_4bit_send_enable 0044  
                           __mediumconst 0000                                   tblptrh 0FF7  
                                 tblptrl 0FF6                                   tblptru 0FF8  
            keypad_intialize@_keypad_obj 0046                   ??_lcd_4bit_send_string 004E  
                       _entered_password 005C                               __accesstop 0080  
                __end_of__initialization 232C                            ___rparam_used 0001  
            dc_motor_move_left@_dc_motor 0042                  _lcd_4bit_send_char_data 1E2E  
                 ??_gpio_pin_write_logic 003B                           __pcstackCOMRAM 0038  
               lcd_4bit_send_command@lcd 0046                 lcd_4bit_send_command@ret 0049  
                   __end_of_led_turn_off 1D30             ?_lcd_4bit_send_char_data_pos 0051  
                lcd_4bit_send_string@lcd 004A                  lcd_4bit_send_string@ret 004E  
                lcd_4bit_send_string@str 004C                               __pnvCOMRAM 0066  
        keypad_intialize@columns_counter 004C                                  ?___lmul 0038  
                      led_turn_off@F3037 0062                           ___lmul@product 0040  
              led_turn_on@pin_config_obj 0046                ?_lcd_4bit_send_string_pos 0051  
                      ?_keypad_get_value 0042                                ?_app_init 0038  
                             _lcd_output 0023                       ??_keypad_get_value 0046  
                             _btn_values 1001                           _tris_registers 0015  
                       ??_led_intialiaze 0048                ??_lcd_4bit_send_char_data 0049  
                                __Hparam 0000                                  __Lparam 0000  
                      ?_keypad_intialize 0046                    dc_motor_move_left@ret 0044  
                     ??_keypad_intialize 0048                      _gpio_pin_read_logic 1990  
                                ___awdiv 18CC                                  ___awmod 1A48  
                           __psmallconst 1000                        led_intialiaze@led 0046  
                      led_intialiaze@ret 0049               __end_of_gpio_pin_intialize 1FEE  
                                __pcinit 2300                                  __ramtop 1000  
                                __ptext0 1058                                  __ptext1 1C2C  
                                __ptext2 1CAE                                  __ptext3 1BA6  
                                __ptext4 1F12                                  __ptext5 2172  
                                __ptext6 1AF8                                  __ptext7 1E2E  
                                __ptext8 2058                                  __ptext9 1694  
                                _led_red 0065                         ___awmod@dividend 0040  
                                _motor_1 0035                                  _motor_2 0033  
                             ??_app_init 0050                     ?_gpio_pin_read_logic 0038  
                   end_of_initialization 232C                            __Lmediumconst 0000  
             __end_of_lcd_4bit_intialize 18CC                  ??_lcd_4bit_send_command 0049  
                  gpio_pin_intialize@ret 0045                            _dc_motor_stop 21B8  
                                postdec1 0FE5                                  postdec2 0FDD  
                                postinc0 0FEE                                  postinc2 0FDE  
        __end_of_lcd_4bit_send_char_data 1EA0            gpio_pin_intialize@_pin_config 0042  
           keypad_get_value@column_logic 0049               lcd_4bit_send_char_data@lcd 0046  
             lcd_4bit_send_char_data@ret 0049     __end_of_gpio_pin_direction_intialize 1568  
           _gpio_pin_direction_intialize 1424                    ??_gpio_pin_read_logic 003C  
                         _incorrect_pass 0060          lcd_4bit_send_char_data_pos@data 0055  
                         ?_dc_motor_stop 0042                             _led_turn_off 1CAE  
                    _lcd_4bit_set_cursor 1AF8              lcd_4bit_send_string_pos@lcd 0051  
            lcd_4bit_send_string_pos@ret 0057              lcd_4bit_send_string_pos@row 0053  
            lcd_4bit_send_string_pos@str 0055                    keypad_get_value@value 0044  
                         __end_of___lmul 2058                            __pidataCOMRAM 22C8  
                    start_initialization 2300                            ??_led_turn_on 0044  
                   ?_lcd_4bit_set_cursor 004A            ?_gpio_pin_direction_intialize 0038  
             __end_of_dc_motor_intialize 22C8                   dc_motor_stop@_dc_motor 0042  
            lcd_4bit_intialize@l_counter 004E                          led_turn_off@led 0042  
                        led_turn_off@ret 0045                      keypad_intialize@ret 004A  
             __end_of_dc_motor_move_left 228A                                 ??___lmul 0040  
           lcd_4bit_send_command@command 0048                         dc_motor_stop@ret 0044  
                            __pbssCOMRAM 005C                    ??_lcd_4bit_set_cursor 004E  
                    led_intialiaze@F3027 0064                         _number_of_clicks 0061  
                    __end_of_led_turn_on 1CAE          gpio_pin_direction_intialize@ret 0040  
                        ??_dc_motor_stop 0044          gpio_pin_write_logic@_pin_config 0038  
                               ?___awdiv 0038                                 ?___awmod 0040  
                          _lcd_4bit_send 20C0                gpio_pin_write_logic@logic 003A  
                           _keypad_value 0066                                _led_green 0037  
                            __smallconst 1000                       _gpio_pin_intialize 1F82  
         ??_gpio_pin_direction_intialize 003A                      ?_gpio_pin_intialize 0042  
          __end_of_lcd_4bit_send_command 1F12                           ?_lcd_4bit_send 0042  
                     _lcd_4bit_intialize 17B0                 _lcd_4bit_send_string_pos 1BA6  
                   ??_gpio_pin_intialize 0044           lcd_4bit_send_char_data_pos@lcd 0051  
         lcd_4bit_send_char_data_pos@ret 0056           lcd_4bit_send_char_data_pos@row 0053  
                    ?_lcd_4bit_intialize 004A                                main@value 005A  
                            _led_turn_on 1C2C      __end_of_lcd_4bit_send_char_data_pos 21B8  
            _lcd_4bit_send_char_data_pos 2172                  gpio_pin_write_logic@ret 0041  
                      ___lmul@multiplier 0038                 ?_lcd_4bit_send_char_data 0046  
                              copy_data0 2314                        _keypad_read_value 2058  
                    _dc_motor_move_right 21FE                   gpio_pin_read_logic@ret 0041  
          ??_lcd_4bit_send_char_data_pos 0056                       ?_keypad_read_value 0038  
                   ??_lcd_4bit_intialize 004C                           led_turn_on@led 0042  
                         led_turn_on@ret 0045                                 __Hrparam 0000  
                               __Lrparam 0000                      ??_keypad_read_value 004D  
                 lcd_4bit_set_cursor@lcd 004A                   lcd_4bit_set_cursor@ret 0050  
                 lcd_4bit_set_cursor@row 004C                     ?_dc_motor_move_right 0042  
                     __end_of_btn_values 1011              __end_of_gpio_pin_read_logic 1A48  
            keypad_get_value@_keypad_obj 0042                                 __ptext10 1990  
                               __ptext11 21B8                                 __ptext20 1D30  
                               __ptext12 21FE                                 __ptext21 228A  
                               __ptext13 2244                                 __ptext22 1F82  
                               __ptext14 2128                                 __ptext23 1568  
                               __ptext15 1DB0                                 __ptext24 1424  
                               __ptext16 17B0                                 __ptext25 1FEE  
                               __ptext17 1EA0                                 __ptext26 1A48  
                               __ptext18 2336                                 __ptext27 18CC  
                               __ptext19 20C0                                 _app_init 2128  
              __end_of_keypad_read_value 20C0                   dc_motor_move_right@ret 0044  
           led_intialiaze@pin_config_obj 004A                                 _password 001F  
           __end_of_lcd_4bit_send_enable 236A                lcd_4bit_send@data_command 0044  
                       _keypad_get_value 1694                          ??_lcd_4bit_send 0045  
                               isa$xinst 0000                       _dc_motor_intialize 228A  
           keypad_intialize@rows_counter 004B             __end_of_lcd_4bit_send_string 1F82  
                  ??_dc_motor_move_right 0044                      ?_dc_motor_intialize 0046  
                     _dc_motor_move_left 2244                         _keypad_intialize 1D30  
         keypad_get_value@l_rows_counter 004B             __end_of_gpio_pin_write_logic 1694  
                    ?_dc_motor_move_left 0042                     ??_dc_motor_intialize 0048  
                   ??_dc_motor_move_left 0044             dc_motor_move_right@_dc_motor 0042  
            __end_of_lcd_4bit_set_cursor 1BA6                           _port_registers 000B  
            lcd_4bit_send_char_data@data 0048                    __end_of_dc_motor_stop 21FE  
             ??_lcd_4bit_send_string_pos 0057              dc_motor_intialize@_dc_motor 0046  
